[{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Istem Fer. Author, maintainer. Tony Gardella. Author. University Illinois, NCSA. Copyright holder.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Fer , Gardella T (2025). PEcAn.LPJGUESS: PEcAn Package Integration LPJ-GUESS Model. R package version 1.8.1, https://pecanproject.github.io.","code":"@Manual{,   title = {PEcAn.LPJGUESS: PEcAn Package for Integration of the LPJ-GUESS Model},   author = {Istem Fer and Tony Gardella},   year = {2025},   note = {R package version 1.8.1},   url = {https://pecanproject.github.io}, }"},{"path":"/index.html","id":"pecanlpjguess","dir":"","previous_headings":"","what":"PEcAn Package for Integration of the LPJ-GUESS Model","title":"PEcAn Package for Integration of the LPJ-GUESS Model","text":"PEcAn Package Integration LPJ-GUESS Model","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"PEcAn Package for Integration of the LPJ-GUESS Model","text":"can install development version PEcAn.LPJGUESS r-universe like : can install directly GitHub remotes package like :","code":"# Enable repository from pecanproject options(repos = c(   pecanproject = 'https://pecanproject.r-universe.dev',   CRAN = 'https://cloud.r-project.org')) # Download and install PEcAn.LPJGUESS in R install.packages('PEcAn.LPJGUESS') library(remotes) install_github('pecanproject/pecan',  subdir = \"models/lpjguess\")"},{"path":"/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"PEcAn Package for Integration of the LPJ-GUESS Model","text":"basic example shows solve common problem:","code":"library(PEcAn.LPJGUESS) ## basic example code"},{"path":"/reference/AbvGrndWood.html","id":null,"dir":"Reference","previous_headings":"","what":"AbvGrndWood — AbvGrndWood","title":"AbvGrndWood — AbvGrndWood","text":"Calculates -ground woody biomass LPJ-GUESS individual.","code":""},{"path":"/reference/AbvGrndWood.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AbvGrndWood — AbvGrndWood","text":"","code":"AbvGrndWood(individual, include.debt = TRUE)"},{"path":"/reference/AbvGrndWood.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"AbvGrndWood — AbvGrndWood","text":"individual nested list representing LPJ-GUESS individual binary state file. include.debt Logical; TRUE, includes carbon mass debt calculation.","code":""},{"path":"/reference/AbvGrndWood.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"AbvGrndWood — AbvGrndWood","text":"numeric value representing -ground woody biomass (kgC/m²).","code":""},{"path":"/reference/TotalCarbon.html","id":null,"dir":"Reference","previous_headings":"","what":"TotalCarbon — TotalCarbon","title":"TotalCarbon — TotalCarbon","text":"Calculates total carbon content LPJ-GUESS individual.","code":""},{"path":"/reference/TotalCarbon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TotalCarbon — TotalCarbon","text":"","code":"TotalCarbon(individual, include.debt = TRUE)"},{"path":"/reference/TotalCarbon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TotalCarbon — TotalCarbon","text":"individual nested list representing LPJ-GUESS individual binary state file. include.debt Logical; TRUE, includes carbon mass debt calculation.","code":""},{"path":"/reference/TotalCarbon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"TotalCarbon — TotalCarbon","text":"numeric value representing total carbon content (kgC/m²).","code":""},{"path":"/reference/adjust.biomass.LPJGUESS.html","id":null,"dir":"Reference","previous_headings":"","what":"Adjust LPJ-GUESS individual's biomass — adjust.biomass.LPJGUESS","title":"Adjust LPJ-GUESS individual's biomass — adjust.biomass.LPJGUESS","text":"function adjusts LPJ-GUESS individual calling LPJ-GUESS allocation function (compiled C++) given biomass change.  updates individual biomass pools directly, also returns, list adjustments litter pools.","code":""},{"path":"/reference/adjust.biomass.LPJGUESS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adjust LPJ-GUESS individual's biomass — adjust.biomass.LPJGUESS","text":"","code":"adjust.biomass.LPJGUESS(   individual,   biomass.inc,   sla,   wooddens,   lifeform,   k_latosa,   k_allom2,   k_allom3,   trace = TRUE )"},{"path":"/reference/adjust.biomass.LPJGUESS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adjust LPJ-GUESS individual's biomass — adjust.biomass.LPJGUESS","text":"individual nested list encapsulates LPJ-GUESS 'Individual' read binary state file biomass.inc numeric value specifying biomass increment applied. sla SLA (specific leaf area) (per PFT parameter) wooddens Wood density (kgC/m^2) (per PFT parameter) lifeform integer code lifeform individual (cohort): 1 = Tree, 2 = Grass k_latosa leaf area sapwood area ratio (per PFT parameter) k_allom2, k_allom3, Allometry coefficients (per PFT parameters) trace Logical; TRUE, prints details biomass adjustment process. changes C pools determined allocation.  changes N pools designed maintain pre-exisiing C:N ratios, N just scaled using updated C initial C:N ratio. N storage pools (nstore_longterm nstore_labile) pre-existing C:N ratios, just scaled overall biomass change ('rel.change' argument function). Note function called function allometry used update individual check newly updated individual 'valid' allometry. litter pools also updated. implemented update.state.LPJGUESS function following call adjust.biomass.LPJGUESS function.","code":""},{"path":"/reference/adjust.biomass.LPJGUESS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adjust LPJ-GUESS individual's biomass — adjust.biomass.LPJGUESS","text":"scaled 'individual' (initial nested list update values)","code":""},{"path":"/reference/adjust.biomass.LPJGUESS.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Adjust LPJ-GUESS individual's biomass — adjust.biomass.LPJGUESS","text":"Matthew Forrest","code":""},{"path":"/reference/adjust.density.LPJGUESS.html","id":null,"dir":"Reference","previous_headings":"","what":"Adjust LPJ-GUESS individual's density — adjust.density.LPJGUESS","title":"Adjust LPJ-GUESS individual's density — adjust.density.LPJGUESS","text":"simple function just scales density individuals associated C N pools relative amount","code":""},{"path":"/reference/adjust.density.LPJGUESS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adjust LPJ-GUESS individual's density — adjust.density.LPJGUESS","text":"","code":"adjust.density.LPJGUESS(individual, rel.change)"},{"path":"/reference/adjust.density.LPJGUESS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adjust LPJ-GUESS individual's density — adjust.density.LPJGUESS","text":"individual nested list encapsulates LPJ-GUESS 'Individual' read binary state file rel.change numeric scale density C N pools","code":""},{"path":"/reference/adjust.density.LPJGUESS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adjust LPJ-GUESS individual's density — adjust.density.LPJGUESS","text":"scaled 'individual' (initial nested list update values)","code":""},{"path":"/reference/adjust.density.LPJGUESS.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Adjust LPJ-GUESS individual's density — adjust.density.LPJGUESS","text":"Matthew Forrest","code":""},{"path":"/reference/allometry.html","id":null,"dir":"Reference","previous_headings":"","what":"LPJ-GUESS allometry — allometry","title":"LPJ-GUESS allometry — allometry","text":"LPJ-GUESS allometry function transcribed R.","code":""},{"path":"/reference/allometry.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"LPJ-GUESS allometry — allometry","text":"","code":"allometry(   lifeform,   cmass_leaf,   cmass_sap,   cmass_heart,   densindiv,   age,   fpc,   deltafpc,   sla,   k_latosa,   k_rp,   k_allom1,   k_allom2,   k_allom3,   wooddens,   crownarea_max,   HEIGHT_MAX = 150 )"},{"path":"/reference/allometry.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"LPJ-GUESS allometry — allometry","text":"lifeform integer code lifeform individual (cohort): 1 = Tree, 2 = Grass cmass_leaf leaf C pool size (kgC/m^2) cmass_sap sapwood C pool size (kgC/m^2) cmass_heart heartwood C pool size (kgC/m^2) densindiv density individuals cohort (indiv/m^2) age age coort fpc folar projective cover deltafpc change foliar projective cover sla SLA (specific leaf area) (per PFT parameter) k_latosa leaf area sapwood area ratio (per PFT parameter) k_rp, k_allom1, k_allom2, k_allom3, Allometry coefficients (per PFT parameters) wooddens Wood density (kgC/m^2) (per PFT parameter) crownarea_max Maximum allowed crown area (m^2)  (per PFT parameter) HEIGHT_MAX Maximum allowed height individual.  maximum height tree can .  hard-coded LPJ-GUESS 150 m, SDA might unrealistically big, argument allows adjustment. function transcribed LPJ-GUESS (v4.0) C++ R purpose nudging LPJ-GUESS state offline. idea course use output analysis step SDA routine provide nudged values, although relevant following code. Since original C++ code took argument LPJ-GUESS C++ class type 'Individual' way (knowledge) directly compiling using Rcpp (unlike allocation.cpp/allocation.R. easy compile native C++ using Rcpp changes). noted original function header taken C++ code (copied ), function run biomass values updated.  case means allocation() function applied individual. function can return following error codes:  1.  \"NegligibleLeafMass\" - individual negligible leaf biomass.  2.  \"MaxHeightExceeded\" - indidual exceeds maximum allowed height  3.  \"LowWoodDensity\" - individual's *actual* wood density drops 90  unphysical) requirement necessary sometimes LPJ-GUESS can take carbon heartwood  ensure C-balance.  think.  hockery-pockery. well code simply \"OK\".","code":""},{"path":"/reference/allometry.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"LPJ-GUESS allometry — allometry","text":"named list updated state variables individual/cohort.  first value list error code.","code":""},{"path":"/reference/allometry.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"LPJ-GUESS allometry — allometry","text":"Matthew Forrest","code":""},{"path":"/reference/calculateGridcellVariablePerPFT.html","id":null,"dir":"Reference","previous_headings":"","what":"calculateGridcellVariablePerPFT — calculateGridcellVariablePerPFT","title":"calculateGridcellVariablePerPFT — calculateGridcellVariablePerPFT","text":"Calculates per-PFT, gridcell-summed quantity LPJ-GUESS state, correctly averaging patches. put SDA procedure.","code":""},{"path":"/reference/calculateGridcellVariablePerPFT.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"calculateGridcellVariablePerPFT — calculateGridcellVariablePerPFT","text":"","code":"calculateGridcellVariablePerPFT(   model.state,   variable,   pft.params,   min.diam = 5 )"},{"path":"/reference/calculateGridcellVariablePerPFT.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"calculateGridcellVariablePerPFT — calculateGridcellVariablePerPFT","text":"model.state large multiply-nested list containing entire LPJ-GUESS state read function readStateBinary.LPJGUESS variable character string specifying variable extract.  can chosen based LPJ-GUESS variable name recorded big list list (represents describes model state R).  special case \"biomass\" returns sum \"cmass_leaf\", \"cmass_root\", \"cmass_sap\" \"cmass_heart\" pft.params data frame containing PFT parameters allometric coefficients. min.diam Minimum tree diameter (cm) required inclusion calculations.","code":""},{"path":"/reference/calculateGridcellVariablePerPFT.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"calculateGridcellVariablePerPFT — calculateGridcellVariablePerPFT","text":"numeric vector, one entry per PFT","code":""},{"path":"/reference/calculateGridcellVariablePerPFT.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"calculateGridcellVariablePerPFT — calculateGridcellVariablePerPFT","text":"Matthew Forrest","code":""},{"path":"/reference/extract_from_state_by_key.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract nested value from a state list using flat key — extract_from_state_by_key","title":"Extract nested value from a state list using flat key — extract_from_state_by_key","text":"Extract nested value state list using flat key","code":""},{"path":"/reference/extract_from_state_by_key.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract nested value from a state list using flat key — extract_from_state_by_key","text":"","code":"extract_from_state_by_key(state, key)"},{"path":"/reference/extract_from_state_by_key.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract nested value from a state list using flat key — extract_from_state_by_key","text":"state nested list (usually model.state$state) key flat string like \"Gridcell/Stand/1/Patch/1/Vegetation/Individuals/3/cmass_leaf\"","code":""},{"path":"/reference/extract_from_state_by_key.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract nested value from a state list using flat key — extract_from_state_by_key","text":"value stored nested position","code":""},{"path":"/reference/extract_from_state_by_key.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract nested value from a state list using flat key — extract_from_state_by_key","text":"Yinghao Sun","code":""},{"path":"/reference/find_closing.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Closing Bracket — find_closing","title":"Find Closing Bracket — find_closing","text":"Identifies line number matching closing bracket given opening bracket.","code":""},{"path":"/reference/find_closing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Closing Bracket — find_closing","text":"","code":"find_closing(find = \"}\", line_no, file_in, if_else_check = FALSE)"},{"path":"/reference/find_closing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Closing Bracket — find_closing","text":"find character string opening bracket. line_no numeric value indicating line number start search. file_in character vector file content. if_else_check Optional. logical value indicating whether check /else blocks (default FALSE).","code":""},{"path":"/reference/find_closing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find Closing Bracket — find_closing","text":"numeric value indicating line number matching closing bracket.","code":""},{"path":"/reference/find_stream_size.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Stream Size — find_stream_size","title":"Find Stream Size — find_stream_size","text":"Determines size (number variables) stream based file content.","code":""},{"path":"/reference/find_stream_size.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Stream Size — find_stream_size","text":"","code":"find_stream_size(   current_stream_type,   guessh_in,   LPJ_GUESS_TYPES,   LPJ_GUESS_CONST_INTS )"},{"path":"/reference/find_stream_size.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Stream Size — find_stream_size","text":"current_stream_type list containing details current stream. guessh_in character vector LPJ-GUESS header file content. LPJ_GUESS_TYPES character vector recognized LPJ-GUESS types. LPJ_GUESS_CONST_INTS dataframe mapping LPJ-GUESS constants values.","code":""},{"path":"/reference/find_stream_size.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find Stream Size — find_stream_size","text":"numeric value representing size (number streamed variables).","code":""},{"path":"/reference/find_stream_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Stream Type — find_stream_type","title":"Find Stream Type — find_stream_type","text":"Determines type given stream variable LPJ-GUESS file.","code":""},{"path":"/reference/find_stream_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Stream Type — find_stream_type","text":"","code":"find_stream_type(   class = NULL,   current_stream_var,   LPJ_GUESS_CLASSES,   LPJ_GUESS_TYPES,   guessh_in )"},{"path":"/reference/find_stream_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Stream Type — find_stream_type","text":"class character string representing class stream variable (default NULL). current_stream_var character string representing current stream variable. LPJ_GUESS_CLASSES character vector LPJ-GUESS class names. LPJ_GUESS_TYPES character vector recognized LPJ-GUESS types. guessh_in character vector LPJ-GUESS header file content.","code":""},{"path":"/reference/find_stream_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find Stream Type — find_stream_type","text":"character string indicating stream type.","code":""},{"path":"/reference/find_stream_var.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Stream Variable — find_stream_var","title":"Find Stream Variable — find_stream_var","text":"helper function lists streamed variables. returns names streamed variables.","code":""},{"path":"/reference/find_stream_var.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Stream Variable — find_stream_var","text":"","code":"find_stream_var(file_in, line_nos)"},{"path":"/reference/find_stream_var.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Stream Variable — find_stream_var","text":"file_in character vector representing file content search . line_nos numeric vector length 2, specifying start end lines search streamed variables.","code":""},{"path":"/reference/find_stream_var.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find Stream Variable — find_stream_var","text":"character vector streamed variable names.","code":""},{"path":"/reference/met2model.LPJGUESS.html","id":null,"dir":"Reference","previous_headings":"","what":"met2model.LPJGUESS — met2model.LPJGUESS","title":"met2model.LPJGUESS — met2model.LPJGUESS","text":"met2model wrapper LPJ-GUESS","code":""},{"path":"/reference/met2model.LPJGUESS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"met2model.LPJGUESS — met2model.LPJGUESS","text":"","code":"met2model.LPJGUESS(   in.path,   in.prefix,   outfolder,   start_date,   end_date,   overwrite = FALSE,   verbose = FALSE,   ... )"},{"path":"/reference/met2model.LPJGUESS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"met2model.LPJGUESS — met2model.LPJGUESS","text":".path location disk inputs stored .prefix prefix input output files outfolder location disk outputs stored start_date start date data downloaded (use year part date) end_date end date data downloaded (use year part date) overwrite existing files overwritten verbose function verbose ... additional arguments, currently ignored","code":""},{"path":"/reference/met2model.LPJGUESS.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"met2model.LPJGUESS — met2model.LPJGUESS","text":"Istem Fer","code":""},{"path":"/reference/model2netcdf.LPJGUESS.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to convert LPJ-GUESS model output to standard netCDF format — model2netcdf.LPJGUESS","title":"Function to convert LPJ-GUESS model output to standard netCDF format — model2netcdf.LPJGUESS","text":"Convert LPJ-GUESS output netCDF","code":""},{"path":"/reference/model2netcdf.LPJGUESS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to convert LPJ-GUESS model output to standard netCDF format — model2netcdf.LPJGUESS","text":"","code":"model2netcdf.LPJGUESS(outdir, sitelat, sitelon, start_date, end_date)"},{"path":"/reference/model2netcdf.LPJGUESS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to convert LPJ-GUESS model output to standard netCDF format — model2netcdf.LPJGUESS","text":"outdir Location LPJ-GUESS model output sitelat Latitude site sitelon Longitude site start_date Start time simulation end_date End time simulation","code":""},{"path":"/reference/model2netcdf.LPJGUESS.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Function to convert LPJ-GUESS model output to standard netCDF format — model2netcdf.LPJGUESS","text":"Istem Fer","code":""},{"path":"/reference/pecan2lpjguess.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to translate pecan param names and units to lpjguess names and units — pecan2lpjguess","title":"Function to translate pecan param names and units to lpjguess names and units — pecan2lpjguess","text":"Function translate pecan param names units lpjguess names units","code":""},{"path":"/reference/pecan2lpjguess.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to translate pecan param names and units to lpjguess names and units — pecan2lpjguess","text":"","code":"pecan2lpjguess(trait.values)"},{"path":"/reference/pecan2lpjguess.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to translate pecan param names and units to lpjguess names and units — pecan2lpjguess","text":"trait.values trait.values, list","code":""},{"path":"/reference/pecan2lpjguess.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to translate pecan param names and units to lpjguess names and units — pecan2lpjguess","text":"translated list","code":""},{"path":"/reference/pecan2lpjguess.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Function to translate pecan param names and units to lpjguess names and units — pecan2lpjguess","text":"Istem Fer","code":""},{"path":"/reference/readStateBinary.html","id":null,"dir":"Reference","previous_headings":"","what":"readStateBinary.LPJGUESS — readStateBinary","title":"readStateBinary.LPJGUESS — readStateBinary","text":"read binary state file LPJ-GUESS","code":""},{"path":"/reference/readStateBinary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"readStateBinary.LPJGUESS — readStateBinary","text":"","code":"readStateBinary(out.path, npft)"},{"path":"/reference/readStateBinary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"readStateBinary.LPJGUESS — readStateBinary","text":".path location disk model run outputs stored npft number pfts specified instruction file","code":""},{"path":"/reference/readStateBinary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"readStateBinary.LPJGUESS — readStateBinary","text":"Patchpft_list state variables common individuals particular PFT","code":""},{"path":"/reference/readStateBinary.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"readStateBinary.LPJGUESS — readStateBinary","text":"Istem Fer","code":""},{"path":"/reference/read_binary_LPJGUESS.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Binary File for LPJ-GUESS — read_binary_LPJGUESS","title":"Read Binary File for LPJ-GUESS — read_binary_LPJGUESS","text":"Reads binary file formatted LPJ-GUESS extracts relevant data.","code":""},{"path":"/reference/read_binary_LPJGUESS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Binary File for LPJ-GUESS — read_binary_LPJGUESS","text":"","code":"read_binary_LPJGUESS(outdir, version = \"PalEON\")"},{"path":"/reference/read_binary_LPJGUESS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Binary File for LPJ-GUESS — read_binary_LPJGUESS","text":"outdir output directory \".state\" \"meta.bin\" written version character string specifying LPJ-GUESS version (default \"PalEON\").","code":""},{"path":"/reference/read_binary_LPJGUESS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Binary File for LPJ-GUESS — read_binary_LPJGUESS","text":"matrix list containing extracted data.","code":""},{"path":"/reference/read_binary_LPJGUESS.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read Binary File for LPJ-GUESS — read_binary_LPJGUESS","text":"Istem Fer, Yinghao Sun","code":""},{"path":"/reference/read_restart.LPJGUESS.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Restart for LPJGUESS — read_restart.LPJGUESS","title":"Read Restart for LPJGUESS — read_restart.LPJGUESS","text":"Read Restart LPJGUESS","code":""},{"path":"/reference/read_restart.LPJGUESS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Restart for LPJGUESS — read_restart.LPJGUESS","text":"","code":"read_restart.LPJGUESS(outdir, runid, stop.time, settings, var.names, params)"},{"path":"/reference/read_restart.LPJGUESS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Restart for LPJGUESS — read_restart.LPJGUESS","text":"outdir output directory runid run ID stop.time year read settings PEcAn settings object var.names var.names extracted params passed return value","code":""},{"path":"/reference/read_restart.LPJGUESS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Restart for LPJGUESS — read_restart.LPJGUESS","text":"X_tmp      vector forecasts","code":""},{"path":"/reference/read_restart.LPJGUESS.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read Restart for LPJGUESS — read_restart.LPJGUESS","text":"Istem Fer, Yinghao Sun","code":""},{"path":"/reference/read_restart.LPJGUESS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Restart for LPJGUESS — read_restart.LPJGUESS","text":"","code":"if (FALSE) { # \\dontrun{   rx <- read_restart.LPJGUESS(            outdir   = \"/projectnb/…/LPJ_output\",            runid    = \"123456\",            stop.time = as.POSIXct(\"2001-12-31 23:59:59\", tz = \"UTC\"),            settings = settings,            var.names = c(\"AGB.pft\"),            params = params) } # }"},{"path":"/reference/read_state.html","id":null,"dir":"Reference","previous_headings":"","what":"Read State File — read_state","title":"Read State File — read_state","text":"Reads state file processes contents use.","code":""},{"path":"/reference/read_state.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read State File — read_state","text":"","code":"read_state(file_path)"},{"path":"/reference/read_state.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read State File — read_state","text":"file_path character string specifying path state file.","code":""},{"path":"/reference/read_state.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read State File — read_state","text":"list containing processed state information.","code":""},{"path":"/reference/serialize_starts_ends.html","id":null,"dir":"Reference","previous_headings":"","what":"Serialize Starts and Ends — serialize_starts_ends","title":"Serialize Starts and Ends — serialize_starts_ends","text":"Finds start end lines serialization.","code":""},{"path":"/reference/serialize_starts_ends.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Serialize Starts and Ends — serialize_starts_ends","text":"","code":"serialize_starts_ends(file_in, pattern = \"void Gridcell::serialize\")"},{"path":"/reference/serialize_starts_ends.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Serialize Starts and Ends — serialize_starts_ends","text":"file_in character vector file lines search . pattern character string pattern look file.","code":""},{"path":"/reference/serialize_starts_ends.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Serialize Starts and Ends — serialize_starts_ends","text":"numeric vector length 2, giving start end line numbers.","code":""},{"path":"/reference/split_inputs.LPJGUESS.html","id":null,"dir":"Reference","previous_headings":"","what":"Split inputs for LPJ-GUESS model — split_inputs.LPJGUESS","title":"Split inputs for LPJ-GUESS model — split_inputs.LPJGUESS","text":"Splits climate met LPJGUESS","code":""},{"path":"/reference/split_inputs.LPJGUESS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split inputs for LPJ-GUESS model — split_inputs.LPJGUESS","text":"","code":"split_inputs.LPJGUESS(   settings,   start.time,   stop.time,   inputs,   overwrite = FALSE,   outpath = NULL )"},{"path":"/reference/split_inputs.LPJGUESS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split inputs for LPJ-GUESS model — split_inputs.LPJGUESS","text":"settings PEcAn settings object start.time start date time SDA ensemble stop.time stop date time SDA ensemble inputs list model inputs use write.configs.LPJGUESS overwrite Default FALSE outpath specified, write output new directory. Default NULL writes back directory read","code":""},{"path":"/reference/split_inputs.LPJGUESS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split inputs for LPJ-GUESS model — split_inputs.LPJGUESS","text":"name split met file","code":""},{"path":"/reference/split_inputs.LPJGUESS.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Split inputs for LPJ-GUESS model — split_inputs.LPJGUESS","text":"Istem Fer","code":""},{"path":"/reference/update_state_LPJGUESS.html","id":null,"dir":"Reference","previous_headings":"","what":"updateState.LPJGUESS — update_state_LPJGUESS","title":"updateState.LPJGUESS — update_state_LPJGUESS","text":"Adjust LPJ-GUESS state variables based input parameters.","code":""},{"path":"/reference/update_state_LPJGUESS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"updateState.LPJGUESS — update_state_LPJGUESS","text":"","code":"update_state_LPJGUESS(   model.state,   pft.params,   dens.initial,   dens.target,   AbvGrndWood.initial,   AbvGrndWood.target,   AbvGrndWood.epsilon,   trace,   min.diam,   HEIGHT_MAX = 150 )"},{"path":"/reference/update_state_LPJGUESS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"updateState.LPJGUESS — update_state_LPJGUESS","text":"model.state large multiply-nested list containing entire LPJ-GUESS state read function readStateBinary.LPJGUESS pft.params data.frame containing parameters PFT.  row represents one PFT (ordering must consistent vectors . names columns describe per-PFT parameter must include: wooddens, crownarea_max, lifeform (1 = tree, 2 = grass), k_latosa, k_rp, k_allom1,  k_allom2, k_allom3, crownarea_max sla. wooddens, crownarea_max, lifeform (1 = tree, 2 = grass), k_latosa, k_rp, k_allom1,  k_allom2, k_allom3, crownarea_max sla. dens.initial numeric vector initial stand-level stem densities (indiv/m^2) named numeric vector one entry per PFT/species, names PFT/species codes.  values produced using state data assimilation function XXXXXX. dens.target numeric vector target stand-level stem densities (indiv/m^2) named numeric vector one entry per PFT/species, names PFT/species codes.  values produced using state data assimilation function XXXXXX AbvGrndWood.initial numeric vector target stand-level ground wood (kgC/m^2) named numeric vector one entry per PFT/species, names PFT/species codes.  values produced using state data assimilation function XXXXXX AbvGrndWood.target numeric vector target stand-level ground wood (kgC/m^2) named numeric vector one entry per PFT/species, names PFT/species codes.  values produced using state data assimilation function XXXXXX AbvGrndWood.epsilon single numeric specifying close final ground wood needs target ground stem biomass individual.  eg. 0.05 requires final ground wood within 5 target ground wood trace Logical; TRUE, prints detailed adjustment process information. min.diam Minimum tree diameter (cm) inclusion adjustments. HEIGHT_MAX Maximum allowed height individual.  maximum height tree can .  hard-coded LPJ-GUESS 150 m, SDA might unrealistically big, argument allows adjustment.","code":""},{"path":"/reference/update_state_LPJGUESS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"updateState.LPJGUESS — update_state_LPJGUESS","text":"updated model state (big old list o' lists)","code":""},{"path":"/reference/update_state_LPJGUESS.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"updateState.LPJGUESS — update_state_LPJGUESS","text":"Adjust LPJ-GUESS state","code":""},{"path":"/reference/update_state_LPJGUESS.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"updateState.LPJGUESS — update_state_LPJGUESS","text":"Matthew Forrest","code":""},{"path":"/reference/write.config.LPJGUESS.html","id":null,"dir":"Reference","previous_headings":"","what":"Write LPJ-GUESS configuration files — write.config.LPJGUESS","title":"Write LPJ-GUESS configuration files — write.config.LPJGUESS","text":"Writes LPJ-GUESS config file.","code":""},{"path":"/reference/write.config.LPJGUESS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write LPJ-GUESS configuration files — write.config.LPJGUESS","text":"","code":"write.config.LPJGUESS(defaults, trait.values, settings, run.id, restart = NULL)"},{"path":"/reference/write.config.LPJGUESS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write LPJ-GUESS configuration files — write.config.LPJGUESS","text":"defaults list defaults process trait.values vector samples given trait settings list settings pecan settings file run.id id run restart Logical, whether restart simulation.","code":""},{"path":"/reference/write.config.LPJGUESS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write LPJ-GUESS configuration files — write.config.LPJGUESS","text":"configuration file LPJ-GUESS given run","code":""},{"path":"/reference/write.config.LPJGUESS.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Write LPJ-GUESS configuration files — write.config.LPJGUESS","text":"Requires pft xml object, list trait values single model run, name file create","code":""},{"path":"/reference/write.config.LPJGUESS.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Write LPJ-GUESS configuration files — write.config.LPJGUESS","text":"Istem Fer, Tony Gardella","code":""},{"path":"/reference/write.insfile.LPJGUESS.html","id":null,"dir":"Reference","previous_headings":"","what":"Write LPJ-GUESS instruction script — write.insfile.LPJGUESS","title":"Write LPJ-GUESS instruction script — write.insfile.LPJGUESS","text":"Write LPJ-GUESS instruction script","code":""},{"path":"/reference/write.insfile.LPJGUESS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write LPJ-GUESS instruction script — write.insfile.LPJGUESS","text":"","code":"write.insfile.LPJGUESS(   settings,   trait.values,   rundir,   outdir,   run.id,   restart = NULL )"},{"path":"/reference/write.insfile.LPJGUESS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write LPJ-GUESS instruction script — write.insfile.LPJGUESS","text":"settings PEcAn settings list trait.values trait.values rundir rundir outdir outdir run.id PEcAn run ID restart Logical, whether restart simulation.","code":""},{"path":"/reference/write.insfile.LPJGUESS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write LPJ-GUESS instruction script — write.insfile.LPJGUESS","text":"settings Updated list","code":""},{"path":"/reference/write.insfile.LPJGUESS.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Write LPJ-GUESS instruction script — write.insfile.LPJGUESS","text":"Istem Fer","code":""},{"path":"/reference/write_binary_LPJGUESS.html","id":null,"dir":"Reference","previous_headings":"","what":"Write updated variables into a copy of the original LPJ-GUESS .state file — write_binary_LPJGUESS","title":"Write updated variables into a copy of the original LPJ-GUESS .state file — write_binary_LPJGUESS","text":"Write updated variables copy original LPJ-GUESS .state file","code":""},{"path":"/reference/write_binary_LPJGUESS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write updated variables into a copy of the original LPJ-GUESS .state file — write_binary_LPJGUESS","text":"","code":"write_binary_LPJGUESS(State_updated, outdir)"},{"path":"/reference/write_binary_LPJGUESS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write updated variables into a copy of the original LPJ-GUESS .state file — write_binary_LPJGUESS","text":"State_updated list containing updated state variables, position list size list (get read_binary) outdir Path directory containing `0.state` `meta.bin` files.","code":""},{"path":"/reference/write_binary_LPJGUESS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write updated variables into a copy of the original LPJ-GUESS .state file — write_binary_LPJGUESS","text":"return value. Writes files disk side effect.","code":""},{"path":"/reference/write_binary_LPJGUESS.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Write updated variables into a copy of the original LPJ-GUESS .state file — write_binary_LPJGUESS","text":"Yinghao Sun","code":""},{"path":"/reference/write_restart.LPJGUESS.html","id":null,"dir":"Reference","previous_headings":"","what":"write_restart.LPJGUESS — write_restart.LPJGUESS","title":"write_restart.LPJGUESS — write_restart.LPJGUESS","text":"Write restart files LPJGUESS new.state includes X (AGB.pft) Analysis new.params includes LPJGUESS_state","code":""},{"path":"/reference/write_restart.LPJGUESS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"write_restart.LPJGUESS — write_restart.LPJGUESS","text":"","code":"write_restart.LPJGUESS(   outdir,   runid,   start.time,   stop.time,   settings,   new.state,   RENAME = TRUE,   new.params,   inputs = NULL,   verbose = FALSE )"},{"path":"/reference/write_restart.LPJGUESS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"write_restart.LPJGUESS — write_restart.LPJGUESS","text":"outdir output directory runid run ID start.time start date time SDA ensemble stop.time stop date time SDA ensemble settings PEcAn settings object new.state analysis state vector RENAME flag either rename output file new.params list parameters convert different states inputs list model inputs use write.configs.SIPNET verbose decide want print runid","code":""},{"path":"/reference/write_restart.LPJGUESS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"write_restart.LPJGUESS — write_restart.LPJGUESS","text":"NONE","code":""},{"path":"/reference/write_restart.LPJGUESS.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"write_restart.LPJGUESS — write_restart.LPJGUESS","text":"Yinghao Sun","code":""},{"path":"/news/index.html","id":"pecanlpjguess-181","dir":"Changelog","previous_headings":"","what":"PEcAn.LPJGUESS 1.8.1","title":"PEcAn.LPJGUESS 1.8.1","text":"model2netcdf.LPJGUESS longer writes separate <year>.nc.var files every year output. Use PEcAn.utils::nc_write_varfiles() create needed.","code":""},{"path":"/news/index.html","id":"pecanlpjguess-180","dir":"Changelog","previous_headings":"","what":"PEcAn.LPJGUESS 1.8.0","title":"PEcAn.LPJGUESS 1.8.0","text":"PEcAn.LPJGUESS now distributed BSD three-clause license instead NCSA Open Source license. Support model restarting SDA","code":""},{"path":"/news/index.html","id":"pecanlpjguess-171","dir":"Changelog","previous_headings":"","what":"PEcAn.LPJGUESS 1.7.1","title":"PEcAn.LPJGUESS 1.7.1","text":"changes 1.7.1 earlier recorded single file PEcAn packages; please see https://github.com/PecanProject/pecan/blob/v1.7.1/CHANGELOG.md details.","code":""}]
