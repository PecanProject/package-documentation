[{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Mike Dietze. Author, maintainer. David LeBauer. Author. Xiaohui Feng. Contributor. Dan Wang. Contributor. Carl Davidson. Contributor. Rob Kooper. Contributor. Alexey Shiklomanov. Contributor. University Illinois, NCSA. Copyright holder.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Dietze M, LeBauer D (2025). PEcAn.data.land: PEcAn Functions Used Ecological Forecasts Reanalysis. R package version 1.8.2, https://pecanproject.github.io.","code":"@Manual{,   title = {PEcAn.data.land: PEcAn Functions Used for Ecological Forecasts and Reanalysis},   author = {Mike Dietze and David LeBauer},   year = {2025},   note = {R package version 1.8.2},   url = {https://pecanproject.github.io}, }"},{"path":"/index.html","id":"pecandataland","dir":"","previous_headings":"","what":"PEcAn Functions Used for Ecological Forecasts and Reanalysis","title":"PEcAn Functions Used for Ecological Forecasts and Reanalysis","text":"PEcAn Functions Used Ecological Forecasts Reanalysis","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"PEcAn Functions Used for Ecological Forecasts and Reanalysis","text":"can install development version PEcAn.data.land r-universe like : can install directly GitHub remotes package like :","code":"# Enable repository from pecanproject options(repos = c(   pecanproject = 'https://pecanproject.r-universe.dev',   CRAN = 'https://cloud.r-project.org')) # Download and install PEcAn.data.land in R install.packages('PEcAn.data.land') library(remotes) install_github('pecanproject/pecan',  subdir = \"modules/data.land\")"},{"path":"/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"PEcAn Functions Used for Ecological Forecasts and Reanalysis","text":"basic example shows solve common problem:","code":"library(PEcAn.data.land) ## basic example code"},{"path":"/reference/BADM.html","id":null,"dir":"Reference","previous_headings":"","what":"Biomass and soil data from FluxNet sites — BADM","title":"Biomass and soil data from FluxNet sites — BADM","text":"Contains data 246 Fluxnet sites. Variables include aboveground belowground biomass various pools,   plus soil texture/chemistry/horizonation/C&N stocks.","code":""},{"path":"/reference/BADM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Biomass and soil data from FluxNet sites — BADM","text":"","code":"BADM"},{"path":"/reference/BADM.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Biomass and soil data from FluxNet sites — BADM","text":"## `BADM` data frame 12,300 rows 13 columns: SITE_ID Fluxnet code site LOCATION_ELEV, LOCATION_LAT, LOCATION_LON site coordinates Date Measurement date GROUP_ID TODO VARIABLE_GROUP category, eg abovground biomass soil chemistry VARIABLE, DATAVALUE key value measured variable NA_L1CODE, NA_L1NAME, NA_L2CODE, NA_L2NAME numeric IDs names Level 1 level 2 ecoregions \tsite located","code":""},{"path":"/reference/BADM.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Biomass and soil data from FluxNet sites — BADM","text":"Originally Fluxnet <https://fluxnet.org/badm-data-product/>,  provenence age specific file clear.","code":""},{"path":"/reference/BADM_IC_process.html","id":null,"dir":"Reference","previous_headings":"","what":"BADM_IC_process — BADM_IC_process","title":"BADM_IC_process — BADM_IC_process","text":"BADM_IC_process","code":""},{"path":"/reference/BADM_IC_process.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"BADM_IC_process — BADM_IC_process","text":"","code":"BADM_IC_process(settings, dir, overwrite = TRUE)"},{"path":"/reference/BADM_IC_process.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"BADM_IC_process — BADM_IC_process","text":"settings pecan xml settings dir output dir want store IC netcdf file overwrite Flag overwriting IC file.","code":""},{"path":"/reference/BADM_IC_process.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"BADM_IC_process — BADM_IC_process","text":"list paths generated stored IC files.","code":""},{"path":"/reference/Clean_Tucson.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean_Tucson — Clean_Tucson","title":"Clean_Tucson — Clean_Tucson","text":"tree core QAQC","code":""},{"path":"/reference/Clean_Tucson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean_Tucson — Clean_Tucson","text":"","code":"Clean_Tucson(file)"},{"path":"/reference/Clean_Tucson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean_Tucson — Clean_Tucson","text":"file WinDendro output","code":""},{"path":"/reference/EPA_ecoregion_finder.html","id":null,"dir":"Reference","previous_headings":"","what":"EPA_ecoregion_finder — EPA_ecoregion_finder","title":"EPA_ecoregion_finder — EPA_ecoregion_finder","text":"function designed find level1 level2 code ecoregions given lat long. can learn ecoregions : https://www.epa.gov/eco-research/ecoregions.","code":""},{"path":"/reference/EPA_ecoregion_finder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"EPA_ecoregion_finder — EPA_ecoregion_finder","text":"","code":"EPA_ecoregion_finder(Lat, Lon, folder.path = NULL)"},{"path":"/reference/EPA_ecoregion_finder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"EPA_ecoregion_finder — EPA_ecoregion_finder","text":"Lat numeric latitude Lon numeric longitude folder.path path directory store shape files L1 L2 ecoregion maps.","code":""},{"path":"/reference/EPA_ecoregion_finder.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"EPA_ecoregion_finder — EPA_ecoregion_finder","text":"dataframe codes corresponding level1 level2 codes two columns","code":""},{"path":"/reference/IC_ISCN_SOC.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract ISCN SOC initial conditions from existing ISCN database. — IC_ISCN_SOC","title":"Extract ISCN SOC initial conditions from existing ISCN database. — IC_ISCN_SOC","text":"Extract ISCN SOC initial conditions existing ISCN database.","code":""},{"path":"/reference/IC_ISCN_SOC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract ISCN SOC initial conditions from existing ISCN database. — IC_ISCN_SOC","text":"","code":"IC_ISCN_SOC(site_info, ens = 100, ecoregion.path = NULL)"},{"path":"/reference/IC_ISCN_SOC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract ISCN SOC initial conditions from existing ISCN database. — IC_ISCN_SOC","text":"site_info Bety list site info including site_id, lon, lat. ens ensemble number. ecoregion.path path directory store shape files L1 L2 ecoregion maps.","code":""},{"path":"/reference/IC_ISCN_SOC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract ISCN SOC initial conditions from existing ISCN database. — IC_ISCN_SOC","text":"data frame containing sampled SOC, row represent site.","code":""},{"path":"/reference/IC_ISCN_SOC.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract ISCN SOC initial conditions from existing ISCN database. — IC_ISCN_SOC","text":"Dongchen Zhang","code":""},{"path":"/reference/InventoryGrowthFusion.html","id":null,"dir":"Reference","previous_headings":"","what":"InventoryGrowthFusion — InventoryGrowthFusion","title":"InventoryGrowthFusion — InventoryGrowthFusion","text":"code fuses forest inventory data tree growth data (tree ring dendrometer band) plots. Code rewrite Clark et al 2007 Ecol Appl JAGS","code":""},{"path":"/reference/InventoryGrowthFusion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"InventoryGrowthFusion — InventoryGrowthFusion","text":"","code":"InventoryGrowthFusion(   data,   cov.data = NULL,   time_data = NULL,   n.iter = 5000,   n.chunk = n.iter,   n.burn = min(n.chunk, 2000),   random = NULL,   fixed = NULL,   time_varying = NULL,   burnin_plot = FALSE,   save.jags = \"IGF.txt\",   z0 = NULL,   save.state = TRUE,   restart = NULL )"},{"path":"/reference/InventoryGrowthFusion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"InventoryGrowthFusion — InventoryGrowthFusion","text":"data list data inputs cov.data covariate data time_data required time_varying provided n.iter total number iterations across chunks n.chunk number MCMC steps evaluate time. return LAST. restarting, second number vector chunk start n.burn number steps automatically discard burn-random whether include random effects fixed formula fixed effects time_varying formula time-varying effects burnin_plot logical: display plot burnin steps? save.jags logical: Save generated JAGS script? z0 initial conditions state variable save.state whether include inferred DBH output (can large). Enter numeric value save.state periodically (terms n.chunk) restart final mcmc.list previous execution. NULL new run. TRUE save final state new run.","code":""},{"path":"/reference/InventoryGrowthFusion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"InventoryGrowthFusion — InventoryGrowthFusion","text":"mcmc.list object","code":""},{"path":"/reference/InventoryGrowthFusion.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"InventoryGrowthFusion — InventoryGrowthFusion","text":"Requires JAGS","code":""},{"path":"/reference/InventoryGrowthFusionDiagnostics.html","id":null,"dir":"Reference","previous_headings":"","what":"InventoryGrowthFusionDiagnostics — InventoryGrowthFusionDiagnostics","title":"InventoryGrowthFusionDiagnostics — InventoryGrowthFusionDiagnostics","text":"InventoryGrowthFusionDiagnostics","code":""},{"path":"/reference/InventoryGrowthFusionDiagnostics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"InventoryGrowthFusionDiagnostics — InventoryGrowthFusionDiagnostics","text":"","code":"InventoryGrowthFusionDiagnostics(jags.out, combined = NULL)"},{"path":"/reference/InventoryGrowthFusionDiagnostics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"InventoryGrowthFusionDiagnostics — InventoryGrowthFusionDiagnostics","text":"jags.output mcmc.list InventoryGrowthFusion combined data output matchInventoryRings","code":""},{"path":"/reference/InventoryGrowthFusionDiagnostics.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"InventoryGrowthFusionDiagnostics — InventoryGrowthFusionDiagnostics","text":"Michael Dietze","code":""},{"path":"/reference/Read.IC.info.BADM.html","id":null,"dir":"Reference","previous_headings":"","what":"Read.IC.info.BADM — Read.IC.info.BADM","title":"Read.IC.info.BADM — Read.IC.info.BADM","text":"function returns dataframe plant biomass, root soil carbon set lat long coordinates. function first finds level1 level2 ecoregions  given coordinates, tries filter BADM database eco-regions. data found BADM database given lat/longs eco-regions, data database used return initial condition. variables also converted kg/m^2.","code":""},{"path":"/reference/Read.IC.info.BADM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read.IC.info.BADM — Read.IC.info.BADM","text":"","code":"Read.IC.info.BADM(lat, long)"},{"path":"/reference/Read.IC.info.BADM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read.IC.info.BADM — Read.IC.info.BADM","text":"lat numeric latitude long numeric longitude","code":""},{"path":"/reference/Read.IC.info.BADM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read.IC.info.BADM — Read.IC.info.BADM","text":"dataframe 7 columns Site, Variable, Date, Organ, AGB, soil_organic_carbon_content, litter_carbon_content.   Variable return object refers value called inside BADM database.","code":""},{"path":"/reference/Read.IC.info.BADM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read.IC.info.BADM — Read.IC.info.BADM","text":"","code":"if (FALSE) { # \\dontrun{   badm_test <- Read.IC.info.BADM(45.805925,-90.07961) } # }"},{"path":"/reference/Read_Tucson.html","id":null,"dir":"Reference","previous_headings":"","what":"Read_Tucson — Read_Tucson","title":"Read_Tucson — Read_Tucson","text":"wrapper around read.tucson loads whole directory tree ring files calls 'clean' function removes redundant records (WinDendro can sometimes create duplicate records editing)","code":""},{"path":"/reference/Read_Tucson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read_Tucson — Read_Tucson","text":"","code":"Read_Tucson(folder)"},{"path":"/reference/Read_Tucson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read_Tucson — Read_Tucson","text":"folder path read files . read files path matching \"TXT\", \"rwl\", \"rw\"","code":""},{"path":"/reference/Soilgrids_SoilC_prep.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare Soilgrids SoilC data for the SDA workflow. — Soilgrids_SoilC_prep","title":"Prepare Soilgrids SoilC data for the SDA workflow. — Soilgrids_SoilC_prep","text":"Prepare Soilgrids SoilC data SDA workflow.","code":""},{"path":"/reference/Soilgrids_SoilC_prep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare Soilgrids SoilC data for the SDA workflow. — Soilgrids_SoilC_prep","text":"","code":"Soilgrids_SoilC_prep(   site_info,   start_date,   end_date,   time_points,   outdir = NULL,   export_csv = FALSE )"},{"path":"/reference/Soilgrids_SoilC_prep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare Soilgrids SoilC data for the SDA workflow. — Soilgrids_SoilC_prep","text":"site_info Bety list site info including site_id, lon, lat. start_date Start date SDA workflow. end_date End date SDA workflow. time_points vector contains time point within start end date. outdir final CSV file stored. export_csv Decide want export CSV file.","code":""},{"path":"/reference/Soilgrids_SoilC_prep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare Soilgrids SoilC data for the SDA workflow. — Soilgrids_SoilC_prep","text":"data frame containing AGB median sd site time step.","code":""},{"path":"/reference/Soilgrids_SoilC_prep.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Prepare Soilgrids SoilC data for the SDA workflow. — Soilgrids_SoilC_prep","text":"Dongchen Zhang","code":""},{"path":"/reference/buildJAGSdata_InventoryRings.html","id":null,"dir":"Reference","previous_headings":"","what":"Format ring & plot data for JAGA — buildJAGSdata_InventoryRings","title":"Format ring & plot data for JAGA — buildJAGSdata_InventoryRings","text":"builds JAGS data object tree ring / inventory fusion code also sets priors","code":""},{"path":"/reference/buildJAGSdata_InventoryRings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format ring & plot data for JAGA — buildJAGSdata_InventoryRings","text":"","code":"buildJAGSdata_InventoryRings(combined, inc.unit.conv = 0.1)"},{"path":"/reference/buildJAGSdata_InventoryRings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format ring & plot data for JAGA — buildJAGSdata_InventoryRings","text":"combined object returned matchInventoryRings. Matrix increment plot data inc.unit.conv conversion factor loaded increments cm (radius)","code":""},{"path":"/reference/buildJAGSdata_InventoryRings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format ring & plot data for JAGA — buildJAGSdata_InventoryRings","text":"list","code":""},{"path":"/reference/buildJAGSdata_InventoryRings.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Format ring & plot data for JAGA — buildJAGSdata_InventoryRings","text":"Michael Dietze","code":""},{"path":"/reference/clip_and_save_raster_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Clip and Save a Raster File — clip_and_save_raster_file","title":"Clip and Save a Raster File — clip_and_save_raster_file","text":"Clips raster polygon bounding box, optionally masks polygon, saves output format input.","code":""},{"path":"/reference/clip_and_save_raster_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clip and Save a Raster File — clip_and_save_raster_file","text":"","code":"clip_and_save_raster_file(   input_path,   polygon,   out_path,   mask = TRUE,   overwrite = TRUE )"},{"path":"/reference/clip_and_save_raster_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clip and Save a Raster File — clip_and_save_raster_file","text":"input_path Character. Path input raster file. polygon object file coercible `SpatVector` `terra::vect()` (e.g., `sf` object, `SpatVector`, file path vector dataset). used clipping masking. Must valid CRS. out_path Character. Path save processed raster. mask Logical: pixels outside polygon inside bounding box masked (TRUE) included (FALSE)? overwrite Logical: Replace output file already exists?","code":""},{"path":"/reference/clip_and_save_raster_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clip and Save a Raster File — clip_and_save_raster_file","text":"Invisibly, clipped `SpatRaster` object. raster also saved `out_path`.","code":""},{"path":"/reference/clip_and_save_raster_file.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Clip and Save a Raster File — clip_and_save_raster_file","text":"David LeBauer","code":""},{"path":"/reference/cohort2pool.html","id":null,"dir":"Reference","previous_headings":"","what":"cohort2pool — cohort2pool","title":"cohort2pool — cohort2pool","text":"Converts .rds files pool netcdf files.","code":""},{"path":"/reference/cohort2pool.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"cohort2pool — cohort2pool","text":"","code":"cohort2pool(dat, allom_param = NULL, dbh_name = \"DBH\")"},{"path":"/reference/cohort2pool.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"cohort2pool — cohort2pool","text":"dat veg_info file allom_param parameters allometric equation, b. Based base-10 log-log linear model (power law) dbh_name Default \"DBH\". column name veg_file represents DBH. May differ depending data source.","code":""},{"path":"/reference/cohort2pool.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"cohort2pool — cohort2pool","text":"cohort2pool function Calculates total biomass using veg cohort file.","code":""},{"path":"/reference/cohort2pool.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"cohort2pool — cohort2pool","text":"Saloni Shah","code":""},{"path":"/reference/cohort2pool.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"cohort2pool — cohort2pool","text":"","code":"if (FALSE) { # \\dontrun{ veg_file <- \"~/downloads/FFT_site_1-25665/FFT.2008.veg.rds\" cohort2pool(veg_File = veg_file, allom_param = NULL) } # }"},{"path":"/reference/dataone_download.html","id":null,"dir":"Reference","previous_headings":"","what":"DataONE download — dataone_download","title":"DataONE download — dataone_download","text":"Adapts dataone::getDataPackage workflow allow users download data DataONE federation simply entering doi associated package id","code":""},{"path":"/reference/dataone_download.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DataONE download — dataone_download","text":"","code":"dataone_download(   id,   filepath = \"/fs/data1/pecan.data/dbfiles\",   CNode = \"PROD\",   lazyLoad = FALSE,   quiet = FALSE )"},{"path":"/reference/dataone_download.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DataONE download — dataone_download","text":"id \"identifier package, package metadata package member\" – dataone r filepath path files stored CNode character, passed `dataone::CNode` lazyLoad \"logical value. TRUE, package member system metadata downloaded data. default FALSE.\" – dataone R quiet \"'logical'. TRUE (default) informational messages printed.\" – dataone R","code":""},{"path":"/reference/dataone_download.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"DataONE download — dataone_download","text":"Liam P Burke, lpburke@bu.edu","code":""},{"path":"/reference/dataone_download.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DataONE download — dataone_download","text":"","code":"if (FALSE) { # \\dontrun{ dataone_download(id = \"doi:10.6073/pasta/63ad7159306bc031520f09b2faefcf87\",  filepath = \"/fs/data1/pecan.data/dbfiles\") } # }"},{"path":"/reference/download.SM_CDS.html","id":null,"dir":"Reference","previous_headings":"","what":"Download CDS soil moisture data for the SDA workflow. — download.SM_CDS","title":"Download CDS soil moisture data for the SDA workflow. — download.SM_CDS","text":"Download CDS soil moisture data SDA workflow.","code":""},{"path":"/reference/download.SM_CDS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download CDS soil moisture data for the SDA workflow. — download.SM_CDS","text":"","code":"download.SM_CDS(   outfolder,   time.points,   overwrite = FALSE,   auto.create.key = FALSE )"},{"path":"/reference/download.SM_CDS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download CDS soil moisture data for the SDA workflow. — download.SM_CDS","text":"outfolder physical paths unziped soil moisture files downloaded. time.points vector contains time point within start end date. overwrite flag determine want overwrite existing files downloading. auto.create.key flag determine want automatically create credential file.","code":""},{"path":"/reference/download.SM_CDS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download CDS soil moisture data for the SDA workflow. — download.SM_CDS","text":"vector containing file paths downloaded files.","code":""},{"path":"/reference/download.SM_CDS.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download CDS soil moisture data for the SDA workflow. — download.SM_CDS","text":"Introduction play CDS python API correctly build python environment cdsapi installed, need follow steps. 1. Install miniconda. create directory install minicaonda `mkdir -p ~/miniconda3` 2. Download latest miniconda version. `wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda3/miniconda.sh` 3. run install script. `bash ~/miniconda3/miniconda.sh -b -u -p ~/miniconda3` 4. delete intall script. `rm -rf ~/miniconda3/miniconda.sh` 5. add conda initialize bash `~/miniconda3/bin/conda init bash` 6. Verify installaton, need restart session first. `conda list` 7. Create Python environment. `conda update conda` `conda create -n myenv python=3.9 –yes` 8. Activate python env. `conda activate myenv` 9. Install cdsapi package. `pip install cdsapi` meantime, might encounter several issues saying XXXX dependency available. solve issue, just need install dependencies hand. 10. Create CDS account. go `https://cds.climate.copernicus.eu/api--#install--cds-api-key` website. create account. 11. Create CDS personel token. run function. go `https://cds.climate.copernicus.eu/api--#install--cds-api-key` website. copy paste url key prompt window.","code":""},{"path":"/reference/download.SM_CDS.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Download CDS soil moisture data for the SDA workflow. — download.SM_CDS","text":"Dongchen Zhang","code":""},{"path":"/reference/download_NEON_soilmoist.html","id":null,"dir":"Reference","previous_headings":"","what":"Download NEON Soil Water Content and Soil Salinity data by date and site name — download_NEON_soilmoist","title":"Download NEON Soil Water Content and Soil Salinity data by date and site name — download_NEON_soilmoist","text":"Download NEON Soil Water Content Soil Salinity data date site name","code":""},{"path":"/reference/download_NEON_soilmoist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download NEON Soil Water Content and Soil Salinity data by date and site name — download_NEON_soilmoist","text":"","code":"download_NEON_soilmoist(   site,   avg = \"all\",   var = \"all\",   startdate = NA,   enddate = NA,   outdir )"},{"path":"/reference/download_NEON_soilmoist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download NEON Soil Water Content and Soil Salinity data by date and site name — download_NEON_soilmoist","text":"site four letter NEON site code name(s). site specified, download (chr) (e.g \"BART\" c(\"SRER\", \"KONA\", \"BART\")) avg averaging interval (minutes): 1, 30, (\"\") . default returns var variable interest: \"SWC\" (soil water content) \"SIC\" (soil ion content) (\"\") default returns . variables saved outdir automatically (chr) startdate start date YYYY-mm. left empty, data available downloaded (chr) enddate start date YYYY-mm. left empty, data available downloaded (chr) outdir directory store following data: .rds list files SWC SIC data site sensor position, sensor positions .csv site, variable description .csv file, readme .csv file","code":""},{"path":"/reference/download_NEON_soilmoist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download NEON Soil Water Content and Soil Salinity data by date and site name — download_NEON_soilmoist","text":"List specified variable(s) prints path output folder","code":""},{"path":"/reference/download_NEON_soilmoist.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Download NEON Soil Water Content and Soil Salinity data by date and site name — download_NEON_soilmoist","text":"Juliette Bateman","code":""},{"path":"/reference/download_NEON_soilmoist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download NEON Soil Water Content and Soil Salinity data by date and site name — download_NEON_soilmoist","text":"","code":"if (FALSE) { # \\dontrun{ test <- download_NEON_soilmoisture(   site = c(\"SRER\", \"BART\", \"KONA\"),   avg = 30,   var = \"SWC\",   startdate = \"2019-01\",   enddate = \"2020-01\",   outdir = getwd())} # }"},{"path":"/reference/download_package_rm.html","id":null,"dir":"Reference","previous_headings":"","what":"download_packages — download_package_rm","title":"download_packages — download_package_rm","text":"Uses resource_map dataone::getPackage download data BagItFile. utils::unzip unzips data stores user's directory.","code":""},{"path":"/reference/download_package_rm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"download_packages — download_package_rm","text":"","code":"download_package_rm(   resource_map,   directory,   CNode = \"PROD\",   download_format = \"application/bagit-097\",   overwrite_directory = TRUE )"},{"path":"/reference/download_package_rm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"download_packages — download_package_rm","text":"resource_map resource map corresponds given data package directory location download.packages places data CNode defaults \"PROD\" download_format typically \"application/bagit-097\". possible formats currently unknown. overwrite_directory boolean indicates whether function overwrite directory","code":""},{"path":"/reference/download_package_rm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"download_packages — download_package_rm","text":"results download","code":""},{"path":"/reference/ens_veg_module.html","id":null,"dir":"Reference","previous_headings":"","what":"Sampling/ensemble module — ens_veg_module","title":"Sampling/ensemble module — ens_veg_module","text":"Sampling/ensemble module","code":""},{"path":"/reference/ens_veg_module.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sampling/ensemble module — ens_veg_module","text":"","code":"ens_veg_module(   getveg.id,   dbparms,   input_veg,   outfolder,   machine,   start_date,   end_date,   n.ensemble,   new_site,   host )"},{"path":"/reference/ens_veg_module.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sampling/ensemble module — ens_veg_module","text":"getveg.id list, input.id dbfile.id IC file intermediate pecan standard dbparms list, settings$database info reqired opening connection DB input_veg list, sublist settings$run$inputs info source, id, metadata requested IC file outfolder path processed files written machine data frame, DB info regarding localhost machine id/hostname etc. start_date date \"YYYY-MM-DD\" format, case source==FIA settings$run$start.date, otherwise start_date IC file DB end_date date \"YYYY-MM-DD\" format, case source==FIA settings$run$end.date, otherwise end_date IC file DB n.ensemble integer, ensemble member number new_site data frame, id/lat/lon/name info site host list, host info settings$host, host$name forced \"localhost\" upstream","code":""},{"path":"/reference/ens_veg_module.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Sampling/ensemble module — ens_veg_module","text":"Istem Fer","code":""},{"path":"/reference/estimate_dirichlet_parameters.html","id":null,"dir":"Reference","previous_headings":"","what":"A function to estimate individual alphas for Dirichlet distribution to approximate the observed quantiles with means as known moments for SoilGrids soil texture data. Dirichlet distribution is assumed as soil texture data follow categorical distribution and the probability of each category is in the range 0 to 1, and all must sum to 1. — estimate_dirichlet_parameters","title":"A function to estimate individual alphas for Dirichlet distribution to approximate the observed quantiles with means as known moments for SoilGrids soil texture data. Dirichlet distribution is assumed as soil texture data follow categorical distribution and the probability of each category is in the range 0 to 1, and all must sum to 1. — estimate_dirichlet_parameters","text":"function estimate individual alphas Dirichlet distribution approximate observed quantiles means known moments SoilGrids soil texture data. Dirichlet distribution assumed soil texture data follow categorical distribution probability category range 0 1, must sum 1.","code":""},{"path":"/reference/estimate_dirichlet_parameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function to estimate individual alphas for Dirichlet distribution to approximate the observed quantiles with means as known moments for SoilGrids soil texture data. Dirichlet distribution is assumed as soil texture data follow categorical distribution and the probability of each category is in the range 0 to 1, and all must sum to 1. — estimate_dirichlet_parameters","text":"","code":"estimate_dirichlet_parameters(means, quantiles)"},{"path":"/reference/estimate_dirichlet_parameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function to estimate individual alphas for Dirichlet distribution to approximate the observed quantiles with means as known moments for SoilGrids soil texture data. Dirichlet distribution is assumed as soil texture data follow categorical distribution and the probability of each category is in the range 0 to 1, and all must sum to 1. — estimate_dirichlet_parameters","text":"means vector means sand, clay, silt proportion one soil layer one site SoilGrids data quantiles list 5th, 50th, 95th percentiles sand, clay, silt one soil layer one site SoilGrids data","code":""},{"path":"/reference/estimate_dirichlet_parameters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function to estimate individual alphas for Dirichlet distribution to approximate the observed quantiles with means as known moments for SoilGrids soil texture data. Dirichlet distribution is assumed as soil texture data follow categorical distribution and the probability of each category is in the range 0 to 1, and all must sum to 1. — estimate_dirichlet_parameters","text":"individual alphas work best fit observed quantiles","code":""},{"path":"/reference/estimate_dirichlet_parameters.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"A function to estimate individual alphas for Dirichlet distribution to approximate the observed quantiles with means as known moments for SoilGrids soil texture data. Dirichlet distribution is assumed as soil texture data follow categorical distribution and the probability of each category is in the range 0 to 1, and all must sum to 1. — estimate_dirichlet_parameters","text":"Qianyu Li","code":""},{"path":"/reference/estimate_dirichlet_parameters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A function to estimate individual alphas for Dirichlet distribution to approximate the observed quantiles with means as known moments for SoilGrids soil texture data. Dirichlet distribution is assumed as soil texture data follow categorical distribution and the probability of each category is in the range 0 to 1, and all must sum to 1. — estimate_dirichlet_parameters","text":"","code":"if (FALSE) { # \\dontrun{ # Means and percentiles for each category: sand, clay, and silt at one site and one depth means <- c(0.566,0.193,0.241) quantiles <-list(   q5 = c(0.127,0.034,0.052), # 5th percentile   q50 = c(0.615,0.15,0.191), # 50th percentile (median)   q95 = c(0.799,0.66,0.616))  # 95th percentile alpha_est <- estimate_dirichlet_parameters(means, quantiles) } # }"},{"path":"/reference/extract.stringCode.html","id":null,"dir":"Reference","previous_headings":"","what":"extract.stringCode — extract.stringCode","title":"extract.stringCode — extract.stringCode","text":"extract.stringCode","code":""},{"path":"/reference/extract.stringCode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"extract.stringCode — extract.stringCode","text":"","code":"extract.stringCode(x, extractor = from.TreeCode)"},{"path":"/reference/extract.stringCode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"extract.stringCode — extract.stringCode","text":"x string decode extractor function apply","code":""},{"path":"/reference/extract_FIA.html","id":null,"dir":"Reference","previous_headings":"","what":"extract_FIA — extract_FIA","title":"extract_FIA — extract_FIA","text":"extract_FIA","code":""},{"path":"/reference/extract_FIA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"extract_FIA — extract_FIA","text":"","code":"extract_FIA(lon, lat, start_date, end_date, gridres = 0.075, dbparms, ...)"},{"path":"/reference/extract_FIA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"extract_FIA — extract_FIA","text":"lon site longitude lat site latitude start_date \"YYYY-MM-DD\" end_date \"YYYY-MM-DD\" gridres taken input_veg, DEFAULT = 0.075 dbparms taken settings object ... Additional parameters","code":""},{"path":"/reference/extract_FIA.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"extract_FIA — extract_FIA","text":"Istem Fer","code":""},{"path":"/reference/extract_NEON_veg.html","id":null,"dir":"Reference","previous_headings":"","what":"extract_NEON_veg — extract_NEON_veg","title":"extract_NEON_veg — extract_NEON_veg","text":"extract_NEON_veg","code":""},{"path":"/reference/extract_NEON_veg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"extract_NEON_veg — extract_NEON_veg","text":"","code":"extract_NEON_veg(   lon,   lat,   start_date,   end_date,   store_dir,   neonsites = NULL,   ... )"},{"path":"/reference/extract_NEON_veg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"extract_NEON_veg — extract_NEON_veg","text":"lon site longitude, passed ic_process lat site latitude, passed ic_process start_date \"YYYY-MM-DD\", used download NEON datasets desired time period end_date \"YYYY_MM_DD\", used download NEON datasets desired time period store_dir location want store downloaded NEON files neonsites prepared datasets table NEON using neonstore::neon_sites(api = \"https://data.neonscience.org/api/v0\", .token = Sys.getenv(\"NEON_TOKEN\")) ... Additional parameters","code":""},{"path":"/reference/extract_NEON_veg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"extract_NEON_veg — extract_NEON_veg","text":"veg_info object passed extract_veg within ic_process","code":""},{"path":"/reference/extract_NEON_veg.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"extract_NEON_veg — extract_NEON_veg","text":"Alexis Helgeson Michael Dietze","code":""},{"path":"/reference/extract_NEON_veg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"extract_NEON_veg — extract_NEON_veg","text":"","code":"start_date = as.Date(\"2020-01-01\")  end_date = as.Date(\"2021-09-01\")"},{"path":"/reference/extract_SM_CDS.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract CDS soil moisture data for the SDA workflow. — extract_SM_CDS","title":"Extract CDS soil moisture data for the SDA workflow. — extract_SM_CDS","text":"Extract CDS soil moisture data SDA workflow.","code":""},{"path":"/reference/extract_SM_CDS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract CDS soil moisture data for the SDA workflow. — extract_SM_CDS","text":"","code":"extract_SM_CDS(   site_info,   time.points,   in.path,   out.path = NULL,   allow.download = TRUE,   search_window = 10 )"},{"path":"/reference/extract_SM_CDS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract CDS soil moisture data for the SDA workflow. — extract_SM_CDS","text":"site_info Bety list site info including site_id, lon, lat. time.points vector contains time point within start end date. .path physical paths unziped soil moisture files downloaded. .path final CSV file stored. allow.download Flag determine want automatic download files available. search_window time length (days) locate available soil moisture values.","code":""},{"path":"/reference/extract_SM_CDS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract CDS soil moisture data for the SDA workflow. — extract_SM_CDS","text":"data frame containing soil moisture sd site time step.","code":""},{"path":"/reference/extract_SM_CDS.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract CDS soil moisture data for the SDA workflow. — extract_SM_CDS","text":"Dongchen Zhang","code":""},{"path":"/reference/extract_soil_gssurgo.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract soil data from gssurgo — extract_soil_gssurgo","title":"Extract soil data from gssurgo — extract_soil_gssurgo","text":"Extract soil data gssurgo","code":""},{"path":"/reference/extract_soil_gssurgo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract soil data from gssurgo — extract_soil_gssurgo","text":"","code":"extract_soil_gssurgo(   outdir,   lat,   lon,   size = 1,   grid_size = 3,   grid_spacing = 100,   depths = c(0.15, 0.3, 0.6) )"},{"path":"/reference/extract_soil_gssurgo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract soil data from gssurgo — extract_soil_gssurgo","text":"outdir Output directory writing netcdf file lat Latitude center point (single numeric value) lon Longitude center point (single numeric value) size Ensemble size grid_size Size spatial sampling grid around center point (default: 3) grid_spacing Spacing grid cells meters (default: 100) depths Standard set soil depths m create ensemble soil profiles .","code":""},{"path":"/reference/extract_soil_gssurgo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract soil data from gssurgo — extract_soil_gssurgo","text":"returns address generated soil netcdf file","code":""},{"path":"/reference/extract_soil_gssurgo.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract soil data from gssurgo — extract_soil_gssurgo","text":"function takes single lat/lon point creates spatial grid around sampling soil variability. grid_size parameter determines many grid points (grid_size x grid_size) created around center point.","code":""},{"path":"/reference/extract_soil_gssurgo.html","id":"current-limitations","dir":"Reference","previous_headings":"","what":"Current Limitations","title":"Extract soil data from gssurgo — extract_soil_gssurgo","text":"- MUKEY frequency weighting treats occurrence counts proportional area coverage - approximation may introduce geometric bias irregular polygon data - Buffer radius set grid_spacing/2 reduce overlapping queries, may still miss coverage - True area-weighted aggregation using polygon geometries planned (see issue #3609)","code":""},{"path":"/reference/extract_soil_gssurgo.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract soil data from gssurgo — extract_soil_gssurgo","text":"Hamze Dokoohaki, Akash","code":""},{"path":"/reference/extract_soil_gssurgo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract soil data from gssurgo — extract_soil_gssurgo","text":"","code":"if (FALSE) { # \\dontrun{    outdir  <- \"~/paleon/envTest\"    lat     <- 40    lon     <- -80    PEcAn.data.land::extract_soil_gssurgo(outdir, lat, lon) } # }"},{"path":"/reference/extract_soil_nc.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract soil data from the gridpoint closest to a location — extract_soil_nc","title":"Extract soil data from the gridpoint closest to a location — extract_soil_nc","text":"Extract soil data gridpoint closest location","code":""},{"path":"/reference/extract_soil_nc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract soil data from the gridpoint closest to a location — extract_soil_nc","text":"","code":"extract_soil_nc(in.file, outdir, lat, lon)"},{"path":"/reference/extract_soil_nc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract soil data from the gridpoint closest to a location — extract_soil_nc","text":".file path netcdf file containing soil data outdir directory write netcdf file extracted data. Output filename input filename. lat, lon location decimal degrees. Data extracted point `.file` nearest ","code":""},{"path":"/reference/extract_soil_nc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract soil data from the gridpoint closest to a location — extract_soil_nc","text":"path netCDF file containing extracted data","code":""},{"path":"/reference/extract_soil_nc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract soil data from the gridpoint closest to a location — extract_soil_nc","text":"","code":"if (FALSE) { # \\dontrun{ in.file <- \"~/paleon/env_paleon/soil/paleon_soil.nc\" outdir  <- \"~/paleon/envTest\" lat     <- 40 lon     <- -80 PEcAn.data.land::extract_soil_nc(in.file,outdir,lat,lon) } # }"},{"path":"/reference/extract_veg.html","id":null,"dir":"Reference","previous_headings":"","what":"extract_veg — extract_veg","title":"extract_veg — extract_veg","text":"Function queries DB extract veg info downstream","code":""},{"path":"/reference/extract_veg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"extract_veg — extract_veg","text":"","code":"extract_veg(   new_site,   start_date,   end_date,   source,   gridres,   format_name = NULL,   machine_host,   dbparms,   outfolder,   overwrite = FALSE,   input_veg = input_veg,   ... )"},{"path":"/reference/extract_veg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"extract_veg — extract_veg","text":"new_site new_site object passed ic_process includes lat, lon, id, name start_date \"YYYY-MM-DD\" end_date \"YYYY-MM-DD\" source taken input$source, passed ic_process gridres used source = \"FIA\" format_name DEFAULT=NULL machine_host passed ic_process dbparms taken settings object, passed ic_process outfolder passed ic_process, location store files overwrite DEFAULT = FALSE input_veg passed input object ic_process ... Additional parameters","code":""},{"path":"/reference/extract_veg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"extract_veg — extract_veg","text":"results object passed back get.veg.module","code":""},{"path":"/reference/extract_veg.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"extract_veg — extract_veg","text":"Istem Fer Alexis Helgeson","code":""},{"path":"/reference/fertilizer_composition_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Fertilizer Nutrient Composition Table — fertilizer_composition_data","title":"Fertilizer Nutrient Composition Table — fertilizer_composition_data","text":"dataset fertilizer organic matter addition types nitrogen carbon composition, based SWAT model's `fertilizer.frt` table DayCent model defaults organic matter C:N ratio parameters.","code":""},{"path":"/reference/fertilizer_composition_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fertilizer Nutrient Composition Table — fertilizer_composition_data","text":"","code":"fertilizer_composition_data"},{"path":"/reference/fertilizer_composition_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Fertilizer Nutrient Composition Table — fertilizer_composition_data","text":"tibble one row per fertilizer type following columns: name character. Short identifier SWAT (e.g., \"urea\", \"manure\"). description character. Longer description fertilizer manure type. fraction_mineral_n numeric. Fraction total nitrogen mineral form. fraction_nh3_n numeric. Fraction fertilizer mass ammonium-n (NH\\(_3\\)-N). fraction_no3_n numeric. Fraction fertilizer mass nitrate-N (\\(_3\\)-N).     Computed fraction_mineral_n - fraction_nh3_n. fraction_organic_n numeric. Fraction organic matter nitrogen. fraction_c numeric. Fraction mass carbon. cn_ratio numeric. Carbon--nitrogen ratio organic matter.     Assigned based DayCent organic matter parameterterizations.","code":""},{"path":"/reference/fertilizer_composition_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Fertilizer Nutrient Composition Table — fertilizer_composition_data","text":"https://github.com/swat-model/swatplus DayCent model default parameter file: `omad.100` obtained Soil Carbon Solutions Center, https://www.soilcarbonsolutionscenter.com","code":""},{"path":"/reference/fertilizer_composition_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fertilizer Nutrient Composition Table — fertilizer_composition_data","text":"table based SWAT model's fertilizer.frt file, uses C:N ratios (cn_ratio) DayCent model default parameter files. fraction_nh3_n fraction_no3_n represent fraction fertilizer mass ammonium-N nitrate-N, respectively. different SWAT model's definition fraction_nh3_n fraction total mineral N.","code":""},{"path":"/reference/fia.to.psscss.html","id":null,"dir":"Reference","previous_headings":"","what":"Create pss/css files based on data in the fia database — fia.to.psscss","title":"Create pss/css files based on data in the fia database — fia.to.psscss","text":"Create pss/css files based data fia database","code":""},{"path":"/reference/fia.to.psscss.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create pss/css files based on data in the fia database — fia.to.psscss","text":"","code":"fia.to.psscss(   settings,   lat = as.numeric(settings$run$site$lat),   lon = as.numeric(settings$run$site$lon),   year = lubridate::year(settings$run$start.date),   gridres = 0.075,   min.year = year - 5,   max.year = year + 5,   overwrite = FALSE )"},{"path":"/reference/fia.to.psscss.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create pss/css files based on data in the fia database — fia.to.psscss","text":"settings PEcAn settings object lat, lon site location decimal degrees. Defults values passed `settings`. year defaults year start date passed settings gridres grid resolution degrees min.year, max.year limits years FIA data look overwrite logical: regenerate files already database?","code":""},{"path":"/reference/fia.to.psscss.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create pss/css files based on data in the fia database — fia.to.psscss","text":"modified settings, invisibly","code":""},{"path":"/reference/fia.to.psscss.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create pss/css files based on data in the fia database — fia.to.psscss","text":"Mike Dietze, Rob Kooper, Ryan Kelly","code":""},{"path":"/reference/format_identifier.html","id":null,"dir":"Reference","previous_headings":"","what":"format_identifier — format_identifier","title":"format_identifier — format_identifier","text":"function formatting purposes. simply inserts doi id user wishes query Solr format compatible dataoneR query functionality PEcAn function","code":""},{"path":"/reference/format_identifier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"format_identifier — format_identifier","text":"","code":"format_identifier(id)"},{"path":"/reference/format_identifier.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"format_identifier — format_identifier","text":"id doi identifier linked package DataONE","code":""},{"path":"/reference/format_identifier.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"format_identifier — format_identifier","text":"returns id proper format querying DataONE Federation (using solrQuery syntax)","code":""},{"path":"/reference/format_identifier.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"format_identifier — format_identifier","text":"Liam P Burke, lpburke@bu.edu","code":""},{"path":"/reference/from.Tag.html","id":null,"dir":"Reference","previous_headings":"","what":"from.Tag — from.Tag","title":"from.Tag — from.Tag","text":".Tag","code":""},{"path":"/reference/from.Tag.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"from.Tag — from.Tag","text":"","code":"from.Tag(x)"},{"path":"/reference/from.Tag.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"from.Tag — from.Tag","text":"x string decode","code":""},{"path":"/reference/from.TreeCode.html","id":null,"dir":"Reference","previous_headings":"","what":"from.TreeCode — from.TreeCode","title":"from.TreeCode — from.TreeCode","text":".TreeCode","code":""},{"path":"/reference/from.TreeCode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"from.TreeCode — from.TreeCode","text":"","code":"from.TreeCode(x)"},{"path":"/reference/from.TreeCode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"from.TreeCode — from.TreeCode","text":"x string decode","code":""},{"path":"/reference/gSSURGO.Query.html","id":null,"dir":"Reference","previous_headings":"","what":"This function queries the gSSURGO database for a series of map unit keys — gSSURGO.Query","title":"This function queries the gSSURGO database for a series of map unit keys — gSSURGO.Query","text":"function queries gSSURGO database series map unit keys","code":""},{"path":"/reference/gSSURGO.Query.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function queries the gSSURGO database for a series of map unit keys — gSSURGO.Query","text":"","code":"gSSURGO.Query(   mukeys,   fields = c(\"chorizon.sandtotal_r\", \"chorizon.silttotal_r\", \"chorizon.claytotal_r\") )"},{"path":"/reference/gSSURGO.Query.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function queries the gSSURGO database for a series of map unit keys — gSSURGO.Query","text":"mukeys map unit key gssurgo fields character vector fields extracted. See details default argument find define fields.","code":""},{"path":"/reference/gSSURGO.Query.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function queries the gSSURGO database for a series of map unit keys — gSSURGO.Query","text":"dataframe soil properties.","code":""},{"path":"/reference/gSSURGO.Query.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"This function queries the gSSURGO database for a series of map unit keys — gSSURGO.Query","text":"function queries NRCS gSSURGO database using map unit keys (mukeys). Available tables: mapunit, component, muaggatt, chorizon, chfrags. Field definitions: Fields must specified associated table name. example, total sand content stored chorizon table must requested chorizon.sandtotal_(r|l|h), : r = representative value l = low value h = high value Commonly queried fields units (see NRCS gSSURGO \"Tables Columns Report\" full list): API stability: NRCS occasionally modifies API schema. queries fail, adjustments may required align updated structure. Full documentation available tables relationships provided gSSURGO documentation.","code":""},{"path":"/reference/gSSURGO.Query.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"This function queries the gSSURGO database for a series of map unit keys — gSSURGO.Query","text":"Hamze Dokohaki, Akash","code":""},{"path":"/reference/gSSURGO.Query.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"This function queries the gSSURGO database for a series of map unit keys — gSSURGO.Query","text":"","code":"if (FALSE) { # \\dontrun{  PEcAn.data.land::gSSURGO.Query(    mukeys = 2747727,    fields = c(      \"chorizon.cec7_r\", \"chorizon.sandtotal_r\",      \"chorizon.silttotal_r\",\"chorizon.claytotal_r\",      \"chorizon.om_r\",\"chorizon.hzdept_r\",\"chorizon.frag3to10_r\",      \"chorizon.dbovendry_r\",\"chorizon.ph1to1h2o_r\",      \"chorizon.cokey\",\"chorizon.chkey\")) } # }"},{"path":"/reference/generate_soilgrids_ensemble.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate soil carbon ensemble members for specific depth — generate_soilgrids_ensemble","title":"Generate soil carbon ensemble members for specific depth — generate_soilgrids_ensemble","text":"Generates ensemble members soil carbon specified depth layer. Uses site-specific uncertainty available; otherwise integrates coefficient variation distributions fit population data. Samples drawn gamma distributions ensure positive, right-skewed values appropriate soil carbon estimates.","code":""},{"path":"/reference/generate_soilgrids_ensemble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate soil carbon ensemble members for specific depth — generate_soilgrids_ensemble","text":"","code":"generate_soilgrids_ensemble(   processed_data,   site_id,   size,   depth_layer,   verbose = FALSE )"},{"path":"/reference/generate_soilgrids_ensemble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate soil carbon ensemble members for specific depth — generate_soilgrids_ensemble","text":"processed_data Output preprocess_soilgrids_data() site_id Target site ID size Number ensemble members generate depth_layer Depth layer (\"0-30cm\" \"0-200cm\") verbose Logical, print detailed progress information","code":""},{"path":"/reference/generate_soilgrids_ensemble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate soil carbon ensemble members for specific depth — generate_soilgrids_ensemble","text":"Numeric vector soil carbon values including uncertainty, length equal size.","code":""},{"path":"/reference/get.attributes.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve attribute information from a vector or raster layer — get.attributes","title":"Retrieve attribute information from a vector or raster layer — get.attributes","text":"Function extract attribute information vector raster data layer.","code":""},{"path":"/reference/get.attributes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve attribute information from a vector or raster layer — get.attributes","text":"","code":"get.attributes(file, coords)"},{"path":"/reference/get.attributes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve attribute information from a vector or raster layer — get.attributes","text":"file vector raster layer coords vector containin xmin,ymin,xmax,ymax defing bounding box subset","code":""},{"path":"/reference/get.attributes.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Retrieve attribute information from a vector or raster layer — get.attributes","text":"Shawn P. Serbin","code":""},{"path":"/reference/get.attributes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve attribute information from a vector or raster layer — get.attributes","text":"","code":"if (FALSE) { # \\dontrun{ file <- Sys.glob(file.path(R.home(), 'library', 'PEcAn.data.land','data','*.kml')) out <- get.attributes(file=file,coords=c(-95,42,-84,47)) print(out) } # }"},{"path":"/reference/get.soil.html","id":null,"dir":"Reference","previous_headings":"","what":"get.soil — get.soil","title":"get.soil — get.soil","text":"Get Soil","code":""},{"path":"/reference/get.soil.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get.soil — get.soil","text":"","code":"get.soil(lat, lon, soil.nc = soil.nc)"},{"path":"/reference/get.soil.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get.soil — get.soil","text":"lat latitude lon longitude soil.nc netCDFe file soil data","code":""},{"path":"/reference/get.soil.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get.soil — get.soil","text":"usda soil class","code":""},{"path":"/reference/get.soil.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"get.soil — get.soil","text":"David LeBauer","code":""},{"path":"/reference/get_resource_map.html","id":null,"dir":"Reference","previous_headings":"","what":"get_resource_map — get_resource_map","title":"get_resource_map — get_resource_map","text":"Locates data DataONE returns resource_map message indicating corresponding resource_map given id","code":""},{"path":"/reference/get_resource_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_resource_map — get_resource_map","text":"","code":"get_resource_map(id, CNode = \"PROD\")"},{"path":"/reference/get_resource_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_resource_map — get_resource_map","text":"id doi identifier linked package DataONE CNode default \"PROD\"","code":""},{"path":"/reference/get_resource_map.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_resource_map — get_resource_map","text":"return resource_map message indicating corresponding resource_map given id","code":""},{"path":"/reference/get_veg_module.html","id":null,"dir":"Reference","previous_headings":"","what":"Load/extract + match species module — get_veg_module","title":"Load/extract + match species module — get_veg_module","text":"Load/extract + match species module","code":""},{"path":"/reference/get_veg_module.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load/extract + match species module — get_veg_module","text":"","code":"get_veg_module(   input_veg,   outfolder,   start_date,   end_date,   dbparms,   new_site,   host,   machine_host,   overwrite )"},{"path":"/reference/get_veg_module.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load/extract + match species module — get_veg_module","text":"input_veg list, sublist settings$run$inputs info source, id, metadata requested IC file outfolder path processed files written start_date date \"YYYY-MM-DD\" format, case source==FIA settings$run$start.date, otherwise start_date IC file DB end_date date \"YYYY-MM-DD\" format, case source==FIA settings$run$end.date, otherwise end_date IC file DB dbparms list, settings$database info reqired opening connection DB new_site data frame, id/lat/lon/name info site host list, host info settings$host, host$name forced \"localhost\" upstream machine_host local machine hostname, e.g. \"pecan2.bu.edu\" overwrite logical flag convert_input","code":""},{"path":"/reference/get_veg_module.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Load/extract + match species module — get_veg_module","text":"Istem Fer","code":""},{"path":"/reference/ic_process.html","id":null,"dir":"Reference","previous_headings":"","what":"ic_process — ic_process","title":"ic_process — ic_process","text":"ic_process","code":""},{"path":"/reference/ic_process.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ic_process — ic_process","text":"","code":"ic_process(settings, input, dir, overwrite = FALSE)"},{"path":"/reference/ic_process.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ic_process — ic_process","text":"settings pecan settings list input Taken settings$run$inputs. include id, path, source dir settings$database$dbfiles overwrite Default = FALSE. whether force ic_process proceed","code":""},{"path":"/reference/ic_process.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ic_process — ic_process","text":"Istem Fer, Hamze Dokoohaki","code":""},{"path":"/reference/id_resolveable.html","id":null,"dir":"Reference","previous_headings":"","what":"id_resolveable — id_resolveable","title":"id_resolveable — id_resolveable","text":"Uses dataone::query dataoneR query DataONE. Prints result data exists","code":""},{"path":"/reference/id_resolveable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"id_resolveable — id_resolveable","text":"","code":"id_resolveable(id, return_result = TRUE, CNode = \"PROD\")"},{"path":"/reference/id_resolveable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"id_resolveable — id_resolveable","text":"id doi identifier linked package DataONE return_result boolean returns suppresses result query. defaults TRUE. CNode CNode=\"PROD\"","code":""},{"path":"/reference/id_resolveable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"id_resolveable — id_resolveable","text":"returns message indicating wether id resolves data DataONE federation information said data.","code":""},{"path":"/reference/iscn_soc.html","id":null,"dir":"Reference","previous_headings":"","what":"Soil organic carbon (SOC) density based on eco-region level 2 code from the ISCN database. — iscn_soc","title":"Soil organic carbon (SOC) density based on eco-region level 2 code from the ISCN database. — iscn_soc","text":"Contains 200 ensemble SOC data 43 level 2 eco-regions across North America. Variable include SOC densities g/cm2.","code":""},{"path":"/reference/iscn_soc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Soil organic carbon (SOC) density based on eco-region level 2 code from the ISCN database. — iscn_soc","text":"","code":"iscn_soc"},{"path":"/reference/iscn_soc.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Soil organic carbon (SOC) density based on eco-region level 2 code from the ISCN database. — iscn_soc","text":"## `iscn_soc` data frame 200 rows 43 columns: rows 1 200 ensemble members columns 43 level 2 ecoregion codes across North America","code":""},{"path":"/reference/iscn_soc.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Soil organic carbon (SOC) density based on eco-region level 2 code from the ISCN database. — iscn_soc","text":"https://iscn.fluxdata.org/wp-content/uploads/sites/23/2019/05/ISCN_ALL_DATA_DATASET_1-1.xlsx","code":""},{"path":"/reference/load_veg.html","id":null,"dir":"Reference","previous_headings":"","what":"load_veg — load_veg","title":"load_veg — load_veg","text":"uses `PEcAn.benchmark::load_data()` get veg data","code":""},{"path":"/reference/load_veg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"load_veg — load_veg","text":"","code":"load_veg(   new_site,   start_date,   end_date,   source_id,   source,   icmeta = NULL,   format_name = NULL,   machine_host,   dbparms,   outfolder,   overwrite = FALSE,   ... )"},{"path":"/reference/load_veg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"load_veg — load_veg","text":"new_site list passed `load_data` start_date, end_date date range look source_id input id look DB source name data source (used file naming) icmeta metadata initial conditions format_name file format look machine_host hostname machine data lives dbparms parameters use opening connection database outfolder path write results overwrite Logical: replace existing files? NOTE: Currently ignored! ... Additional arguments, currently ignored","code":""},{"path":"/reference/load_veg.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"load_veg — load_veg","text":"Istem Fer","code":""},{"path":"/reference/look_up_fertilizer_components.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the Nitrogen and Carbon Content of a Fertilizer Application — look_up_fertilizer_components","title":"Calculate the Nitrogen and Carbon Content of a Fertilizer Application — look_up_fertilizer_components","text":"function calculates different forms nitrogen (NO3-N, NH4-N, organic N) organic carbon (C_org) fertilizer application. can determine fertilizer nitrogen carbon content using either lookup table based SWAT model's fertilizer.frt file, determine fertilizer's nutrient content based NN-PP-KK format, use user-specified fractions organic nitrogen carbon.","code":""},{"path":"/reference/look_up_fertilizer_components.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the Nitrogen and Carbon Content of a Fertilizer Application — look_up_fertilizer_components","text":"","code":"look_up_fertilizer_components(   type,   amount,   fraction_organic_n = NULL,   fraction_organic_c = NULL )"},{"path":"/reference/look_up_fertilizer_components.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the Nitrogen and Carbon Content of a Fertilizer Application — look_up_fertilizer_components","text":"type Character string specifying type fertilizer. Valid values include NN-PP-KK format (e.g., \"45-5-10\") well enumerated types including: \"urea\", \"ammonium_nitrate\", \"compost\", \"manure\", \"dairy_fr\", \"beef_fr\". See notes full list valid types. amount Numeric value specifying amount fertilizer applied kg/ha. fraction_organic_n Optional numeric value specifying fraction organic matter nitrogen. Used define organic matter additions provided dataset. fraction_organic_c Optional numeric value specifying fraction organic matter carbon. Used define organic matter additions provided dataset.","code":""},{"path":"/reference/look_up_fertilizer_components.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the Nitrogen and Carbon Content of a Fertilizer Application — look_up_fertilizer_components","text":"list containing: type: type fertilizer used. NO3_N: amount nitrate nitrogen (NO3-N) kg/ha. NH4_N: amount ammonium nitrogen (NH4-N) kg/ha. N_org: amount organic nitrogen kg/ha. C_org: amount organic carbon kg/ha.","code":""},{"path":"/reference/look_up_fertilizer_components.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate the Nitrogen and Carbon Content of a Fertilizer Application — look_up_fertilizer_components","text":"Consistent assumptions DayCent, DSSAT, models, urea treated NH3 transformation typically occurs within day.","code":""},{"path":"/reference/look_up_fertilizer_components.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Calculate the Nitrogen and Carbon Content of a Fertilizer Application — look_up_fertilizer_components","text":"following list valid fertilizer names: Mineral fertilizers: ammonium_nitrate, anhydrous_ammonia, urea Fresh manures: manure, beef_fr, broil_fr, dairy_fr, duck_fr, goat_fr, horse_fr, layer_fr, sheep_fr, swine_fr, trkey_fr, veal_fr Compost: org_compost","code":""},{"path":"/reference/look_up_fertilizer_components.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the Nitrogen and Carbon Content of a Fertilizer Application — look_up_fertilizer_components","text":"","code":"# View all available fertilizer types unique(PEcAn.data.land::fertilizer_composition_data$name) #>  [1] \"elem_n\"            \"elem_p\"            \"p\"                 #>  [4] \"anhydrous_ammonia\" \"urea\"              \"46_00_00\"          #>  [7] \"33_00_00\"          \"31_13_00\"          \"30_80_00\"          #> [10] \"30_15_00\"          \"28_10_10\"          \"28_03_00\"          #> [13] \"26_13_00\"          \"25_05_00\"          \"25_03_00\"          #> [16] \"24_06_00\"          \"22_14_00\"          \"20_20_00\"          #> [19] \"18_46_00\"          \"18_04_00\"          \"16_20_20\"          #> [22] \"15_15_15\"          \"15_15_00\"          \"13_13_13\"          #> [25] \"12_20_00\"          \"11_52_00\"          \"11_15_00\"          #> [28] \"10_34_00\"          \"10_28_00\"          \"10_20_20\"          #> [31] \"10_10_10\"          \"08_15_00\"          \"08_08_00\"          #> [34] \"07_07_00\"          \"07_00_00\"          \"06_24_24\"          #> [37] \"05_10_15\"          \"05_10_10\"          \"05_10_05\"          #> [40] \"04_08_00\"          \"03_06_00\"          \"02_09_00\"          #> [43] \"00_15_00\"          \"00_06_00\"          \"dairy_fr\"          #> [46] \"beef_fr\"           \"veal_fr\"           \"swine_fr\"          #> [49] \"sheep_fr\"          \"goat_fr\"           \"horse_fr\"          #> [52] \"layer_fr\"          \"broil_fr\"          \"trkey_fr\"          #> [55] \"duck_fr\"           \"ceap_p_n\"          \"ceap_p_p\"          #> [58] \"ceap_h_n\"          \"ceap_h_p\"          \"org_compost\"       #> [61] \"manure\"            \"ammonium_nitrate\"   # Calculate components for different fertilizer types look_up_fertilizer_components(\"urea\", 200) #> $type #> [1] \"urea\" #>  #> $NO3_N #> [1] 0 #>  #> $NH4_N #> [1] 92 #>  #> $N_org #> [1] 0 #>  #> $C_org #> [1] 0 #>  look_up_fertilizer_components(\"45-00-00\", 200) #> $type #> [1] \"45-00-00\" #>  #> $NO3_N #> [1] 90 #>  #> $NH4_N #> [1] 0 #>  #> $N_org #> [1] 0 #>  #> $C_org #> [1] 0 #>  look_up_fertilizer_components(\"org_compost\", 1000) #> $type #> [1] \"org_compost\" #>  #> $NO3_N #> [1] 8 #>  #> $NH4_N #> [1] 0 #>  #> $N_org #> [1] 12 #>  #> $C_org #> [1] 0 #>  look_up_fertilizer_components(\"dairy_fr\", 500) #> $type #> [1] \"dairy_fr\" #>  #> $NO3_N #> [1] 0 #>  #> $NH4_N #> [1] 3 #>  #> $N_org #> [1] 16 #>  #> $C_org #> [1] 195 #>  look_up_fertilizer_components(\"manure\", 1000, fraction_organic_n = 0.02, fraction_organic_c = 0.08) #> $type #> [1] \"manure\" #>  #> $NO3_N #> [1] 0 #>  #> $NH4_N #> [1] 0 #>  #> $N_org #> [1] 20 #>  #> $C_org #> [1] 80 #>"},{"path":"/reference/matchInventoryRings.html","id":null,"dir":"Reference","previous_headings":"","what":"matchInventoryRings — matchInventoryRings","title":"matchInventoryRings — matchInventoryRings","text":"matchInventoryRings","code":""},{"path":"/reference/matchInventoryRings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"matchInventoryRings — matchInventoryRings","text":"","code":"matchInventoryRings(   trees,   rings,   extractor = \"TreeCode\",   nyears = 30,   coredOnly = TRUE )"},{"path":"/reference/matchInventoryRings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"matchInventoryRings — matchInventoryRings","text":"trees, rings codes extract IDs extractor function call, specified without initial `.` e.g. \"TreeCode\" calls `.TreeCode` nyears number years extract coredOnly logical: include trees data 2000?","code":""},{"path":"/reference/match_pft.html","id":null,"dir":"Reference","previous_headings":"","what":"match_pft — match_pft","title":"match_pft — match_pft","text":"Matches BETYdb species IDs model-specific PFTs","code":""},{"path":"/reference/match_pft.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"match_pft — match_pft","text":"","code":"match_pft(   bety_species_id,   pfts,   query = NULL,   con = NULL,   allow_missing = FALSE,   model = NULL )"},{"path":"/reference/match_pft.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"match_pft — match_pft","text":"bety_species_id vector BETYdb species IDs pfts settings$pfts.  List pfts database matching based name query Default NULL. query BETY db. con database connection, NULL use traits package allow_missing flag indicate settings file need match exactly model Default NULL. BETY model ID matching pfts correct model.","code":""},{"path":"/reference/match_pft.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"match_pft — match_pft","text":"table BETYdb PFT IDs matched species IDs","code":""},{"path":"/reference/match_pft.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"match_pft — match_pft","text":"Mike Dietze, Istem Fer","code":""},{"path":"/reference/match_species_id.html","id":null,"dir":"Reference","previous_headings":"","what":"Match BETY species ID. — match_species_id","title":"Match BETY species ID. — match_species_id","text":"Parses species codes input data matches BETY species ID.","code":""},{"path":"/reference/match_species_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Match BETY species ID. — match_species_id","text":"","code":"match_species_id(   input_codes,   format_name = \"custom\",   bety = NULL,   translation_table = NULL,   ... )"},{"path":"/reference/match_species_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Match BETY species ID. — match_species_id","text":"input_codes Character vector species codes format_name Species code format name (see details) bety BETY connection object translation_table Data frame custom translation table (see details). ... additional arguments, currently ignored","code":""},{"path":"/reference/match_species_id.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Match BETY species ID. — match_species_id","text":"data.frame containing following columns: input_code Character provided input bety_species_id Big integer species ID, unique specific BETY genus Genus part Latin name, BETY species Species part Latin name, BETY","code":""},{"path":"/reference/match_species_id.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Match BETY species ID. — match_species_id","text":"format_name can one following: usda USDA Plants database symbol (e.g. QURU, TSCA) fia FIA species code latin_name Scientific name, \"Genus species\"; must match exactly unambiguously scientificname field BETY custom data frame matching BETY IDs (column name bety_species_id) input codes (column name input_code). data frame must passed via translation_table argument.","code":""},{"path":"/reference/match_species_id.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Match BETY species ID. — match_species_id","text":"Alexey Shiklomanov <ashiklom@bu.edu>, Istem Fer","code":""},{"path":"/reference/match_species_id.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Match BETY species ID. — match_species_id","text":"","code":"if (FALSE) { # \\dontrun{ con <- PEcAn.DB::db.open(list(   driver = \"Postgres\",   dbname = 'bety',   user = 'bety',   password = 'bety',   host = 'localhost') ) input_codes <- c('ACRU', 'PIMA', 'TSCA') format_name <- 'usda' match_species_id(input_codes = input_codes,                  format_name = format_name,                  bety = con) } # }"},{"path":"/reference/mpot2smoist.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a matric potential to a soil moisture — mpot2smoist","title":"Convert a matric potential to a soil moisture — mpot2smoist","text":"Convert matric potential soil moisture","code":""},{"path":"/reference/mpot2smoist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a matric potential to a soil moisture — mpot2smoist","text":"","code":"mpot2smoist(   mpot,   soil_water_potential_at_saturation,   soil_hydraulic_b,   volume_fraction_of_water_in_soil_at_saturation )"},{"path":"/reference/mpot2smoist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a matric potential to a soil moisture — mpot2smoist","text":"mpot water potential (cm H2O) soil_water_potential_at_saturation water potential soil saturated (cm H2O) soil_hydraulic_b pore-size distribution parameter Campbell (1974) water content model volume_fraction_of_water_in_soil_at_saturation VSWC soil saturated (numeric range 0-1)","code":""},{"path":"/reference/mpot2smoist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a matric potential to a soil moisture — mpot2smoist","text":"volumetric soil water content","code":""},{"path":"/reference/netcdf.writer.BADM.html","id":null,"dir":"Reference","previous_headings":"","what":"netcdf.writer.BADAM — netcdf.writer.BADM","title":"netcdf.writer.BADAM — netcdf.writer.BADM","text":"netcdf.writer.BADAM","code":""},{"path":"/reference/netcdf.writer.BADM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"netcdf.writer.BADAM — netcdf.writer.BADM","text":"","code":"netcdf.writer.BADM(lat, long, siteid, outdir, ens)"},{"path":"/reference/netcdf.writer.BADM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"netcdf.writer.BADAM — netcdf.writer.BADM","text":"lat numeric latitude long numeric longitude siteid site id string outdir output dir want store IC netcdf file ens ensemble members, passed `pool_ic_list2netcdf`","code":""},{"path":"/reference/netcdf.writer.BADM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"netcdf.writer.BADAM — netcdf.writer.BADM","text":"dataframe file, host, mimetype, formatname, startdate, enddate dbfile.name columns","code":""},{"path":"/reference/om2soc.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert organic matter to soil organic carbon — om2soc","title":"Convert organic matter to soil organic carbon — om2soc","text":"Converts organic matter content soil organic carbon using Van Bemmelen factor (1.724).","code":""},{"path":"/reference/om2soc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert organic matter to soil organic carbon — om2soc","text":"","code":"om2soc(om_percent)"},{"path":"/reference/om2soc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert organic matter to soil organic carbon — om2soc","text":"om_percent organic matter percentage (0-100)","code":""},{"path":"/reference/om2soc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert organic matter to soil organic carbon — om2soc","text":"soil organic carbon percentage (0-100)","code":""},{"path":"/reference/om2soc.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert organic matter to soil organic carbon — om2soc","text":"Akash","code":""},{"path":"/reference/parse.MatrixNames.html","id":null,"dir":"Reference","previous_headings":"","what":"parse.MatrixNames — parse.MatrixNames","title":"parse.MatrixNames — parse.MatrixNames","text":"parse.MatrixNames","code":""},{"path":"/reference/parse.MatrixNames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"parse.MatrixNames — parse.MatrixNames","text":"","code":"parse.MatrixNames(w, pre = \"x\", numeric = FALSE)"},{"path":"/reference/parse.MatrixNames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"parse.MatrixNames — parse.MatrixNames","text":"w mcmc object containing matrix outputs pre prefix (variable name) matrix variable extracted numeric boolean, whether coerce class numeric","code":""},{"path":"/reference/parse.MatrixNames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"parse.MatrixNames — parse.MatrixNames","text":"matrix","code":""},{"path":"/reference/parse.MatrixNames.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"parse.MatrixNames — parse.MatrixNames","text":"Michael Dietze","code":""},{"path":"/reference/partition_roots.html","id":null,"dir":"Reference","previous_headings":"","what":"partition_roots — partition_roots","title":"partition_roots — partition_roots","text":"Given vector root size thresholds (lower bound ) vector corresponding root carbon values, partition_roots checks input can partitioned along .002 m threshold fine coarse roots returns list containing summed values fine coarse. fewer two thresholds none within .0005 m .002 m, returns NULL. Meant used conjunction standard variable root_carbon_content rtsize dimension, extracted netcdf.","code":""},{"path":"/reference/partition_roots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"partition_roots — partition_roots","text":"","code":"partition_roots(roots, rtsize)"},{"path":"/reference/partition_roots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"partition_roots — partition_roots","text":"roots vector root carbon values kg C m-2 rtsize vector lower bounds root size class thresholds m, length greater one equal roots. Must contain threshold within .0005 m .002 m","code":""},{"path":"/reference/partition_roots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"partition_roots — partition_roots","text":"list containing summed fine root coarse root carbon (2 values)","code":""},{"path":"/reference/partition_roots.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"partition_roots — partition_roots","text":"Anne Thomas","code":""},{"path":"/reference/plot2AGB.html","id":null,"dir":"Reference","previous_headings":"","what":"plot2AGB — plot2AGB","title":"plot2AGB — plot2AGB","text":"convert composite ring & census data AGB","code":""},{"path":"/reference/plot2AGB.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot2AGB — plot2AGB","text":"","code":"plot2AGB(combined, out, outfolder, allom.stats, unit.conv = 0.02)"},{"path":"/reference/plot2AGB.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot2AGB — plot2AGB","text":"combined data frame merging plot inventory tree ring data MCMC samples diameter (sample x tree) outfolder output folder graphs & data allom.stats Allometry statistics computed `AllomAve` unit.conv area conversion sum(kg/tree) kg/area","code":""},{"path":"/reference/plot2AGB.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"plot2AGB — plot2AGB","text":"Mike Dietze dietze@bu.edu","code":""},{"path":"/reference/pool_ic_list2netcdf.html","id":null,"dir":"Reference","previous_headings":"","what":"pool_ic_list2netcdf — pool_ic_list2netcdf","title":"pool_ic_list2netcdf — pool_ic_list2netcdf","text":"Converts input list containing standard dimensions variables (named values) initial conditions netcdf file, input pool-based models.","code":""},{"path":"/reference/pool_ic_list2netcdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"pool_ic_list2netcdf — pool_ic_list2netcdf","text":"","code":"pool_ic_list2netcdf(input, outdir, siteid, ens = NA)"},{"path":"/reference/pool_ic_list2netcdf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"pool_ic_list2netcdf — pool_ic_list2netcdf","text":"input list two elements: list netcdf dimensions (dims, named values) list variables (vals, named values) outdir directory write netcdf file siteid site id ens Default NA. Ensemble members.","code":""},{"path":"/reference/pool_ic_list2netcdf.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"pool_ic_list2netcdf — pool_ic_list2netcdf","text":"Anne Thomas","code":""},{"path":"/reference/pool_ic_netcdf2list.html","id":null,"dir":"Reference","previous_headings":"","what":"pool_ic_netcdf2list — pool_ic_netcdf2list","title":"pool_ic_netcdf2list — pool_ic_netcdf2list","text":"Converts netcdf containing standard dimensions variables pool-based initial conditions, created pool_ic_list2netcdf, back list format","code":""},{"path":"/reference/pool_ic_netcdf2list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"pool_ic_netcdf2list — pool_ic_netcdf2list","text":"","code":"pool_ic_netcdf2list(nc.path)"},{"path":"/reference/pool_ic_netcdf2list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"pool_ic_netcdf2list — pool_ic_netcdf2list","text":"nc.path path netcdf file containing standard dimensions variables","code":""},{"path":"/reference/pool_ic_netcdf2list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"pool_ic_netcdf2list — pool_ic_netcdf2list","text":"list two elements: list netcdf dimensions (dims, named values) list variables (vals, named values)","code":""},{"path":"/reference/pool_ic_netcdf2list.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"pool_ic_netcdf2list — pool_ic_netcdf2list","text":"Anne Thomas","code":""},{"path":"/reference/prepare_pools.html","id":null,"dir":"Reference","previous_headings":"","what":"prepare_pools — prepare_pools","title":"prepare_pools — prepare_pools","text":"Calculates pools given initial condition values, deriving complements necessary/possible given TotLivBiomass","code":""},{"path":"/reference/prepare_pools.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"prepare_pools — prepare_pools","text":"","code":"prepare_pools(nc.path, constants = NULL)"},{"path":"/reference/prepare_pools.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"prepare_pools — prepare_pools","text":"nc.path path netcdf file containing standard dimensions variables; currently supports variables: TotLivBiom, leaf_carbon_content, LAI, AbvGrndWood, root_carbon_content, fine_root_carbon_content, coarse_root_carbon_content, litter_carbon_content, soil_organic_carbon_content, soil_carbon_content, wood_debris_carbon_content constants list constants; must include SLA m2 / kg C providing LAI leaf carbon","code":""},{"path":"/reference/prepare_pools.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"prepare_pools — prepare_pools","text":"list pool values kg C / m2 generic names","code":""},{"path":"/reference/prepare_pools.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"prepare_pools — prepare_pools","text":"Anne Thomas","code":""},{"path":"/reference/preprocess_soilgrids_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Preprocess SoilGrids data for ensemble generation — preprocess_soilgrids_data","title":"Preprocess SoilGrids data for ensemble generation — preprocess_soilgrids_data","text":"Preprocess SoilGrids data ensemble generation","code":""},{"path":"/reference/preprocess_soilgrids_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preprocess SoilGrids data for ensemble generation — preprocess_soilgrids_data","text":"","code":"preprocess_soilgrids_data(soil_data, depth_layers, verbose = FALSE)"},{"path":"/reference/preprocess_soilgrids_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preprocess SoilGrids data for ensemble generation — preprocess_soilgrids_data","text":"soil_data Dataframe SoilGrids soil carbon data depth_layers Character vector depth layers process (e.g., c(\"0-30cm\", \"0-200cm\")) verbose Logical, print detailed progress information","code":""},{"path":"/reference/preprocess_soilgrids_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preprocess SoilGrids data for ensemble generation — preprocess_soilgrids_data","text":"List containing processed data CV distributions requested depths","code":""},{"path":"/reference/put_veg_module.html","id":null,"dir":"Reference","previous_headings":"","what":"Match species to PFTs + veg2model module — put_veg_module","title":"Match species to PFTs + veg2model module — put_veg_module","text":"Match species PFTs + veg2model module","code":""},{"path":"/reference/put_veg_module.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Match species to PFTs + veg2model module — put_veg_module","text":"","code":"put_veg_module(   getveg.id,   dbparms,   input_veg,   pfts,   outfolder,   n.ensemble,   dir,   model,   start_date,   end_date,   new_site,   host,   overwrite )"},{"path":"/reference/put_veg_module.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Match species to PFTs + veg2model module — put_veg_module","text":"getveg.id list, input.id dbfile.id IC file intermediate pecan standard dbparms list, settings$database info reqired opening connection DB input_veg list, sublist settings$run$inputs info source, id, metadata requested IC file pfts list, settings$pfts outfolder path processed files written n.ensemble integer, ensemble member number dir dir path dbfiles local machine model model name, e.g. \"ED2\" start_date date \"YYYY-MM-DD\" format, case source==FIA settings$run$start.date, otherwise start_date IC file DB end_date date \"YYYY-MM-DD\" format, case source==FIA settings$run$end.date, otherwise end_date IC file DB new_site data frame, id/lat/lon/name info site host list, host info settings$host, host$name forced \"localhost\" upstream overwrite logical flag convert_input","code":""},{"path":"/reference/put_veg_module.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Match species to PFTs + veg2model module — put_veg_module","text":"Istem Fer","code":""},{"path":"/reference/sample_ic.html","id":null,"dir":"Reference","previous_headings":"","what":"sample_ic — sample_ic","title":"sample_ic — sample_ic","text":"sample_ic","code":""},{"path":"/reference/sample_ic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sample_ic — sample_ic","text":"","code":"sample_ic(   in.path,   in.name,   start_date,   end_date,   outfolder,   n.ensemble,   machine_host,   source,   bin_var = \"DBH\",   bin_size = 10,   bin_herb_soil = TRUE,   ... )"},{"path":"/reference/sample_ic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"sample_ic — sample_ic","text":".path path folder file sampled .name file name file sampled start_date date \"YYYY-MM-DD\" format end_date date \"YYYY-MM-DD\" format outfolder dir path, whete write file n.ensemble integer, ensemble member number machine_host localhost name, e.g. \"pecan2.bu.edu\" source string appear file names, e.g. \"PalEON\" bin_var variable like sample , DEFAULT DBH bin_size bin size sampling, DEFAULT 10 bin_herb_soil want use bin size herb soil sampling ... inputs","code":""},{"path":"/reference/sample_ic.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"sample_ic — sample_ic","text":"Istem Fer","code":""},{"path":"/reference/sclass.html","id":null,"dir":"Reference","previous_headings":"","what":"This function determines the soil class number based on the fraction of sand, clay, and silt — sclass","title":"This function determines the soil class number based on the fraction of sand, clay, and silt — sclass","text":"function determines soil class number based fraction sand, clay, silt","code":""},{"path":"/reference/sclass.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function determines the soil class number based on the fraction of sand, clay, and silt — sclass","text":"","code":"sclass(sandfrac, clayfrac)"},{"path":"/reference/sclass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function determines the soil class number based on the fraction of sand, clay, and silt — sclass","text":"sandfrac, clayfrac numeric vectors values range 0 1. Silt fraction assumed difference (sand+clay) 1","code":""},{"path":"/reference/sclass.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function determines the soil class number based on the fraction of sand, clay, and silt — sclass","text":"vector integers identifying textural class input layer.  Possible values 1 17; NB class  boundaries 12 USDA soil texture classes.","code":""},{"path":"/reference/sclass.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"This function determines the soil class number based on the fraction of sand, clay, and silt — sclass","text":"","code":"sclass(0.3,0.3) #> [1] 8"},{"path":"/reference/shp2kml.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert shapefile to KML — shp2kml","title":"Convert shapefile to KML — shp2kml","text":"Convert ESRI shapefile (*.shp) keyhole markup language (KML) file format","code":""},{"path":"/reference/shp2kml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert shapefile to KML — shp2kml","text":"","code":"shp2kml(   dir,   ext,   kmz = FALSE,   proj4 = NULL,   color = NULL,   NameField = NULL,   out.dir = NULL )"},{"path":"/reference/shp2kml.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert shapefile to KML — shp2kml","text":"dir Directory GIS shapefiles convert kml/kmz ext File extension files convert kml/kmz.  Defaults ESRI shapefile, '.shp'.  [Place holder potential vector files conver kml] kmz TRUE/FALSE. Option write file compressed kml. Requires zip utility proj4 OPTIONAL. Define output proj4 projection string.  set, input vector reprojected desired projection.  yet implemented. color OPTIONAL. Fill color output kml/kmz file NameField OPTIONAL. Define names individual features KML/KMZ file .dir OPTIONAL. Output directory converted files","code":""},{"path":"/reference/shp2kml.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert shapefile to KML — shp2kml","text":"Shawn P. Serbin","code":""},{"path":"/reference/shp2kml.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert shapefile to KML — shp2kml","text":"","code":"if (FALSE) { # \\dontrun{ dir <- Sys.glob(file.path(R.home(), 'library', 'PEcAn.data.land','data')) out.dir <- path.expand('~/temp') shp2kml(dir,'.shp',kmz=FALSE,NameField='STATE',out.dir=out.dir) system(paste('rm -r ',out.dir)) } # }"},{"path":"/reference/soc2ocs.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert soil organic carbon concentration to organic carbon stock — soc2ocs","title":"Convert soil organic carbon concentration to organic carbon stock — soc2ocs","text":"Convert soil organic carbon concentration organic carbon stock","code":""},{"path":"/reference/soc2ocs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert soil organic carbon concentration to organic carbon stock — soc2ocs","text":"","code":"soc2ocs(soc_percent, bulk_density, thickness, coarse_fraction = 0)"},{"path":"/reference/soc2ocs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert soil organic carbon concentration to organic carbon stock — soc2ocs","text":"soc_percent soil organic carbon concentration (percent, 0-100) bulk_density bulk density (g/cm3) thickness layer thickness (cm) coarse_fraction coarse fragment volume fraction (0-1, default = 0)","code":""},{"path":"/reference/soc2ocs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert soil organic carbon concentration to organic carbon stock — soc2ocs","text":"organic carbon stock (kg/m2)","code":""},{"path":"/reference/soc2ocs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert soil organic carbon concentration to organic carbon stock — soc2ocs","text":"Akash","code":""},{"path":"/reference/soc2ocs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert soil organic carbon concentration to organic carbon stock — soc2ocs","text":"","code":"soc2ocs(2.5, 1.3, 30, 0.15) #> [1] 8.2875  # Multiple soil layers soc_pct <- c(3.2, 2.1, 1.8) bd_g_cm3 <- c(1.2, 1.4, 1.5) thickness_cm <- c(15, 15, 30) coarse_fraction <- c(0.10, 0.20, 0.25) soc2ocs(soc_pct, bd_g_cm3, thickness_cm, coarse_fraction) #> [1] 5.184 3.528 6.075"},{"path":"/reference/soil.units.html","id":null,"dir":"Reference","previous_headings":"","what":"Get standard units for a soil variable — soil.units","title":"Get standard units for a soil variable — soil.units","text":"Given SSURGO names soil properties, looks standard units. Note names must match exactly.","code":""},{"path":"/reference/soil.units.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get standard units for a soil variable — soil.units","text":"","code":"soil.units(varname = NA)"},{"path":"/reference/soil.units.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get standard units for a soil variable — soil.units","text":"varname character vector. See details","code":""},{"path":"/reference/soil.units.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get standard units for a soil variable — soil.units","text":"character matrix columns var unit","code":""},{"path":"/reference/soil.units.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get standard units for a soil variable — soil.units","text":"Supported variables : soil_depth soil_cec fraction_of_clay_in_soil fraction_of_sand_in_soil fraction_of_silt_in_soil fraction_of_gravel_in_soil volume_fraction_of_water_in_soil_at_saturation volume_fraction_of_water_in_soil_at_field_capacity volume_fraction_of_condensed_water_in_dry_soil volume_fraction_of_condensed_water_in_soil_at_wilting_point soilC soil_ph soil_bulk_density soil_type soil_hydraulic_b soil_water_potential_at_saturation soil_hydraulic_conductivity_at_saturation thcond0 thcond1 thcond2 thcond3 soil_thermal_conductivity soil_thermal_conductivity_at_saturation soil_thermal_capacity soil_albedo slpotwp slpotcp slcpd slden soil_organic_carbon_stock","code":""},{"path":"/reference/soil.units.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get standard units for a soil variable — soil.units","text":"","code":"soil.units(\"soil_albedo\") #> [1] \"1\""},{"path":"/reference/soil2netcdf.html","id":null,"dir":"Reference","previous_headings":"","what":"Save soil texture & parameters in PEcAn standard netCDF CF — soil2netcdf","title":"Save soil texture & parameters in PEcAn standard netCDF CF — soil2netcdf","text":"table standard names units can displayed running  soil.units() without arguements","code":""},{"path":"/reference/soil2netcdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save soil texture & parameters in PEcAn standard netCDF CF — soil2netcdf","text":"","code":"soil2netcdf(soil.data, new.file)"},{"path":"/reference/soil2netcdf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save soil texture & parameters in PEcAn standard netCDF CF — soil2netcdf","text":"soil.data List soil variables standard names & units. Minimum soil_depth two [sand, silt, clay]. Bulk density encouraged. new.file filename (including path) output","code":""},{"path":"/reference/soil2netcdf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save soil texture & parameters in PEcAn standard netCDF CF — soil2netcdf","text":"none","code":""},{"path":"/reference/soil2netcdf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Save soil texture & parameters in PEcAn standard netCDF CF — soil2netcdf","text":"soil_params called internally estimate additional soil physical parameters sand/silt/clay & bulk density. overwrite provided values Need expand alternatively take soil_type (texture class) input output, soil_type named class converted number netCDF pain storing strings. Conversion back can done  load(system.file (\"data/soil_class.RData\",package = \"PEcAn.data.land\"))  soil.name[soil_n]","code":""},{"path":"/reference/soil2netcdf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save soil texture & parameters in PEcAn standard netCDF CF — soil2netcdf","text":"","code":"if (FALSE)  soil.data <- list(fraction_of_sand_in_soil = c  (0.3,0.4,0.5), fraction_of_clay_in_soil = c(0.3,0.3,0.3), soil_depth = c  (0.2,0.5,1.0))                          soil2netcdf(soil.data,\"soil.nc\")  # \\dontrun{} #> Error: object 'soil.data' not found"},{"path":"/reference/soil_class.html","id":null,"dir":"Reference","previous_headings":"","what":"Default parameters for calculating soil properties from sand & clay content — soil_class","title":"Default parameters for calculating soil properties from sand & clay content — soil_class","text":"Default parameters calculating soil properties sand & clay content","code":""},{"path":"/reference/soil_class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default parameters for calculating soil properties from sand & clay content — soil_class","text":"","code":"soil_class"},{"path":"/reference/soil_class.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Default parameters for calculating soil properties from sand & clay content — soil_class","text":"## `soil_class` list 26 entries: air.cond, h2o.cond, sand.cond, silt.cond, clay.cond thermal conductivity, W m^-1 K^-1 air.hcap, sand.hcap, silt.hcap, clay.hcap heat capacity, \tJ m^-3 K^-1 kair, ksand, ksilt, kclay relative conductivity factor fieldcp.K hydraulic conductance field capacity, mm day^-1 grav gravity acceleration, m s^-2 soil.key Abbreviations 18 soil texture classes, e.g. \t\t\"SiL\", \"LSa\" soil.name Names 18 soil texture classes, e.g. \"Sand\", \t\"Silty clay\" soilcp.MPa soil water potential air-dry, MPa soilld.MPa soil water potential critical water content, MPa soilwp.MPa soil water potential wilting point, MPa stext.lines list 18 lists, giving minimum maximum   \tsand/silt/clay contents soil texture class stext.polygon list 18 lists, giving corner points \tsoil texture triangle soil texture class texture data frame 13 rows 21 columns, giving default \tparameter values 13 named soil textures theta.crit critical water content (fractional soil moisture \tplants start dropping leaves), m^3 m^-3 xclay.def default volume fraction sand 18 soil \ttexture classes xsand.def default volume fraction clay 18 soil \ttexture classes","code":""},{"path":"/reference/soil_class.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Default parameters for calculating soil properties from sand & clay content — soil_class","text":"hydraulic parameters derived Cosby et al 1984, \"Statistical Exploration Relationships Soil Moisture Characteristics Physical Properties Soils\", Water Resources Research 20(6): 682-690. implementation comes one provided ED2 model, plus `texture.csv` source recorded. Package `PEcAn.linkages` contains identical texture.csv, also obvious source label. See also comments soil_utils.R","code":""},{"path":"/reference/soil_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate soil parameters from texture class or sand/silt/clay — soil_params","title":"Estimate soil parameters from texture class or sand/silt/clay — soil_params","text":"Estimate soil parameters texture class sand/silt/clay","code":""},{"path":"/reference/soil_params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate soil parameters from texture class or sand/silt/clay — soil_params","text":"","code":"soil_params(   soil_type = NULL,   sand = NULL,   silt = NULL,   clay = NULL,   bulk = NULL )"},{"path":"/reference/soil_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate soil parameters from texture class or sand/silt/clay — soil_params","text":"soil_type USDA Soil Class. See Details sand percent sand silt percent silt clay percent clay bulk soil bulk density (optional, kg m-3)","code":""},{"path":"/reference/soil_params.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate soil parameters from texture class or sand/silt/clay — soil_params","text":"list soil hydraulic thermal parameters","code":""},{"path":"/reference/soil_params.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimate soil parameters from texture class or sand/silt/clay — soil_params","text":"* Specify _either_ soil_type sand/silt/clay. soil_type ignored sand/silt/clay provided * 2 sand/silt/clay provided, assumed sum 100 * Valid soil class options: \"Sand\",\"Loamy sand\",\"Sandy loam\",\"Silt loam\",\"Loam\",                             \"Sandy clay loam\",\"Silty clay loam\",\"Clayey loam\",                             \"Sandy clay\",\"Silty clay\",\"Clay\",\"Peat\",\"Bedrock\",                             \"Silt\",\"Heavy clay\",\"Clayey sand\",\"Clayey silt\" * Based ED2/R-utils/soilutils.r * Hydraulics based Cosby et al 1984, using table 4 equation 1 (incorrect saturated moisture potential moisture potential)","code":""},{"path":"/reference/soil_params.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate soil parameters from texture class or sand/silt/clay — soil_params","text":"","code":"sand <- c(0.3, 0.4, 0.5) clay <- c(0.3, 0.3, 0.3) soil_params(sand=sand,clay=clay) #> $soil_n #> [1] 8 8 6 #>  #> $soil_type #> [1] \"Clayey loam\"     \"Clayey loam\"     \"Sandy clay loam\" #>  #> $fraction_of_sand_in_soil #> [1] 0.3 0.4 0.5 #>  #> $fraction_of_clay_in_soil #> [1] 0.3 0.3 0.3 #>  #> $fraction_of_silt_in_soil #> [1] 0.4 0.3 0.2 #>  #> $soil_hydraulic_b #> [1] 7.72 7.69 7.66 #>  #> $soil_water_potential_at_saturation #> [1] -0.3213661 -0.2233572 -0.1552387 #>  #> $soil_hydraulic_conductivity_at_saturation #> [1] 2.719764e-06 3.635224e-06 4.858825e-06 #>  #> $volume_fraction_of_water_in_soil_at_saturation #> [1] 0.4513 0.4371 0.4229 #>  #> $volume_fraction_of_water_in_soil_at_field_capacity #> [1] 0.2962469 0.2820442 0.2682089 #>  #> $volume_fraction_of_condensed_water_in_soil_at_wilting_point #> [1] 0.2030625 0.1870019 0.1719619 #>  #> $volume_fraction_of_condensed_water_in_dry_soil #> [1] 0.1848382 0.1701565 0.1564135 #>  #> $thcond0 #> [1] 0.7823956 0.8063304 0.8304992 #>  #> $thcond1 #> [1] 0.5333047 0.5333047 0.5333047 #>  #> $thcond2 #> [1] 0.8136880 0.7926926 0.7714920 #>  #> $thcond3 #> [1] -0.4678112 -0.4678112 -0.4678112 #>  #> $soil_thermal_conductivity #> [1] 1.211425 1.258009 1.308734 #>  #> $soil_thermal_conductivity_at_saturation #> [1] 1.697869 1.767113 1.840888 #>  #> $soil_albedo #> [1] 0.25 0.25 0.25 #>  #> $soil_bulk_density #> [1] 1350 1350 1350 #>  #> $soil_thermal_capacity #> [1] 917.2615 935.6388 953.7453 #>"},{"path":"/reference/soil_params_ensemble_soilgrids.html","id":null,"dir":"Reference","previous_headings":"","what":"A function to estimate the soil parameters based on SoilGrids soil texture data and write the parameter paths into settings — soil_params_ensemble_soilgrids","title":"A function to estimate the soil parameters based on SoilGrids soil texture data and write the parameter paths into settings — soil_params_ensemble_soilgrids","text":"function estimate soil parameters based SoilGrids soil texture  data write parameter paths settings","code":""},{"path":"/reference/soil_params_ensemble_soilgrids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function to estimate the soil parameters based on SoilGrids soil texture data and write the parameter paths into settings — soil_params_ensemble_soilgrids","text":"","code":"soil_params_ensemble_soilgrids(   settings,   sand,   clay,   silt,   outdir,   write_into_settings = TRUE )"},{"path":"/reference/soil_params_ensemble_soilgrids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function to estimate the soil parameters based on SoilGrids soil texture data and write the parameter paths into settings — soil_params_ensemble_soilgrids","text":"settings multi-site settings sand, clay, silt Data frames containing fraction percentage SoilGrids250m v2.0, columns \"Depth\", \"Quantile\", \"Siteid\", \"Value\" outdir Provide path store parameter files write_into_settings Whether write path parameter file setting. default TRUE","code":""},{"path":"/reference/soil_params_ensemble_soilgrids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function to estimate the soil parameters based on SoilGrids soil texture data and write the parameter paths into settings — soil_params_ensemble_soilgrids","text":"Ensemble soil parameter files defined outdir file paths xml file","code":""},{"path":"/reference/soil_params_ensemble_soilgrids.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"A function to estimate the soil parameters based on SoilGrids soil texture data and write the parameter paths into settings — soil_params_ensemble_soilgrids","text":"Qianyu Li","code":""},{"path":"/reference/soil_params_ensemble_soilgrids.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A function to estimate the soil parameters based on SoilGrids soil texture data and write the parameter paths into settings — soil_params_ensemble_soilgrids","text":"","code":"if (FALSE) { # \\dontrun{  outdir <- \"/projectnb/dietzelab/Cherry/SoilGrids_texture/39NEON\" # each file contains percent salt, silt, or clay sand <- readRDS(\"/path/to/SoilGrids_texture/sand_percent.rds\") clay <- readRDS(\"/path/to/SoilGrids_texture/clay_percent.rds\") silt <- readRDS(\"/path/to/SoilGrids_texture/silt_percent.rds\") settings <-read.settings(\"/path/to/pecan_monthly_SDA_soilwater.xml\") soil_params_ensemble_soilgrids(settings,sand,clay,silt,outdir) } # }"},{"path":"/reference/soil_process.html","id":null,"dir":"Reference","previous_headings":"","what":"Module for managing soil texture extraction — soil_process","title":"Module for managing soil texture extraction — soil_process","text":"Module managing soil texture extraction","code":""},{"path":"/reference/soil_process.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Module for managing soil texture extraction — soil_process","text":"","code":"soil_process(settings, input, dbfiles, overwrite = FALSE, run.local = TRUE)"},{"path":"/reference/soil_process.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Module for managing soil texture extraction — soil_process","text":"settings PEcAn settings list input PEcAn input list dbfiles directory write database files overwrite overwrite previous results (boolean) run.local logical: Run current machine? FALSE, runs `settings$host` (might turn current machine)","code":""},{"path":"/reference/soil_process.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Module for managing soil texture extraction — soil_process","text":"path soil file","code":""},{"path":"/reference/soilgrids_ic_process.html","id":null,"dir":"Reference","previous_headings":"","what":"SoilGrids Initial Conditions (IC) Utilities — soilgrids_ic_process","title":"SoilGrids Initial Conditions (IC) Utilities — soilgrids_ic_process","text":"Functions generating soil carbon IC files SoilGrids250m data","code":""},{"path":"/reference/soilgrids_ic_process.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SoilGrids Initial Conditions (IC) Utilities — soilgrids_ic_process","text":"","code":"soilgrids_ic_process(   settings,   dir,   depth = c(0.3, 2),   overwrite = FALSE,   verbose = FALSE )"},{"path":"/reference/soilgrids_ic_process.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SoilGrids Initial Conditions (IC) Utilities — soilgrids_ic_process","text":"settings PEcAn settings list containing site information dir Output directory IC files depth Numeric vector depth values meters. Can single value multiple values c(0.3, 2.0). Default: c(0.3, 2.0) overwrite Overwrite existing files? (Default: FALSE) verbose Print detailed progress information? (Default: FALSE)","code":""},{"path":"/reference/soilgrids_ic_process.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SoilGrids Initial Conditions (IC) Utilities — soilgrids_ic_process","text":"List paths generated IC files, organized site ID","code":""},{"path":"/reference/soilgrids_ic_process.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"SoilGrids Initial Conditions (IC) Utilities — soilgrids_ic_process","text":"module provides functions extracting, processing, generating          ensemble members soil carbon initial conditions using SoilGrids data.          soil carbon values kg/m2. Process SoilGrids data initial conditions","code":""},{"path":"/reference/soilgrids_ic_process.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"SoilGrids Initial Conditions (IC) Utilities — soilgrids_ic_process","text":"Akash","code":""},{"path":"/reference/soilgrids_ic_process.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SoilGrids Initial Conditions (IC) Utilities — soilgrids_ic_process","text":"","code":"if (FALSE) { # \\dontrun{ # Process both depths (default) settings <- PEcAn.settings::read.settings(\"pecan.xml\") output_dir <- withr::local_tempdir() ic_files <- soilgrids_ic_process(settings, dir = output_dir)    # Process only 30cm depth ic_files <- soilgrids_ic_process(settings, dir = output_dir, depth = 0.3) } # }"},{"path":"/reference/soilgrids_soilC_extract.html","id":null,"dir":"Reference","previous_headings":"","what":"soilgrids_soilC_extract — soilgrids_soilC_extract","title":"soilgrids_soilC_extract — soilgrids_soilC_extract","text":"soilgrids_soilC_extract function function extract total soil organic carbon single group lat/long locationsbased user-defined site location SoilGrids250m version 2.0 : https://soilgrids.org","code":""},{"path":"/reference/soilgrids_soilC_extract.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"soilgrids_soilC_extract — soilgrids_soilC_extract","text":"","code":"soilgrids_soilC_extract(site_info, outdir = NULL, verbose = TRUE)"},{"path":"/reference/soilgrids_soilC_extract.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"soilgrids_soilC_extract — soilgrids_soilC_extract","text":"site_info dataframe site info containing BETYdb site ID, site name, latitude, longitude, e.g. (site_id, site_name, lat, lon) outdir Optional. Provide results CSV file (soilgrids_soilC_data.csv) verbose Provide progress feedback terminal? TRUE/FALSE","code":""},{"path":"/reference/soilgrids_soilC_extract.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"soilgrids_soilC_extract — soilgrids_soilC_extract","text":"dataframe containing total soil carbon values corresponding standard deviation values (uncertainties) location Output column names c(\"Site_ID\",\"Site_Name\",\"Latitude\",\"Longitude\", \"Total_soilC\",\"Std_soilC\")","code":""},{"path":"/reference/soilgrids_soilC_extract.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"soilgrids_soilC_extract — soilgrids_soilC_extract","text":"Qianyu Li, Shawn P. Serbin","code":""},{"path":"/reference/soilgrids_soilC_extract.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"soilgrids_soilC_extract — soilgrids_soilC_extract","text":"","code":"if (FALSE) { # \\dontrun{  # Example 1 - using the modex.bnl.gov BETYdb and site IDs to extract data db <- 'betydb' host_db <- 'modex.bnl.gov' db_port <- '5432' db_user <- 'bety' db_password <- 'bety'  bety <- list(user='bety', password='bety', host=host_db, dbname='betydb', driver=RPostgres::Postgres(),write=FALSE)  con <- DBI::dbConnect(drv=bety$driver, dbname=bety$dbname, host=bety$host,  password=bety$password, user=bety$user)  suppressWarnings(site_qry <- glue::glue_sql(\"SELECT *, ST_X(ST_CENTROID(geometry)) AS lon, ST_Y(ST_CENTROID(geometry)) AS lat FROM sites WHERE id IN ({ids*})\", ids = c(\"676\",\"622\",\"678\",\"766\",\"764\"), .con = con))  suppressWarnings(qry_results.1 <- DBI::dbSendQuery(con,site_qry)) suppressWarnings(qry_results.2 <- DBI::dbFetch(qry_results.1)) DBI::dbClearResult(qry_results.1) DBI::dbDisconnect(con)  site_info <- qry_results.2 verbose <- TRUE system.time(result_soc <- PEcAn.data.land::soilgrids_soilC_extract(site_info=site_info,  verbose=verbose)) result_soc  } # }"},{"path":"/reference/soilgrids_texture_extraction.html","id":null,"dir":"Reference","previous_headings":"","what":"soilgrids_texture_extraction — soilgrids_texture_extraction","title":"soilgrids_texture_extraction — soilgrids_texture_extraction","text":"soilgrids_texture_extraction function function extract save three types soil texture data parallel single group lat/long locations based user-defined site location SoilGrids250m version 2.0 : https://soilgrids.org","code":""},{"path":"/reference/soilgrids_texture_extraction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"soilgrids_texture_extraction — soilgrids_texture_extraction","text":"","code":"soilgrids_texture_extraction(   data_paths,   site_info,   outdir = NULL,   verbose = TRUE )"},{"path":"/reference/soilgrids_texture_extraction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"soilgrids_texture_extraction — soilgrids_texture_extraction","text":"data_paths list containing data (either virtual raster files local file folders) output path types SoilGrids texture data e.g. data_paths <- list(  list(     url = \"/vsicurl?max_retry=30&retry_delay=60&list_dir=&url=https://files.isric.org/soilgrids/latest/data/sand/sand_\",     local = NULL,     save_path = paste0(outdir, \"sand_percent.rds\")),  list(     url = \"/vsicurl?max_retry=30&retry_delay=60&list_dir=&url=https://files.isric.org/soilgrids/latest/data/clay/clay_\",     local = NULL,     save_path = paste0(outdir, \"clay_percent.rds\")),  list(     url = \"/vsicurl?max_retry=30&retry_delay=60&list_dir=&url=https://files.isric.org/soilgrids/latest/data/silt/silt_\",     local = NULL,     save_path = paste0(outdir, \"silt_percent.rds\"))) site_info data frame site info containing BETYdb site ID, site name, latitude, longitude, e.g. (site_id, lat, lon) outdir Provide path store texture data file verbose Provide progress feedback terminal? TRUE/FALSE","code":""},{"path":"/reference/soilgrids_texture_extraction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"soilgrids_texture_extraction — soilgrids_texture_extraction","text":"data frame containing soil texture data columns \"Depth\", \"Quantile\", \"Siteid\", \"Value\"","code":""},{"path":"/reference/soilgrids_texture_extraction.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"soilgrids_texture_extraction — soilgrids_texture_extraction","text":"Qianyu Li","code":""},{"path":"/reference/subset_layer.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to subset and clip a GIS vector or raster layer by a bounding box or clip/subset layer (e.g. shapefile/KML) — subset_layer","title":"Function to subset and clip a GIS vector or raster layer by a bounding box or clip/subset layer (e.g. shapefile/KML) — subset_layer","text":"Function subset clip GIS vector raster layer bounding box clip/subset layer (e.g. shapefile/KML)","code":""},{"path":"/reference/subset_layer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to subset and clip a GIS vector or raster layer by a bounding box or clip/subset layer (e.g. shapefile/KML) — subset_layer","text":"","code":"subset_layer(   file,   coords = NULL,   sub.layer = NULL,   clip = FALSE,   out.dir = NULL,   out.name = NULL )"},{"path":"/reference/subset_layer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to subset and clip a GIS vector or raster layer by a bounding box or clip/subset layer (e.g. shapefile/KML) — subset_layer","text":"file input file subset coords vector xmin,ymin,xmax,ymax defing bounding box subset sub.layer Vector layer defining subset region clip clip geometries bounding box/subset layer? TRUE/FALSE .dir output directory subset layer. Defaults location input file.  Can also set 'pwd' .name filename subset layer.  Defaults original filename suffix *.sub","code":""},{"path":"/reference/subset_layer.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Function to subset and clip a GIS vector or raster layer by a bounding box or clip/subset layer (e.g. shapefile/KML) — subset_layer","text":"Shawn P. Serbin","code":""},{"path":"/reference/subset_layer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to subset and clip a GIS vector or raster layer by a bounding box or clip/subset layer (e.g. shapefile/KML) — subset_layer","text":"","code":"if (FALSE) { # \\dontrun{ # Test dataset file <- Sys.glob(file.path(R.home(), 'library', 'PEcAn.data.land','data','*.shp')) out.dir <- path.expand('~/temp') # with clipping enabled subset_layer(file=file,coords=c(-95,42,-84,47),clip=TRUE,out.dir=out.dir) # without clipping enables subset_layer(file=file,coords=c(-95,42,-84,47),out.dir=out.dir) system(paste('rm -r',out.dir,sep='')) } # }"},{"path":"/reference/to.Tag.html","id":null,"dir":"Reference","previous_headings":"","what":"to.Tag — to.Tag","title":"to.Tag — to.Tag","text":".Tag","code":""},{"path":"/reference/to.Tag.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"to.Tag — to.Tag","text":"","code":"to.Tag(SITE, PLOT, SUBPLOT, TAG = NULL)"},{"path":"/reference/to.Tag.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"to.Tag — to.Tag","text":"SITE, PLOT, SUBPLOT ignored TAG string (coercible )","code":""},{"path":"/reference/to.TreeCode.html","id":null,"dir":"Reference","previous_headings":"","what":"to.TreeCode — to.TreeCode","title":"to.TreeCode — to.TreeCode","text":".TreeCode","code":""},{"path":"/reference/to.TreeCode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"to.TreeCode — to.TreeCode","text":"","code":"to.TreeCode(SITE, PLOT, SUBPLOT, TAG = NULL)"},{"path":"/reference/to.TreeCode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"to.TreeCode — to.TreeCode","text":"SITE, PLOT, SUBPLOT, TAG strings (coercible )","code":""},{"path":"/reference/validate_events_json.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate PEcAn events JSON against schema v0.1.0 — validate_events_json","title":"Validate PEcAn events JSON against schema v0.1.0 — validate_events_json","text":"Validates PEcAn events JSON file (single-site object array site objects) bundled JSON Schema (draft 2020-12) using AJV engine.","code":""},{"path":"/reference/validate_events_json.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate PEcAn events JSON against schema v0.1.0 — validate_events_json","text":"","code":"validate_events_json(events_json, verbose = TRUE)"},{"path":"/reference/validate_events_json.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate PEcAn events JSON against schema v0.1.0 — validate_events_json","text":"events_json character. Path JSON file validate. verbose logical. `TRUE`, include detailed AJV messages error.","code":""},{"path":"/reference/validate_events_json.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate PEcAn events JSON against schema v0.1.0 — validate_events_json","text":"Logical TRUE valid, FALSE invalid. NA validator unavailable.","code":""},{"path":"/reference/validate_events_json.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Validate PEcAn events JSON against schema v0.1.0 — validate_events_json","text":"- Logs error returns FALSE JSON file exist   conform schema. - Logs warning returns TRUE optional package `jsonvalidate`   installed, calling code can proceed without hard dependency.","code":""},{"path":"/reference/validate_events_json.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Validate PEcAn events JSON against schema v0.1.0 — validate_events_json","text":"David LeBauer","code":""},{"path":"/reference/validate_events_json.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate PEcAn events JSON against schema v0.1.0 — validate_events_json","text":"","code":"# validate_events_json(system.file(\"events_fixtures/events_site1.json\", #                                package = \"PEcAn.data.land\"))"},{"path":"/reference/write_ic.html","id":null,"dir":"Reference","previous_headings":"","what":"write_ic — write_ic","title":"write_ic — write_ic","text":"write_ic","code":""},{"path":"/reference/write_ic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"write_ic — write_ic","text":"","code":"write_ic(   in.path,   in.name,   start_date,   end_date,   outfolder,   model,   new_site,   pfts,   source = input_veg$source,   overwrite = FALSE,   n.ensemble,   host.inputargs,   ... )"},{"path":"/reference/write_ic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"write_ic — write_ic","text":".path file path rds file IC data .name file name IC data start_date YYYY-MM-DD end_date YYYY-MM-DD outfolder Location store function outputs model BETY model ID new_site Site info including lat, lon, BETT site ID pfts list settings$pfts. source Data source saved BETY db overwrite DEfault FALSE. Option overwrite existing files. n.ensemble number ensemble members host.inputargs host info taken settings object ... Additional parameters","code":""},{"path":"/reference/write_ic.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"write_ic — write_ic","text":"Istem Fer","code":""},{"path":"/reference/write_veg.html","id":null,"dir":"Reference","previous_headings":"","what":"write_veg — write_veg","title":"write_veg — write_veg","text":"Function save intermediate rds file","code":""},{"path":"/reference/write_veg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"write_veg — write_veg","text":"","code":"write_veg(outfolder, start_date, veg_info, source)"},{"path":"/reference/write_veg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"write_veg — write_veg","text":"outfolder output folder start_date start date veg_info vegetation data saved source name data source (used file naming)","code":""},{"path":"/news/index.html","id":"pecandataland-182","dir":"Changelog","previous_headings":"","what":"PEcAn.data.land 1.8.2","title":"PEcAn.data.land 1.8.2","text":"Removed unused parameter machine put_veg_module() Fixed “external pointer valid” error addressed key bugs soilgrids_soilC_extract() function (#3506)","code":""},{"path":"/news/index.html","id":"pecandataland-181","dir":"Changelog","previous_headings":"","what":"PEcAn.data.land 1.8.1","title":"PEcAn.data.land 1.8.1","text":"Dependency datapack now optional. used dataone_download() (#3373). soilgrids_soilC_extract() longer returns empty dataframe none queried locations missing data. (#3409) Functions name output folders settings$siteID longer assume IDs numeric","code":""},{"path":[]},{"path":"/news/index.html","id":"added-1-8-0","dir":"Changelog","previous_headings":"","what":"Added","title":"PEcAn.data.land 1.8.0","text":"New function soilgrids_soilC_extract retrieves soil C estimates uncertainty ISRIC SoilGrids 250m data. (#3040, @Qianyuxuan) Included relevant carbon pools (ROOT_BIOMASS, AG_BIOMASS, SOIL_STOCK, LIT_BIOMASS) BADM-based IC extraction; excluded non-pool variables like SOIL_CHEM. Added explicit support LIT_BIOMASS fully utilize BADM biomass capabilities. Added test-IC_BADM_Utilities.R validate BADM initial condition extraction processing extract_soil_gssurgo now supports spatial sampling using grid user-defined size spacing. supports ensemble simulation soil organic carbon (SOC) stocks, using area-weighted aggregation","code":""},{"path":"/news/index.html","id":"fixed-1-8-0","dir":"Changelog","previous_headings":"","what":"Fixed","title":"PEcAn.data.land 1.8.0","text":"gSSURGO.Query() now always returns columns requested, even ones NA. also now always requires mukeys specified. Updated gSSURGO.Query() extract_soil_gssurgo() work formatting changes underlying gSSURGO API","code":""},{"path":"/news/index.html","id":"removed-1-8-0","dir":"Changelog","previous_headings":"","what":"Removed","title":"PEcAn.data.land 1.8.0","text":"find.land() removed. used anywhere know , apparently working time, relied maptools package scheduled retirement. Removed dependency PEcAn.data.atmosphere, notably retrieving site latitude longitude directly PEcAn.DB::query.site instead custom lookups (#3300, Abhinav Pandey). Fixed bugs BADM now process single-site multi-site settings, detecting input structure processing site independently generate correct number ensemble members per site.","code":""},{"path":"/news/index.html","id":"pecandataland-171","dir":"Changelog","previous_headings":"","what":"PEcAn.data.land 1.7.1","title":"PEcAn.data.land 1.7.1","text":"changes 1.7.1 earlier recorded single file PEcAn packages; please see https://github.com/PecanProject/pecan/blob/v1.7.1/CHANGELOG.md details.","code":""}]
