[{"path":[]},{"path":"/articles/priors_demo.html","id":"example-specific-leaf-area-based-on-all-grasses","dir":"Articles","previous_headings":"Fitting priors to data (point estimates, all grass species in GLOPNET).","what":"Example: Specific Leaf Area based on all grasses","title":"Generating Priors based on Data and / or Expert knowledge","text":"First going set initial values.","code":""},{"path":"/articles/priors_demo.html","id":"mle-fit-to-glopnet-specific-leaf-area-data","dir":"Articles","previous_headings":"Fitting priors to data (point estimates, all grass species in GLOPNET).","what":"MLE Fit to glopnet Specific Leaf Area data","title":"Generating Priors based on Data and / or Expert knowledge","text":"PEcAn.priors::fit.dist helps choose best fit parameter distribution given sample datasets.  fit.dist function takes vector point estimates (case 125 observations Specific Leaf Area GLOPNET database stored sladata. First, prints fits subset distributions (‘f’ distribution fit). Second, prints priorfig function visualizes chosen prior (line), mean 95%CI (dots) well data used generate figure.","code":"glopnet.grass <- glopnet.data[which(glopnet.data$GF == 'G'), ] # GF = growth form; G=grass   ## turnover time (tt) glopnet.grass$tt    <- 12/10^(glopnet.grass$log.LL) ttdata <- data.frame(tt = glopnet.grass$tt[!is.na(glopnet.grass$tt)]) ## specific leaf area ##glopnet.grass$sla   <- 1000/ (0.48 * 10^glopnet.grass$log.LMA) glopnet.grass$sla   <- 1000/ (10^glopnet.grass$log.LMA) sladata <- data.frame(sla = glopnet.grass$sla[!is.na(glopnet.grass$sla)]) dists <-  c('gamma', 'lognormal','weibull', 'f') fit.dist(sladata, dists ) ##              a      b     AIC ## weibull   2.06 19.000 888.759 ## lognormal 2.65  0.677 923.220 ## gamma     2.95  0.175 899.403 ##   distribution    a  b   n ## 1      weibull 2.06 19 125 prior.dists <- rbind('SLA' = fit.dist(sladata, dists ),                       'leaf_turnover_rate' = fit.dist(ttdata, dists)) ##              a      b     AIC ## weibull   2.06 19.000 888.759 ## lognormal 2.65  0.677 923.220 ## gamma     2.95  0.175 899.403 ##              a     b     AIC ## weibull   1.83 5.180 187.125 ## lognormal 1.35 0.687 195.072 ## gamma     2.90 0.630 187.098 slaprior <- with(prior.dists['SLA',], pr.dens(distribution, a, b)) ttprior <- with(prior.dists['leaf_turnover_rate',], pr.dens(distribution, a, b)) prior.figures <- list() prior.figures[['SLA']] <- priorfig(   priordata = sladata,    priordensity = slaprior,    trait = data.frame(id = \"SLA\", figid = \"SLA\", units=\"1\")) prior.figures[['leaf_turnover_rate']] <- priorfig(   priordata = ttdata,    priordensity = ttprior,    trait = data.frame(id = \"leaf_turnover_rate\", figid = \"left_turnover_rate\", units=\"yr-1\"))  prior.figures ## $SLA ##  ## $leaf_turnover_rate"},{"path":[]},{"path":[]},{"path":[]},{"path":"/articles/priors_demo.html","id":"query-functional-types-from-bety","dir":"Articles","previous_headings":"Fitting priors to data with uncertainty estimates (generating posterior predictive distribution of an unobserved C4 grass species based on values collected from many PFTs. > Classify Wullschleger Data into Functional Types","what":"1. query functional types from BETY","title":"Generating Priors based on Data and / or Expert knowledge","text":"code run - data provided .csv file . code requires connection BETYdb MySQL server. Picking Wullschleger dataset joined USDA Plants functional type classifications …","code":"wullschleger.species <- vecpaste(unique(wullschleger.data$AcceptedSymbol)) ## load functional type data from BETY con <- function() {query.bety.con(username = \"bety\", password = \"bety\",                                     host = \"localhost\", dbname = \"bety\")} functional.data <- query.bety(paste(\"select distinct AcceptedSymbol, scientificname, GrowthHabit, Category from species where AcceptedSymbol in (\", wullschleger.species, \") and GrowthHabit is not NULL and Category is not NULL;\"), con()) write.csv(functional.data, 'inst/extdata/wullschleger_join_usdaplants.csv') wullschleger.data <- read.csv(system.file('extdata/wullschleger1993updated.csv', package = 'PEcAn.priors')) functional.data <- read.csv(system.file('extdata/wullschleger_join_usdaplants.csv', package = 'PEcAn.priors'))  subshrubs <- rownames(wullschleger.data) %in% c(grep('Shrub',wullschleger.data$GrowthHabit), grep('Subshrub', wullschleger.data$GrowthHabit)) ########## 2. Merge functional type information into Wullschleger data wullschleger.data <- merge(wullschleger.data, functional.data, by = 'AcceptedSymbol') ########## 3. Classify by functional type ## grass: any Graminoid Monocot grass <- with(wullschleger.data, GrowthHabit == 'Graminoid' & Category == 'Monocot') ## forbs/herbs = forb forb <- with(wullschleger.data, GrowthHabit == 'Forb/herb' | GrowthHabit == 'Vine, Forb/herb') ## woody = Shrubs, Subshrubs or Trees, add category to a few with missing information,  woody <- with(wullschleger.data, scientificname %in% c('Acacia ligulata', 'Acacia mangium', 'Arbutus unedo', 'Eucalyptus pauciflora', 'Malus', 'Salix') |  rownames(wullschleger.data) %in% c(grep('Shrub', GrowthHabit), grep('Subshrub', GrowthHabit), grep('Tree', GrowthHabit))) ## gymnosperms gymnosperm <- wullschleger.data$Category == 'Gymnosperm' ## ambiguous is both woody and herbaceous, will drop ambiguous <- wullschleger.data$GrowthHabit %in% c(\"Subshrub, Shrub, Forb/herb, Tree\", \"Tree, Subshrub, Shrub\", \"Tree, Shrub, Subshrub, Forb/herb\", \"Subshrub, Forb/herb\")  wullschleger.data$functional.type[grass] <- 1 wullschleger.data$functional.type[forb]  <- 3 wullschleger.data$functional.type[woody & !gymnosperm] <- 4 wullschleger.data$functional.type[woody & gymnosperm] <- 5 wullschleger.data <- subset(wullschleger.data, !ambiguous)       ############# Estimating SE and n ################################## ##verr, jerr: the \"asymptotic\" errors for Vcmax, Jmax using SAS nlim ##vucl,vlcl,jlcl,jucl: are upper and lower confidence limits of 95%CI  ##Calculate SD as (1/2 the 95%CI)/1.96 wullschleger.data$vsd <- (wullschleger.data$vucl-wullschleger.data$vlcl)/(2*1.96)  ##Calculate effective N as (SE/SD)^2 + 1 wullschleger.data$neff <- (wullschleger.data$vse/wullschleger.data$vsd)^2 + 1 wullschleger.data$se   <- sqrt(wullschleger.data$vsd*sqrt(wullschleger.data$neff)) ## recode species to numeric species <- unique(wullschleger.data$scientificname) sp <- rep(NA, nrow(wullschleger.data)) for(i in seq(species)){   sp[wullschleger.data$scientificname == species[i]] <- i }   ############# Scale values to 25C ################################## wullschleger.data$corrected.vcmax <- PEcAn.utils::arrhenius.scaling(   wullschleger.data$vcmax,    old.temp = wullschleger.data$temp,    new.temp = 25)  ############# Create data.frame for JAGS model ################################## wullschleger.data <- data.frame(Y  = wullschleger.data$corrected.vcmax,                                 obs.prec = 1 / (sqrt(wullschleger.data$neff) * wullschleger.data$se),                                 sp = sp,                                 ft = wullschleger.data$functional.type,                                 n  = wullschleger.data$neff) ## Summarize data by species wullschleger.vcmax <- wullschleger.data %>%    group_by(sp) %>%    summarise(Y = mean(Y),              obs.prec = 1/sqrt(sum((1/obs.prec)^2)),              ft = mean(ft), # identity             n =  sum(n)) %>%    dplyr::select(-sp)"},{"path":"/articles/priors_demo.html","id":"add-data-from-c4-species","dir":"Articles","previous_headings":"Fitting priors to data with uncertainty estimates (generating posterior predictive distribution of an unobserved C4 grass species based on values collected from many PFTs. > Classify Wullschleger Data into Functional Types > 1. query functional types from BETY","what":"Add data from C4 species","title":"Generating Priors based on Data and / or Expert knowledge","text":"measurements Vcmax C4 species available. ###### Miscanthus: Wang D, Maughan MW, Sun J, Feng X, Miguez FE, Lee DK, Dietze MC, 2011. Impact canopy nitrogen allocation growth photosynthesis miscanthus (Miscanthus x giganteus). Oecologia, press","code":"dwang.vcmax <- c(19.73, 40.35, 33.02, 21.28, 31.45, 27.83, 9.69, 15.99, 18.88, 11.45, 15.81, 27.61, 13, 21.25, 22.01, 10.37, 12.37, 22.8, 12.24, 15.85, 21.93, 23.48, 31.51, 23.16, 18.55, 17.06, 20.27, 30.41) dwang.vcmax <- data.frame(Y = mean(dwang.vcmax),                            obs.prec = 1/sd(dwang.vcmax),                           ft = 2,         #C4 Grass                           n = length(dwang.vcmax))"},{"path":"/articles/priors_demo.html","id":"muhlenbergia-glomerata","dir":"Articles","previous_headings":"","what":"Generating Priors based on Data and / or Expert knowledge","title":"Generating Priors based on Data and / or Expert knowledge","text":"Kubien Sage 2004. Low-temperature photosynthetic performance C4 grass co-occurring C3 grass native high latitudes. Plant, Cell & Environment DOI: 10.1111/j.1365-3040.2004.01196.x Data figure 5 Kubien Sage (2004), average across plants grown 14/10 degrees 26/22 degrees","code":"kubien.vcmax <- data.frame(Y = mean(23.4, 24.8),                             obs.prec = 1/sqrt(2.6^2 + 2.5^2),                             n = 8,                             ft = 2)"},{"path":"/articles/priors_demo.html","id":"zea-mays-corn","dir":"Articles","previous_headings":"","what":"Generating Priors based on Data and / or Expert knowledge","title":"Generating Priors based on Data and / or Expert knowledge","text":"Massad, Tuzet, Bethenod 2007. effect temperature C4-type leaf photosynthesis parameters. Plant, Cell & Environment 30(9) 1191-1204. DOI: 10.1111/j.1365-3040.2007.01691.x data fig 6a","code":"massad.vcmax.data <- data.frame(vcmax = c(17.1, 17.2, 17.6, 18, 18.3, 18.5, 20.4, 22.9, 22.9, 21.9, 21.8, 22.7, 22.3, 25.3, 24.4, 25.5, 25.5, 24.9, 31.2, 30.8, 31.6, 31.7, 32.5, 34.1, 34.2, 33.9, 35.4, 36, 36, 37.5, 38.2, 38.1, 37.4, 37.7, 25.2, 25.5),                                  temp = c(20.5, 24.6, 21, 19, 21.9, 15, 19.6, 14.3, 20.8, 23.4, 24.8, 25.9, 24.1, 22.8, 27.9, 31.7, 35.5, 39.3, 37.9, 42.4, 41.5, 48.7, 33.3, 33.3, 31.5, 39.1, 38.8, 43.3, 50, 38.4, 35.7, 34.4, 31.9, 33.9, 32.1, 33.7)) massad.vcmax <- with(   massad.vcmax.data,   PEcAn.utils::arrhenius.scaling(     old.temp = temp,      new.temp = 25,      observed.value = vcmax) )  massad.vcmax <- data.frame(Y  = mean(massad.vcmax),                            obs.prec = 1/(sd(massad.vcmax)),                            n  = length(massad.vcmax),                            ft = 2)  ##### Combine all data sets all.vcmax.data <- rbind(wullschleger.vcmax,                         dwang.vcmax,                          ## xfeng.vcmax,                          kubien.vcmax,                          massad.vcmax)"},{"path":"/articles/priors_demo.html","id":"take-a-look-at-the-raw-data-by-functional-type","dir":"Articles","previous_headings":"Fitting priors to data with uncertainty estimates (generating posterior predictive distribution of an unobserved C4 grass species based on values collected from many PFTs. > Classify Wullschleger Data into Functional Types > 1. query functional types from BETY","what":"take a look at the raw data by functional type:","title":"Generating Priors based on Data and / or Expert knowledge","text":"","code":"ggplot(data = all.vcmax.data, aes(factor(ft), Y)) +   geom_boxplot() +    geom_point() +   xlab('Plant Functional Type') +   ylab('Vcmax') +   theme_bw()"},{"path":"/articles/priors_demo.html","id":"add-unobserved-c4-species-so-jags-calculates-posterior-predictive-distribution","dir":"Articles","previous_headings":"Fitting priors to data with uncertainty estimates (generating posterior predictive distribution of an unobserved C4 grass species based on values collected from many PFTs. > Classify Wullschleger Data into Functional Types > 1. query functional types from BETY","what":"Add unobserved C4 species so JAGS calculates posterior predictive distribution","title":"Generating Priors based on Data and / or Expert knowledge","text":"","code":"vcmax.data <- rbind(all.vcmax.data,                      data.frame(Y = NA, obs.prec = NA, ft = 2, n = 1))"},{"path":"/articles/priors_demo.html","id":"write-and-run-meta-analysis","dir":"Articles","previous_headings":"Fitting priors to data with uncertainty estimates (generating posterior predictive distribution of an unobserved C4 grass species based on values collected from many PFTs. > Classify Wullschleger Data into Functional Types > 1. query functional types from BETY","what":"Write and Run Meta-analysis","title":"Generating Priors based on Data and / or Expert knowledge","text":"Fitting priors expert constraint.","code":"writeLines(con = \"vcmax.prior.bug\",             text =  \"model{                for (k in 1:length(Y)){                Y[k]  ~ dnorm(beta.ft[ft[k]], tau.y[k])T(0,)                tau.y[k] <- prec.y*n[k]                u1[k] <- n[k]/2                                             u2[k] <- n[k]/(2*prec.y)                obs.prec[k] ~ dgamma(u1[k], u2[k])              }              for (f in 1:5){                beta.ft[f] ~ dnorm(0, tau.ft)              }              tau.ft ~ dgamma(0.1, 0.1)              prec.y    ~ dgamma(0.1, 0.1)                   sd.y      <- 1 / sqrt(prec.y)              ## estimating posterior predictive for new C4 species              pi.pavi <- Y[length(Y)]                       diff <- beta.ft[1] - beta.ft[2]            }\")  library(rjags) ## Loading required package: coda ## Linked to JAGS 4.3.2 ## Loaded modules: basemod,bugs j.model  <- jags.model(file = \"vcmax.prior.bug\",                         data = vcmax.data,                         n.adapt = 500,                         n.chains = 4,                        inits = inits) ## Compiling model graph ##    Resolving undeclared variables ##    Allocating nodes ## Graph information: ##    Observed stochastic nodes: 194 ##    Unobserved stochastic nodes: 9 ##    Total graph size: 614 ##  ## Initializing model mcmc.object <- coda.samples(model = j.model, variable.names = c('pi.pavi', 'beta.ft', 'diff'),                             n.iter = iter) mcmc.o     <- window(mcmc.object, start = iter/2, thin = 10) pi.pavi    <- data.frame(vcmax = unlist(mcmc.o[,'pi.pavi'])) vcmax.dist <- fit.dist(pi.pavi, n = sum(!is.na(vcmax.data$Y))) ##              a      b     AIC ## weibull   3.54 24.300 14780.8 ## lognormal 3.02  0.394 15482.8 ## gamma     8.06  0.367 15082.4 prior.dists   <- rbind(prior.dists, 'Vcmax' = vcmax.dist) vcmax.density <- with(vcmax.dist, pr.dens(distribution, a, b), xlim = c(0,50))  ######### Vcmax Prior Plot vcmax.c4 <- all.vcmax.data$ft == 2 vcmax.data <- all.vcmax.data[,c('ft', 'Y')] vcmax.data$mean <- vcmax.data$Y vcmax.data$se <- 1/(sqrt(all.vcmax.data$n) * all.vcmax.data$obs.prec) vcmax.data <- vcmax.data[,c('ft', 'mean', 'se')] #vcmax.mean <- all.vcmax.data$Y[!c4,] #vcmax.se   <- with(all.vcmax.data[!c4,], 1/(sqrt(n) * obs.prec))#[reorder] #c4.mean <- all.vcmax.data$Y)[c4] #c4.se   <- with(all.vcmax.data, 1 / (sqrt(n) * obs.prec) )[c4]  prior.figures[['Vcmax']] <- priorfig(priordensity = vcmax.density,                                       trait = data.frame(id = 'Vcmax', figid = 'Vcmax', units = 'umol CO2 m-2 s-1'),                                       xlim = range(c(0, max(vcmax.data$mean)))) +    geom_point(data = subset(vcmax.data, ft != 2),               aes(x=mean, y = (sum(vcmax.c4) + 1:sum(!vcmax.c4))/3000), color = 'grey60') +   geom_segment(data = subset(vcmax.data, ft != 2),                aes(x = mean - se, xend = mean + se,                     y = (sum(vcmax.c4) + 1:sum(!vcmax.c4))/3000,                     yend = (sum(vcmax.c4) + 1:sum(!vcmax.c4))/3000),                color = 'grey60') +   ## darker color for C4 grasses   geom_point(data = subset(vcmax.data, ft == 2),              aes(x=mean, y = 1:sum(vcmax.c4)/2000), size = 3) +   geom_segment(data = subset(vcmax.data, ft == 2),                aes(x = mean - se, xend = mean + se,                     y = 1:sum(vcmax.c4)/2000, yend = 1:sum(vcmax.c4)/2000))  print(prior.figures[['Vcmax']]) ## Warning: Removed 1 row containing missing values or values outside the scale range ## (`geom_segment()`)."},{"path":[]},{"path":"/articles/priors_demo.html","id":"examples","dir":"Articles","previous_headings":"Other Examples / Approaches","what":"Examples","title":"Generating Priors based on Data and / or Expert knowledge","text":"Estimating priors DALEC model models/dalec/inst/DALEC_priors.R","code":""},{"path":"/articles/priors_demo.html","id":"package-rriskdistributions","dir":"Articles","previous_headings":"Other Examples / Approaches","what":"Package rriskDistributions","title":"Generating Priors based on Data and / or Expert knowledge","text":"rriskDistributions useful estimating priors … well individual functions distribution get.<somedist>.par provide nice diagnostic plots (e.g. compare chosen points cdf) example, compute parameters Gamma distribution fits median 2.5 95%CI [1, 10]: function fit.pecr provides GUI explore fits range distributions, e.g.: produces :","code":"library(rriskDistributions) get.gamma.par(p = c(0.025, 0.50, 0.975), q = c(1, 2.5, 10), tol = 0.1) fit.perc(p = c(0.1, 0.5, 0.9), q = c(30, 60, 90), tolConv = 0.1)"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"David LeBauer. Author, maintainer. University Illinois, NCSA. Copyright holder.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"LeBauer D (2025). PEcAn.priors: PEcAn Functions Used Estimate Priors Data. R package version 1.7.4, https://pecanproject.github.io.","code":"@Manual{,   title = {PEcAn.priors: PEcAn Functions Used to Estimate Priors from Data},   author = {David LeBauer},   year = {2025},   note = {R package version 1.7.4},   url = {https://pecanproject.github.io}, }"},{"path":"/index.html","id":"pecanpriors","dir":"","previous_headings":"","what":"PEcAn Functions Used to Estimate Priors from Data","title":"PEcAn Functions Used to Estimate Priors from Data","text":"PEcAn Functions Used Estimate Priors Data","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"PEcAn Functions Used to Estimate Priors from Data","text":"can install development version PEcAn.priors r-universe like : can install directly GitHub remotes package like :","code":"# Enable repository from pecanproject options(repos = c(   pecanproject = 'https://pecanproject.r-universe.dev',   CRAN = 'https://cloud.r-project.org')) # Download and install PEcAn.priors in R install.packages('PEcAn.priors') library(remotes) install_github('pecanproject/pecan',  subdir = \"modules/priors\")"},{"path":"/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"PEcAn Functions Used to Estimate Priors from Data","text":"basic example shows solve common problem:","code":"library(PEcAn.priors) ## basic example code"},{"path":"/reference/create.density.df.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Density Data Frame from Sample — create.density.df","title":"Create Density Data Frame from Sample — create.density.df","text":"Returns data frame stats::density function","code":""},{"path":"/reference/create.density.df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Density Data Frame from Sample — create.density.df","text":"","code":"create.density.df(   samps = NULL,   zero.bounded = FALSE,   distribution = NULL,   n = 1000,   ... )"},{"path":"/reference/create.density.df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Density Data Frame from Sample — create.density.df","text":"samps vector samples distribution zero.bounded logical: Restrict density distribution nonnegative values? distribution list elements distn, parama, paramb, e.g. list('norm', 0, 1) n number points estimate density ... additional arguments, passed stats::density","code":""},{"path":"/reference/create.density.df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Density Data Frame from Sample — create.density.df","text":"data frame x y = dens(x)","code":""},{"path":"/reference/create.density.df.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create Density Data Frame from Sample — create.density.df","text":"David LeBauer","code":""},{"path":"/reference/create.density.df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Density Data Frame from Sample — create.density.df","text":"","code":"prior.df <- create.density.df(distribution = list('norm',0,1)) plot(prior.df) samp.df <- create.density.df(samps = rnorm(100)) lines(samp.df)"},{"path":"/reference/fit.dist.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit distribution to data — fit.dist","title":"Fit distribution to data — fit.dist","text":"Fit distribution data","code":""},{"path":"/reference/fit.dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit distribution to data — fit.dist","text":"","code":"fit.dist(   trait.data,   trait = colnames(trait.data),   dists = c(\"weibull\", \"lognormal\", \"gamma\"),   n = NULL )"},{"path":"/reference/fit.dist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit distribution to data — fit.dist","text":"trait.data data distribution trait name trait fit. One \"tt\", \"sla\", \"rrr\", \"q\" dists list distribution names n used return value","code":""},{"path":"/reference/fit.dist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit distribution to data — fit.dist","text":"best fit distribution","code":""},{"path":"/reference/fit.dist.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Fit distribution to data — fit.dist","text":"David LeBauer","code":""},{"path":"/reference/get.quantiles.from.density.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the quantiles from prior density — get.quantiles.from.density","title":"Get the quantiles from prior density — get.quantiles.from.density","text":"Finds quantiles density data frame","code":""},{"path":"/reference/get.quantiles.from.density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the quantiles from prior density — get.quantiles.from.density","text":"","code":"get.quantiles.from.density(density.df, quantiles = c(0.025, 0.5, 0.975))"},{"path":"/reference/get.quantiles.from.density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the quantiles from prior density — get.quantiles.from.density","text":"density.df density dataframe generated create.density.df quantiles default median 95% CI;","code":""},{"path":"/reference/get.quantiles.from.density.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get the quantiles from prior density — get.quantiles.from.density","text":"David LeBauer","code":""},{"path":"/reference/get.quantiles.from.density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the quantiles from prior density — get.quantiles.from.density","text":"","code":"prior.df <- create.density.df(distribution = list('norm',0,1)) get.quantiles.from.density(prior.df) #>                x          y #> 186 -1.945701822 0.06009574 #> 500 -0.003093326 0.39894037 #> 814  1.939515171 0.06082234 samp.df <- create.density.df(samps = rnorm(100)) get.quantiles.from.density(samp.df) #>              x          y #> 170 -1.8661787 0.08048838 #> 468  0.1159969 0.32876567 #> 788  2.2445076 0.06344996"},{"path":"/reference/get.sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Samples — get.sample","title":"Get Samples — get.sample","text":"Take n random samples prior","code":""},{"path":"/reference/get.sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Samples — get.sample","text":"","code":"get.sample(prior, n = NULL, p = NULL)"},{"path":"/reference/get.sample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Samples — get.sample","text":"prior data.frame distn, parama, optionally paramb. n number samples return random sample rdistn family functions (e.g. rnorm) p vector quantiles sample distribution; typically pre-generated upstream workflow used qdistn family functions (e.g. qnorm)","code":""},{"path":"/reference/get.sample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Samples — get.sample","text":"vector n random samples prior","code":""},{"path":"/reference/get.sample.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Samples — get.sample","text":"Similar prior sample function pr.samp, except 1) takes prior named dataframe list can return either random sample length n sample quantile specified p","code":""},{"path":[]},{"path":"/reference/get.sample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Samples — get.sample","text":"","code":"if (FALSE) { # \\dontrun{ # return 1st through 99th quantile of standard normal distribution: PEcAn.priors::get.sample(    prior = data.frame(distn = 'norm', parama = 0, paramb = 1),     p = 1:99/100) # return 100 random samples from standard normal distribution: PEcAn.priors::get.sample(    prior = data.frame(distn = 'norm', parama = 0, paramb = 1),     n = 100) } # }"},{"path":"/reference/plot_densities.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot probability density and data — plot_densities","title":"Plot probability density and data — plot_densities","text":"Plot probability density data","code":""},{"path":"/reference/plot_densities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot probability density and data — plot_densities","text":"","code":"plot_densities(density.plot_inputs, outdir, ...)"},{"path":"/reference/plot_densities.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot probability density and data — plot_densities","text":"density.plot_inputs list containing trait.samples trait.df outdir directory generate figure pdf ... passed plot_density","code":""},{"path":"/reference/plot_densities.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot probability density and data — plot_densities","text":"outputs plots outdir/sensitivity.analysis.pdf file","code":""},{"path":"/reference/plot_densities.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot probability density and data — plot_densities","text":"David LeBauer","code":""},{"path":"/reference/plot_posterior.density.html","id":null,"dir":"Reference","previous_headings":"","what":"Add posterior density to a plot — plot_posterior.density","title":"Add posterior density to a plot — plot_posterior.density","text":"Add posterior density plot","code":""},{"path":"/reference/plot_posterior.density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add posterior density to a plot — plot_posterior.density","text":"","code":"plot_posterior.density(posterior.density, base.plot = NULL)"},{"path":"/reference/plot_posterior.density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add posterior density to a plot — plot_posterior.density","text":"posterior.density data frame containing columns x y base.plot ggplot object (grob), created none provided","code":""},{"path":"/reference/plot_posterior.density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add posterior density to a plot — plot_posterior.density","text":"plot posterior density line added","code":""},{"path":"/reference/plot_posterior.density.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Add posterior density to a plot — plot_posterior.density","text":"David LeBauer","code":""},{"path":"/reference/plot_prior.density.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots a prior density from a parameterized probability distribution — plot_prior.density","title":"Plots a prior density from a parameterized probability distribution — plot_prior.density","text":"Plots prior density parameterized probability distribution","code":""},{"path":"/reference/plot_prior.density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots a prior density from a parameterized probability distribution — plot_prior.density","text":"","code":"plot_prior.density(prior.density, base.plot = NULL, prior.color = \"black\")"},{"path":"/reference/plot_prior.density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots a prior density from a parameterized probability distribution — plot_prior.density","text":"prior.density data frame containing columns x y base.plot ggplot object (grob), created none provided prior.color color line plotted","code":""},{"path":"/reference/plot_prior.density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plots a prior density from a parameterized probability distribution — plot_prior.density","text":"plot prior density added","code":""},{"path":[]},{"path":"/reference/plot_prior.density.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plots a prior density from a parameterized probability distribution — plot_prior.density","text":"David LeBauer","code":""},{"path":"/reference/plot_prior.density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plots a prior density from a parameterized probability distribution — plot_prior.density","text":"","code":"if (FALSE) { # \\dontrun{ plot_prior.density(pr.dens('norm', 0, 1)) } # }"},{"path":"/reference/plot_trait.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot trait density and data — plot_trait","title":"Plot trait density and data — plot_trait","text":"Plot trait density data","code":""},{"path":"/reference/plot_trait.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot trait density and data — plot_trait","text":"","code":"plot_trait(   trait,   prior = NULL,   posterior.sample = NULL,   trait.df = NULL,   fontsize = list(title = 18, axis = 14),   x.lim = NULL,   y.lim = NULL,   logx = FALSE )"},{"path":"/reference/plot_trait.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot trait density and data — plot_trait","text":"trait dataframe id, figid units trait plotted prior named distribution parameters posterior.sample samples posterior distribution whose density plotted trait.df data plotted, format accepted jagify fontsize, x.lim, y.lim, logx passed ggplot","code":""},{"path":"/reference/plot_trait.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot trait density and data — plot_trait","text":"plot (grob) object","code":""},{"path":"/reference/plot_trait.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot trait density and data — plot_trait","text":"David LeBauer","code":""},{"path":"/reference/plot_trait.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot trait density and data — plot_trait","text":"","code":"if (FALSE) { # \\dontrun{ prior1 <- data.frame(distn = 'norm',                      parama = 20,                      paramb = 5) data1  <- data.frame(Y = c(19, 21), se = c(1,1)) trait1 <- data.frame(id = 'Vcmax', figid = 'Vcmax', units = 'umol CO2 m-2 s-1') plot_trait(trait = trait1,           prior = prior1,           trait.df = data1) } # }"},{"path":"/reference/pr.dens.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate densities — pr.dens","title":"Calculate densities — pr.dens","text":"Calculates density n points across range parameter","code":""},{"path":"/reference/pr.dens.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate densities — pr.dens","text":"","code":"pr.dens(distn, parama, paramb, n = 1000, alpha = 0.001)"},{"path":"/reference/pr.dens.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate densities — pr.dens","text":"distn distribution parama parameter paramb parameter n length vector returned alpha sets range distribution evaluated (e.g. alpha 1-alpha)","code":""},{"path":"/reference/pr.dens.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate densities — pr.dens","text":"dataframe equally spaced x values corresponding densities","code":""},{"path":"/reference/pr.dens.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate densities — pr.dens","text":"distribution parameters, return density values ranging alpha 1-alpha","code":""},{"path":"/reference/pr.dens.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate densities — pr.dens","text":"David LeBauer","code":""},{"path":"/reference/pr.samp.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample from prior — pr.samp","title":"Sample from prior — pr.samp","text":"Take n random samples prior","code":""},{"path":"/reference/pr.samp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample from prior — pr.samp","text":"","code":"pr.samp(distn, parama, paramb, n)"},{"path":"/reference/pr.samp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample from prior — pr.samp","text":"distn name distribution, e.g. \"norm\", \"pois\" parama first parameter distn call paramb second parameter distn call n number samples return","code":""},{"path":"/reference/pr.samp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample from prior — pr.samp","text":"vector n random samples prior","code":""},{"path":[]},{"path":"/reference/prior.fn.html","id":null,"dir":"Reference","previous_headings":"","what":"prior.fn — prior.fn","title":"prior.fn — prior.fn","text":"Prior fitting function optimization","code":""},{"path":"/reference/prior.fn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"prior.fn — prior.fn","text":"","code":"prior.fn(parms, x, alpha, distn, central.tendency = NULL, trait = NULL)"},{"path":"/reference/prior.fn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"prior.fn — prior.fn","text":"parms target optimization x vector c(lcl, ucl, ct) lcl / ucl = confidence limits, ct = entral tendency alpha quantile lcl/ucl estimated (e.g. 95% CI, alpha = 0.5) distn named distribution, one 'lnorm', 'gamma', 'weibull', 'beta'; support distributions currently implemented central.tendency one 'mode', 'median', 'mean' trait name trait, can used exceptions (currently used trait == 'q')","code":""},{"path":"/reference/prior.fn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"prior.fn — prior.fn","text":"parms","code":""},{"path":"/reference/prior.fn.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"prior.fn — prior.fn","text":"function used within `DEoptim` parameterize distribution central tendency confidence interval parameter. function robust; currently needs tweaked distributions require starting values (e.g. beta, f)","code":""},{"path":"/reference/prior.fn.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"prior.fn — prior.fn","text":"David LeBauer","code":""},{"path":"/reference/prior.fn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"prior.fn — prior.fn","text":"","code":"if (FALSE) { # \\dontrun{   DEoptim(fn = prior.fn,           lower = c(0, 0),           upper = c(1000, 1000),           x=c(2, 6, 3.3),           alpha = 0.05,           distn = 'lnorm')$optim$bestmem } # }"},{"path":"/reference/priorfig.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot prior density and data — priorfig","title":"Plot prior density and data — priorfig","text":"Plot prior density data","code":""},{"path":"/reference/priorfig.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot prior density and data — priorfig","text":"","code":"priorfig(   priordata = NA,   priordensity = NA,   trait = NA,   xlim = \"auto\",   fontsize = 18 )"},{"path":"/reference/priorfig.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot prior density and data — priorfig","text":"priordata observations plotted points priordensity density prior distribution, calculated prior.density trait dataframe id, figid units trait xlim limits x axis fontsize passed ggplot set text size","code":""},{"path":"/reference/priorfig.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot prior density and data — priorfig","text":"plot / grob prior distribution data used inform distribution","code":""},{"path":"/reference/priorfig.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot prior density and data — priorfig","text":"David LeBauer","code":""},{"path":[]},{"path":"/news/index.html","id":"license-change-1-7-4","dir":"Changelog","previous_headings":"","what":"License change","title":"PEcAn.priors 1.7.4","text":"PEcAn.priors now distributed BSD three-clause license instead NCSA Open Source license.","code":""},{"path":"/news/index.html","id":"fixed-1-7-4","dir":"Changelog","previous_headings":"","what":"Fixed","title":"PEcAn.priors 1.7.4","text":"Cleaned many R CMD check messsages","code":""},{"path":"/news/index.html","id":"pecanpriors-171","dir":"Changelog","previous_headings":"","what":"PEcAn.priors 1.7.1","title":"PEcAn.priors 1.7.1","text":"changes 1.7.1 earlier recorded single file PEcAn packages; please see https://github.com/PecanProject/pecan/blob/v1.7.1/CHANGELOG.md details.","code":""}]
