[{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Mike Dietze. Author, maintainer. University Illinois, NCSA. Copyright holder.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Dietze M (2025). PEcAn.SIPNET: PEcAn Functions Used Ecological Forecasts Reanalysis. R package version 1.9.1, https://pecanproject.github.io.","code":"@Manual{,   title = {PEcAn.SIPNET: PEcAn Functions Used for Ecological Forecasts and Reanalysis},   author = {Mike Dietze},   year = {2025},   note = {R package version 1.9.1},   url = {https://pecanproject.github.io}, }"},{"path":"/index.html","id":"pecansipnet","dir":"","previous_headings":"","what":"PEcAn Functions Used for Ecological Forecasts and Reanalysis","title":"PEcAn Functions Used for Ecological Forecasts and Reanalysis","text":"PEcAn Functions Used Ecological Forecasts Reanalysis","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"PEcAn Functions Used for Ecological Forecasts and Reanalysis","text":"can install development version PEcAn.SIPNET r-universe like : can install directly GitHub remotes package like :","code":"# Enable repository from pecanproject options(repos = c(   pecanproject = 'https://pecanproject.r-universe.dev',   CRAN = 'https://cloud.r-project.org')) # Download and install PEcAn.SIPNET in R install.packages('PEcAn.SIPNET') library(remotes) install_github('pecanproject/pecan',  subdir = \"models/sipnet\")"},{"path":"/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"PEcAn Functions Used for Ecological Forecasts and Reanalysis","text":"basic example shows solve common problem:","code":"library(PEcAn.SIPNET) ## basic example code"},{"path":"/reference/mergeNC.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge multiple NetCDF files into one — mergeNC","title":"Merge multiple NetCDF files into one — mergeNC","text":"Merge multiple NetCDF files one","code":""},{"path":"/reference/mergeNC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge multiple NetCDF files into one — mergeNC","text":"","code":"mergeNC(files, outfile)"},{"path":"/reference/mergeNC.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Merge multiple NetCDF files into one — mergeNC","text":"https://github.com/RS-eco/processNC/blob/main/R/mergeNC.R","code":""},{"path":"/reference/mergeNC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge multiple NetCDF files into one — mergeNC","text":"files character. List filepaths, lead NetCDF files. outfile character. Output filename merged data.","code":""},{"path":"/reference/mergeNC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge multiple NetCDF files into one — mergeNC","text":"NetCDF file containing merged data.","code":""},{"path":"/reference/mergeNC.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Merge multiple NetCDF files into one — mergeNC","text":"","code":"if (FALSE) { # \\dontrun{ files <- list.files(paste0(system.file(package=\"processNC\"), \"/extdata\"),                      pattern=\"tas.*\\\\.nc\", full.names=TRUE) temp <- tempfile(fileext=\".nc\") mergeNC(files=files, outfile=temp) terra::rast(temp)  } # }"},{"path":"/reference/met2model.SIPNET.html","id":null,"dir":"Reference","previous_headings":"","what":"met2model wrapper for SIPNET — met2model.SIPNET","title":"met2model wrapper for SIPNET — met2model.SIPNET","text":"Reads weather data CF-formatted NetCDFs writes .clim format expected SIPNET: 14-column tab-separated table headers.","code":""},{"path":"/reference/met2model.SIPNET.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"met2model wrapper for SIPNET — met2model.SIPNET","text":"","code":"met2model.SIPNET(   in.path,   in.prefix,   outfolder,   start_date,   end_date,   var.names = NULL,   overwrite = FALSE,   verbose = FALSE,   year.fragment = FALSE,   ... )"},{"path":"/reference/met2model.SIPNET.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"met2model wrapper for SIPNET — met2model.SIPNET","text":".path location disk inputs stored .prefix prefix input output files, outfolder location disk outputs stored start_date start date data downloaded (use year part date) end_date end date data downloaded (use year part date) var.names character: list variable names extracted. Default NULL. overwrite existing files overwritten verbose function verbose year.fragment function ignore whether data stored set complete years (forecasts). ... Additional arguments, currently ignored","code":""},{"path":"/reference/met2model.SIPNET.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"met2model wrapper for SIPNET — met2model.SIPNET","text":"dataframe containing information files created","code":""},{"path":"/reference/met2model.SIPNET.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"met2model wrapper for SIPNET — met2model.SIPNET","text":"columns output file : Grid index. Always 0 function; PEcAn configures SIPNET use . 4-digit year Day year Hour day Timestep size (days) Air temperature (degrees C) Soil temperature (degrees C) PAR (mol/m2/hr) Precip (mm) VPD (Pa) VPD soil (Pa) Canopy vapor pressure (Pa) Wind speed (m/s) Soil moisture (fraction saturation). Always  0.6 function; PEcAn configures SIPNET calculate internally. SIPNET allow missing values inputs. result contains NAs conversion, file written process returns error. fix , consider using formal gap-filling method PEcAn.data.atmosphere::metgapfill() calling met2model.","code":""},{"path":"/reference/met2model.SIPNET.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"met2model wrapper for SIPNET — met2model.SIPNET","text":"Luke Dramko, Michael Dietze, Alexey Shiklomanov, Rob Kooper","code":""},{"path":"/reference/model2netcdf.SIPNET.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert SIPNET output to netCDF — model2netcdf.SIPNET","title":"Convert SIPNET output to netCDF — model2netcdf.SIPNET","text":"Converts output contained folder netCDF.","code":""},{"path":"/reference/model2netcdf.SIPNET.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert SIPNET output to netCDF — model2netcdf.SIPNET","text":"","code":"model2netcdf.SIPNET(   outdir,   sitelat,   sitelon,   start_date,   end_date,   delete.raw = FALSE,   revision,   prefix = \"sipnet.out\",   overwrite = FALSE,   conflict = FALSE )"},{"path":"/reference/model2netcdf.SIPNET.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert SIPNET output to netCDF — model2netcdf.SIPNET","text":"outdir Location SIPNET model output sitelat Latitude site sitelon Longitude site start_date Start time simulation end_date End time simulation delete.raw logical: remove sipnet.files converting? revision model revision prefix prefix read output files overwrite Flag overwriting nc files conflict Flag dealing conflicted nc files, T merge , F jump next.","code":""},{"path":"/reference/model2netcdf.SIPNET.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert SIPNET output to netCDF — model2netcdf.SIPNET","text":"Shawn Serbin, Michael Dietze","code":""},{"path":"/reference/read_restart.SIPNET.html","id":null,"dir":"Reference","previous_headings":"","what":"Read restart function for SDA with SIPNET — read_restart.SIPNET","title":"Read restart function for SDA with SIPNET — read_restart.SIPNET","text":"Read Restart SIPNET","code":""},{"path":"/reference/read_restart.SIPNET.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read restart function for SDA with SIPNET — read_restart.SIPNET","text":"","code":"read_restart.SIPNET(outdir, runid, stop.time, settings, var.names, params)"},{"path":"/reference/read_restart.SIPNET.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read restart function for SDA with SIPNET — read_restart.SIPNET","text":"outdir Output directory runid Run ID stop.time Year read settings PEcAn settings object var.names Variable names extracted params parameters required state calculations","code":""},{"path":"/reference/read_restart.SIPNET.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read restart function for SDA with SIPNET — read_restart.SIPNET","text":"X.vec      vector forecasts","code":""},{"path":"/reference/read_restart.SIPNET.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read restart function for SDA with SIPNET — read_restart.SIPNET","text":"Ann Raiho araiho@nd.edu","code":""},{"path":"/reference/remove.config.SIPNET.html","id":null,"dir":"Reference","previous_headings":"","what":"Clear out previous SIPNET config and parameter files. — remove.config.SIPNET","title":"Clear out previous SIPNET config and parameter files. — remove.config.SIPNET","text":"Clear previous SIPNET config parameter files.","code":""},{"path":"/reference/remove.config.SIPNET.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clear out previous SIPNET config and parameter files. — remove.config.SIPNET","text":"","code":"remove.config.SIPNET(main.outdir, settings)"},{"path":"/reference/remove.config.SIPNET.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clear out previous SIPNET config and parameter files. — remove.config.SIPNET","text":"main.outdir Primary PEcAn output directory (depreciated) settings PEcAn settings file","code":""},{"path":"/reference/remove.config.SIPNET.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clear out previous SIPNET config and parameter files. — remove.config.SIPNET","text":"nothing, removes config files side effect","code":""},{"path":"/reference/remove.config.SIPNET.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Clear out previous SIPNET config and parameter files. — remove.config.SIPNET","text":"Shawn Serbin, David LeBauer","code":""},{"path":"/reference/sample.IC.SIPNET.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample initial conditions for SIPNET — sample.IC.SIPNET","title":"Sample initial conditions for SIPNET — sample.IC.SIPNET","text":"Sample initial conditions SIPNET","code":""},{"path":"/reference/sample.IC.SIPNET.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample initial conditions for SIPNET — sample.IC.SIPNET","text":"","code":"sample.IC.SIPNET(ne, state, year = 1)"},{"path":"/reference/sample.IC.SIPNET.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample initial conditions for SIPNET — sample.IC.SIPNET","text":"ne number ensembles state state variables want pull year year pull ","code":""},{"path":"/reference/sample.IC.SIPNET.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample initial conditions for SIPNET — sample.IC.SIPNET","text":"IC matrix initial conditions","code":""},{"path":"/reference/sample.IC.SIPNET.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Sample initial conditions for SIPNET — sample.IC.SIPNET","text":"Mike Dietze Ann Raiho","code":""},{"path":"/reference/split_inputs.SIPNET.html","id":null,"dir":"Reference","previous_headings":"","what":"split_inputs.SIPNET — split_inputs.SIPNET","title":"split_inputs.SIPNET — split_inputs.SIPNET","text":"Splits climate met SIPNET","code":""},{"path":"/reference/split_inputs.SIPNET.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"split_inputs.SIPNET — split_inputs.SIPNET","text":"","code":"split_inputs.SIPNET(   settings,   start.time,   stop.time,   inputs,   overwrite = FALSE,   outpath = NULL )"},{"path":"/reference/split_inputs.SIPNET.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"split_inputs.SIPNET — split_inputs.SIPNET","text":"settings PEcAn settings object start.time start date time SDA ensemble stop.time stop date time SDA ensemble inputs list model inputs use write.configs.SIPNET overwrite Default FALSE outpath specified, write output new directory. Default NULL writes back directory read","code":""},{"path":"/reference/split_inputs.SIPNET.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"split_inputs.SIPNET — split_inputs.SIPNET","text":"file split climate file","code":""},{"path":"/reference/split_inputs.SIPNET.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"split_inputs.SIPNET — split_inputs.SIPNET","text":"Mike Dietze Ann Raiho","code":""},{"path":"/reference/veg2model.SIPNET.html","id":null,"dir":"Reference","previous_headings":"","what":"veg2model.SIPNET — veg2model.SIPNET","title":"veg2model.SIPNET — veg2model.SIPNET","text":"veg2model.SIPNET","code":""},{"path":"/reference/veg2model.SIPNET.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"veg2model.SIPNET — veg2model.SIPNET","text":"","code":"veg2model.SIPNET(outfolder, poolinfo, siteid, ens)"},{"path":"/reference/veg2model.SIPNET.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"veg2model.SIPNET — veg2model.SIPNET","text":"outfolder location store ncdf files poolinfo object passed write_ic contains output cohort2pool function siteid object passed write_ic contains site id ens number ensemble members","code":""},{"path":"/reference/veg2model.SIPNET.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"veg2model.SIPNET — veg2model.SIPNET","text":"result object filepaths ncdf files","code":""},{"path":"/reference/veg2model.SIPNET.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"veg2model.SIPNET — veg2model.SIPNET","text":"Alexis Helgeson","code":""},{"path":"/reference/write.config.SIPNET.html","id":null,"dir":"Reference","previous_headings":"","what":"Writes a configuration files for SIPNET model — write.config.SIPNET","title":"Writes a configuration files for SIPNET model — write.config.SIPNET","text":"Writes configuration files model","code":""},{"path":"/reference/write.config.SIPNET.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Writes a configuration files for SIPNET model — write.config.SIPNET","text":"","code":"write.config.SIPNET(   defaults,   trait.values,   settings,   run.id,   inputs = NULL,   IC = NULL,   restart = NULL,   spinup = NULL )"},{"path":"/reference/write.config.SIPNET.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Writes a configuration files for SIPNET model — write.config.SIPNET","text":"defaults pft trait.values vector samples given trait settings PEcAn settings object run.id run ID inputs list model inputs IC initial condition restart case continuation old simulation. restart needs list name tags runid, inputs, new.params (parameters), new.state (initial condition), ensemble.id (ensemble id), start.time stop.time.See Details. spinup currently unused, included compatibility models","code":""},{"path":"/reference/write.config.SIPNET.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Writes a configuration files for SIPNET model — write.config.SIPNET","text":"Michael Dietze","code":""},{"path":"/reference/write.events.SIPNET.html","id":null,"dir":"Reference","previous_headings":"","what":"Write SIPNET events.in files from a PEcAn events.json — write.events.SIPNET","title":"Write SIPNET events.in files from a PEcAn events.json — write.events.SIPNET","text":"Reads single PEcAn events.json containing one site objects writes one SIPNET `events.` file per site. Events translated according [SIPNET's `events.` specification](https://pecanproject.github.io/sipnet/parameters/#agronomic-events). writer expects inputs already match PEcAn MVP schema v0.1.0 naming units applicable.","code":""},{"path":"/reference/write.events.SIPNET.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write SIPNET events.in files from a PEcAn events.json — write.events.SIPNET","text":"","code":"write.events.SIPNET(events_json, outdir)"},{"path":"/reference/write.events.SIPNET.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write SIPNET events.in files from a PEcAn events.json — write.events.SIPNET","text":"events_json character. Path `events.json` file containing array site objects `site_id`, optional `pft`, `events`. outdir character. Output directory per-site `events-<site>.` files written.","code":""},{"path":"/reference/write.events.SIPNET.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write SIPNET events.in files from a PEcAn events.json — write.events.SIPNET","text":"Invisibly, vector files written.","code":""},{"path":"/reference/write.events.SIPNET.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Write SIPNET events.in files from a PEcAn events.json — write.events.SIPNET","text":"- Supported `event_type` values: `tillage`, `planting`, `fertilization`,   `irrigation`, `harvest`. - Units translated PEcAn standard_vars SIPNET events.specification:   `kg/m^2` `g/m^2`; irrigation `amount_mm` `cm`. - Planting allocation uses fixed internal parameters. Future work use values   written `sipnet.parms` (e.g. integrating `write.configs.SIPNET`)","code":""},{"path":"/reference/write.events.SIPNET.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write SIPNET events.in files from a PEcAn events.json — write.events.SIPNET","text":"","code":"# Example with two events for a single site tmp <- withr::local_tempfile(fileext = \".json\") site <- list(     site_id = \"EX1\",     events = list(         list(event_type = \"tillage\", date = \"2022-02-04\", tillage_eff_0to1 = 0.2),         list(event_type = \"planting\", date = \"2022-02-19\", leaf_c_kg_m2 = 0.01)     ) ) jsonlite::write_json(list(site), tmp, auto_unbox = TRUE) outdir <- withr::local_tempdir() files <- write.events.SIPNET(tmp, outdir) files #> [1] \"/tmp/RtmpWYOX26/file4abec06b9fa/events-EX1.in\""},{"path":"/reference/write_restart.SIPNET.html","id":null,"dir":"Reference","previous_headings":"","what":"write_restart.SIPNET — write_restart.SIPNET","title":"write_restart.SIPNET — write_restart.SIPNET","text":"Write restart files SIPNET. WARNING: variables produce illegal values < 0 hardcoded correct values!!","code":""},{"path":"/reference/write_restart.SIPNET.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"write_restart.SIPNET — write_restart.SIPNET","text":"","code":"write_restart.SIPNET(   outdir,   runid,   start.time,   stop.time,   settings,   new.state,   RENAME = TRUE,   new.params = FALSE,   inputs,   verbose = FALSE )"},{"path":"/reference/write_restart.SIPNET.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"write_restart.SIPNET — write_restart.SIPNET","text":"outdir output directory runid run ID start.time start date time SDA ensemble stop.time stop date time SDA ensemble settings PEcAn settings object new.state analysis state vector RENAME flag either rename output file new.params list parameters convert different states inputs list model inputs use write.configs.SIPNET verbose decide want print outputs.","code":""},{"path":"/reference/write_restart.SIPNET.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"write_restart.SIPNET — write_restart.SIPNET","text":"NONE","code":""},{"path":"/reference/write_restart.SIPNET.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"write_restart.SIPNET — write_restart.SIPNET","text":"Ann Raiho araiho@nd.edu","code":""},{"path":[]},{"path":"/news/index.html","id":"changed-1-9-1","dir":"Changelog","previous_headings":"","what":"Changed","title":"PEcAn.SIPNET 1.9.1","text":"Breaking: Renamed setting used pass soil hydrology parameters. write.config.SIPNET previously read settings$run$inputs$soilinitcond, now settings$run$inputs$soil_physics better reflect state factors applicable whole run rather initial conditions. (Quianyu Xuan, #3406) model2netcdf.SIPNET longer writes separate <year>.nc.var files every year output. Use PEcAn.utils::nc_write_varfiles() create needed. sipnet2datetime function longer used anywhere therefore removed.","code":""},{"path":"/news/index.html","id":"fixed-1-9-1","dir":"Changelog","previous_headings":"","what":"Fixed","title":"PEcAn.SIPNET 1.9.1","text":"write.config.SIPNET now checks carefully whether optional variable exists initial condition file trying read , therefore printing fewer messages (expectedly) missing variables. (#3545) passed vector multiple input paths, write.config.SIPNET choosing one random; now throws error (Blesson Thomas, #3298). Note single input path per call always intended usage; passed many second bug PEcAn.uncertainty also now fixed. Fixed bug within model2netcdf.SIPNET function assumed constant calculations pecan_start_doy across years (calculations vary depending last date last loop start date current loop), lead incorrect calculations start sub_dates sub_dates_cf jumping years (e.g., 2012-12-31 2013-01-01).","code":""},{"path":[]},{"path":"/news/index.html","id":"license-change-1-9-0","dir":"Changelog","previous_headings":"","what":"License change","title":"PEcAn.SIPNET 1.9.0","text":"PEcAn.SIPNET now distributed BSD three-clause license instead NCSA Open Source license.","code":""},{"path":"/news/index.html","id":"fixed-1-9-0","dir":"Changelog","previous_headings":"","what":"Fixed","title":"PEcAn.SIPNET 1.9.0","text":"met2model.SIPNET() now stops error result contains missing values, allowed SIPNET inputs (#3474). PFT fracLeafFall > 0.5 treated deciduous (previously hardcoded deciduous anything boreal conifers) deciduous PFTs get laiInit=0 simulation start date leafOnDay leafOffDay (previously hardcoded May September) generated Sipnet run script (job.sh) now works correctly, including across machines, met/input/output files specified relative working directory (#3418). Absolute paths continue work always.","code":""},{"path":"/news/index.html","id":"pecansipnet-180","dir":"Changelog","previous_headings":"","what":"PEcAn.SIPNET 1.8.0","title":"PEcAn.SIPNET 1.8.0","text":"Support Sipnet variables read_restart write_restart, integration state data assimilation workflows","code":""},{"path":"/news/index.html","id":"pecansipnet-171","dir":"Changelog","previous_headings":"","what":"PEcAn.SIPNET 1.7.1","title":"PEcAn.SIPNET 1.7.1","text":"changes 1.7.1 earlier recorded single file PEcAn packages; please see https://github.com/PecanProject/pecan/blob/v1.7.1/CHANGELOG.md details.","code":""}]
