[{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jane Doe. Author, maintainer. John Doe. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Doe J, Doe J (2025). PEcAn.ModelName: PEcAn Package Integration ModelName Model. R package version 1.8.1.9000, https://pecanproject.github.io.","code":"@Manual{,   title = {PEcAn.ModelName: PEcAn Package for Integration of the ModelName Model},   author = {Jane Doe and John Doe},   year = {2025},   note = {R package version 1.8.1.9000},   url = {https://pecanproject.github.io}, }"},{"path":"/index.html","id":"a-generic-template-for-adding-a-new-model-to-pecan","dir":"","previous_headings":"","what":"PEcAn Package for Integration of the ModelName Model","title":"PEcAn Package for Integration of the ModelName Model","text":"Adding new model PEcAn easy steps: add modeltype BETY add model PFT BETY use modeltype implement 3 functions described Add tests tests/testthat Update README, documentation Update Dockerfile model_info.json execute pecan new model","code":""},{"path":"/index.html","id":"three-functions","dir":"","previous_headings":"","what":"Three Functions","title":"PEcAn Package for Integration of the ModelName Model","text":"3 functions need implemented, functions need MODEL replaced actual modeltype defined BETY database. write.config.MODEL.R write configuratin file well job launcher used PEcAn. example job execution script template folder. configuration file can also template found based revision number model. use computed results specified defaults trait.values write configuration file based PFT traits found. met2model.MODEL.R convert standard Met CF file model specific file format. allow PEcAn create metereological files specific site model. called meterological data found specific site model combination. model2netcdf.MODEL.R convert model specific output NACP Intercomparison format. function finished PEcAn use generated output use model specific outputs. outputs named YYYY.nc","code":""},{"path":"/index.html","id":"dockerization","dir":"","previous_headings":"","what":"Dockerization","title":"PEcAn Package for Integration of the ModelName Model","text":"PEcAn system leveraging Docker encapsulate code. make easier share new model others, without compile models. goal people able launch model docker, register PEcAn almost immediatly available used. accomplish need modify two files. Dockerfile Dockerfile like Makefile docker. file split two pieces part top actually build binary. specify libraries needed, well build tools compile model. second part, starting second line, install libraries needed run binary copy binary build stage, using COPY --line. model_info.json model_info.json describes model used register model PEcAn. model_info.json fields really required top: name, type, version binary. fields optional good filled . can leave version binary special values updated Dockerfile. image can build can pushed others can leverage model. PEcAn using following naming scheme docker images: pecan/model-<model>-<model_version>:<pecan_version> model model_version used build model, pecan_version version PEcAn model compiled .","code":""},{"path":"/index.html","id":"additional-changes","dir":"","previous_headings":"","what":"Additional Changes","title":"PEcAn Package for Integration of the ModelName Model","text":"README.md file contain basic background information model. minimum, include scientific motivation scope, name(s) maintainer(s), links project homepage, list key publications. relevant publications. /tests/testthat/ package tests cover key functions package, minimum, three functions . documentation Update NAMESPACE, DESCRIPTION man/*.Rd files running","code":"devtools(\"models/<modelname>/\")"},{"path":"/reference/met2model.MODEL.html","id":null,"dir":"Reference","previous_headings":"","what":"Write MODEL met files — met2model.MODEL","title":"Write MODEL met files — met2model.MODEL","text":"Converts met CF file model specific met file. input files calld <.path>/<.prefix>.YYYY.cf","code":""},{"path":"/reference/met2model.MODEL.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write MODEL met files — met2model.MODEL","text":"","code":"met2model.MODEL(in.path, in.prefix, outfolder, overwrite = FALSE)"},{"path":"/reference/met2model.MODEL.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write MODEL met files — met2model.MODEL","text":".path path disk CF file lives .prefix prefix file outfolder location model specific output written. overwrite logical: replace output files already exist?","code":""},{"path":"/reference/met2model.MODEL.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write MODEL met files — met2model.MODEL","text":"OK everything succesful.","code":""},{"path":"/reference/met2model.MODEL.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Write MODEL met files — met2model.MODEL","text":"Rob Kooper","code":""},{"path":"/reference/model2netcdf.MODEL.html","id":null,"dir":"Reference","previous_headings":"","what":"Code to convert MODELS's output into netCDF format — model2netcdf.MODEL","title":"Code to convert MODELS's output into netCDF format — model2netcdf.MODEL","text":"Convert MODEL output NACP Intercomparison format (ALMA using netCDF)","code":""},{"path":"/reference/model2netcdf.MODEL.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Code to convert MODELS's output into netCDF format — model2netcdf.MODEL","text":"","code":"model2netcdf.MODEL(outdir, sitelat, sitelon, start_date, end_date)"},{"path":"/reference/model2netcdf.MODEL.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Code to convert MODELS's output into netCDF format — model2netcdf.MODEL","text":"outdir Location model output sitelat Latitude site sitelon Longitude site start_date Start time simulation end_date End time simulation","code":""},{"path":"/reference/model2netcdf.MODEL.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Code to convert MODELS's output into netCDF format — model2netcdf.MODEL","text":"Rob Kooper","code":""},{"path":"/reference/read_restart.ModelName.html","id":null,"dir":"Reference","previous_headings":"","what":"Read restart template for SDA — read_restart.ModelName","title":"Read restart template for SDA — read_restart.ModelName","text":"Read restart files model.","code":""},{"path":"/reference/read_restart.ModelName.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read restart template for SDA — read_restart.ModelName","text":"","code":"read_restart.ModelName(outdir, runid, stop.time, settings, var.names, params)"},{"path":"/reference/read_restart.ModelName.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read restart template for SDA — read_restart.ModelName","text":"outdir Output directory runid Run ID stop.time Year read settings PEcAn settings object var.names Variable names extracted params parameters required state calculations","code":""},{"path":"/reference/read_restart.ModelName.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read restart template for SDA — read_restart.ModelName","text":"Forecast numeric matrix","code":""},{"path":"/reference/read_restart.ModelName.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read restart template for SDA — read_restart.ModelName","text":"Alexey Shiklomanov","code":""},{"path":"/reference/write.config.MODEL.html","id":null,"dir":"Reference","previous_headings":"","what":"Write MODEL configuration files — write.config.MODEL","title":"Write MODEL configuration files — write.config.MODEL","text":"Writes MODEL config file.","code":""},{"path":"/reference/write.config.MODEL.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write MODEL configuration files — write.config.MODEL","text":"","code":"write.config.MODEL(defaults, trait.values, settings, run.id)"},{"path":"/reference/write.config.MODEL.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write MODEL configuration files — write.config.MODEL","text":"defaults list defaults process trait.values vector samples given trait settings list settings pecan settings file run.id id run","code":""},{"path":"/reference/write.config.MODEL.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write MODEL configuration files — write.config.MODEL","text":"configuration file MODEL given run","code":""},{"path":"/reference/write.config.MODEL.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Write MODEL configuration files — write.config.MODEL","text":"Requires pft xml object, list trait values single model run, name file create","code":""},{"path":"/reference/write.config.MODEL.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Write MODEL configuration files — write.config.MODEL","text":"Rob Kooper","code":""},{"path":"/reference/write_restart.ModelName.html","id":null,"dir":"Reference","previous_headings":"","what":"Write restart template for SDA — write_restart.ModelName","title":"Write restart template for SDA — write_restart.ModelName","text":"Write restart files model","code":""},{"path":"/reference/write_restart.ModelName.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write restart template for SDA — write_restart.ModelName","text":"","code":"write_restart.ModelName(   outdir,   runid,   start.time,   stop.time,   settings,   new.state,   RENAME,   new.params,   inputs )"},{"path":"/reference/write_restart.ModelName.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write restart template for SDA — write_restart.ModelName","text":"outdir outout directory runid run id start.time Time current assimilation step stop.time Time next assimilation step settings pecan settings list new.state Analysis state matrix returned sda.enkf RENAME flag either rename output file new.params optional, additionals params pass write.configs deterministically related parameters updated analysis inputs new input paths updated SDA workflow, passed write.configs","code":""},{"path":"/reference/write_restart.ModelName.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Write restart template for SDA — write_restart.ModelName","text":"Alexey Shiklomanov","code":""},{"path":[]},{"path":"/news/index.html","id":"license-change-1-8-1","dir":"Changelog","previous_headings":"","what":"License change","title":"PEcAn.ModelName 1.8.1","text":"PEcAn.ModelName now distributed BSD three-clause license instead NCSA Open Source license.","code":""},{"path":"/news/index.html","id":"added-1-8-1","dir":"Changelog","previous_headings":"","what":"Added","title":"PEcAn.ModelName 1.8.1","text":"Added NEWS.md file track changes package. Prior point changes tracked main CHANGELOG PEcAn repository.","code":""}]
